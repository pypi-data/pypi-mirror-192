# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from apeman.model import model_instance_dto_pb2 as apeman_dot_model_dot_model__instance__dto__pb2
from apeman.model import model_instance_task_dto_pb2 as apeman_dot_model_dot_model__instance__task__dto__pb2
from apeman.model.openapi import apeman_open_api_pb2 as apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ApemanModelOpenApiStub(object):
    """definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Report = channel.unary_unary(
                '/ApemanModelOpenApi/Report',
                request_serializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.TaskStatusReportRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ReportAndGetStatus = channel.unary_unary(
                '/ApemanModelOpenApi/ReportAndGetStatus',
                request_serializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.TaskStatusReportRequest.SerializeToString,
                response_deserializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.TaskStatusReportResponse.FromString,
                )
        self.GetModelEndpoint = channel.unary_unary(
                '/ApemanModelOpenApi/GetModelEndpoint',
                request_serializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.GetModelEndpointRequest.SerializeToString,
                response_deserializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.GetModelEndpointResponse.FromString,
                )
        self.CreateModelInstanceTask = channel.unary_unary(
                '/ApemanModelOpenApi/CreateModelInstanceTask',
                request_serializer=apeman_dot_model_dot_model__instance__task__dto__pb2.ModelInstanceTaskDTO.SerializeToString,
                response_deserializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.CreateModelInstanceTaskResponse.FromString,
                )
        self.GetModelInstanceTask = channel.unary_unary(
                '/ApemanModelOpenApi/GetModelInstanceTask',
                request_serializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.GetModelInstanceTaskRequest.SerializeToString,
                response_deserializer=apeman_dot_model_dot_model__instance__task__dto__pb2.ModelInstanceTaskDTO.FromString,
                )
        self.BatchGetModelInstanceTask = channel.unary_unary(
                '/ApemanModelOpenApi/BatchGetModelInstanceTask',
                request_serializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.BatchGetModelInstanceTaskRequest.SerializeToString,
                response_deserializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.BatchGetModelInstanceTaskResponse.FromString,
                )
        self.CancelModelInstanceTask = channel.unary_unary(
                '/ApemanModelOpenApi/CancelModelInstanceTask',
                request_serializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.CancelModelInstanceTaskRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetModelInstanceById = channel.unary_unary(
                '/ApemanModelOpenApi/GetModelInstanceById',
                request_serializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.GetModelInstanceByIdRequest.SerializeToString,
                response_deserializer=apeman_dot_model_dot_model__instance__dto__pb2.ModelInstanceDTO.FromString,
                )


class ApemanModelOpenApiServicer(object):
    """definition.
    """

    def Report(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReportAndGetStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetModelEndpoint(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateModelInstanceTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetModelInstanceTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetModelInstanceTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelModelInstanceTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetModelInstanceById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApemanModelOpenApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Report': grpc.unary_unary_rpc_method_handler(
                    servicer.Report,
                    request_deserializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.TaskStatusReportRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ReportAndGetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.ReportAndGetStatus,
                    request_deserializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.TaskStatusReportRequest.FromString,
                    response_serializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.TaskStatusReportResponse.SerializeToString,
            ),
            'GetModelEndpoint': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModelEndpoint,
                    request_deserializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.GetModelEndpointRequest.FromString,
                    response_serializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.GetModelEndpointResponse.SerializeToString,
            ),
            'CreateModelInstanceTask': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateModelInstanceTask,
                    request_deserializer=apeman_dot_model_dot_model__instance__task__dto__pb2.ModelInstanceTaskDTO.FromString,
                    response_serializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.CreateModelInstanceTaskResponse.SerializeToString,
            ),
            'GetModelInstanceTask': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModelInstanceTask,
                    request_deserializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.GetModelInstanceTaskRequest.FromString,
                    response_serializer=apeman_dot_model_dot_model__instance__task__dto__pb2.ModelInstanceTaskDTO.SerializeToString,
            ),
            'BatchGetModelInstanceTask': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetModelInstanceTask,
                    request_deserializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.BatchGetModelInstanceTaskRequest.FromString,
                    response_serializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.BatchGetModelInstanceTaskResponse.SerializeToString,
            ),
            'CancelModelInstanceTask': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelModelInstanceTask,
                    request_deserializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.CancelModelInstanceTaskRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetModelInstanceById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModelInstanceById,
                    request_deserializer=apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.GetModelInstanceByIdRequest.FromString,
                    response_serializer=apeman_dot_model_dot_model__instance__dto__pb2.ModelInstanceDTO.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ApemanModelOpenApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ApemanModelOpenApi(object):
    """definition.
    """

    @staticmethod
    def Report(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ApemanModelOpenApi/Report',
            apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.TaskStatusReportRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReportAndGetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ApemanModelOpenApi/ReportAndGetStatus',
            apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.TaskStatusReportRequest.SerializeToString,
            apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.TaskStatusReportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetModelEndpoint(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ApemanModelOpenApi/GetModelEndpoint',
            apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.GetModelEndpointRequest.SerializeToString,
            apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.GetModelEndpointResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateModelInstanceTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ApemanModelOpenApi/CreateModelInstanceTask',
            apeman_dot_model_dot_model__instance__task__dto__pb2.ModelInstanceTaskDTO.SerializeToString,
            apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.CreateModelInstanceTaskResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetModelInstanceTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ApemanModelOpenApi/GetModelInstanceTask',
            apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.GetModelInstanceTaskRequest.SerializeToString,
            apeman_dot_model_dot_model__instance__task__dto__pb2.ModelInstanceTaskDTO.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchGetModelInstanceTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ApemanModelOpenApi/BatchGetModelInstanceTask',
            apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.BatchGetModelInstanceTaskRequest.SerializeToString,
            apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.BatchGetModelInstanceTaskResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelModelInstanceTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ApemanModelOpenApi/CancelModelInstanceTask',
            apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.CancelModelInstanceTaskRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetModelInstanceById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ApemanModelOpenApi/GetModelInstanceById',
            apeman_dot_model_dot_openapi_dot_apeman__open__api__pb2.GetModelInstanceByIdRequest.SerializeToString,
            apeman_dot_model_dot_model__instance__dto__pb2.ModelInstanceDTO.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
