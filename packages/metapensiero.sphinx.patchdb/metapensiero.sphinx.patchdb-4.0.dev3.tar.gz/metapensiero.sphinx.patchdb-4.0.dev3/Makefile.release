# -*- coding: utf-8 -*-
# :Project:   PatchDB -- Release related targets
# :Created:   gio 17 nov 2016 19:13:38 CET
# :Author:    Lele Gaifax <lele@metapensiero.it>
# :License:   GNU General Public License version 3 or later
# :Copyright: © 2016, 2019, 2022 Lele Gaifax
#

PACKAGE_NAME := $(shell python -c "from tomli import load;print(load(open('pyproject.toml', 'rb'))['project']['name'])")
VERSION := $(shell python -c "from tomli import load;print(load(open('pyproject.toml', 'rb'))['project']['version'])")
DIST_FILE_NAME := $(PACKAGE_NAME)-$(VERSION)

.PHONY: assert-clean-tree
assert-clean-tree:
	@(test -z "$(shell git status -s --untracked=no)" || \
	  (echo "UNCOMMITTED STUFF" && false))

.PHONY: assert-master-branch
assert-master-branch:
	@(test "$(shell git rev-parse --abbrev-ref HEAD)" = "master" || \
	  (echo "NOT IN MASTER BRANCH" && false))

VERSION_PART = minor

.PHONY: release
release: assert-master-branch assert-clean-tree
	bump2version $(VERSION_PART)
	$(MAKE) update-catalogs
	@echo ">>>"
	@echo ">>> Do your duties (update CHANGES.rst for example), then"
	@echo ">>> execute “make tag-release”."
	@echo ">>>"

.PHONY: dev-release
dev-release: VERSION_PART = dev
dev-release: release

.PHONY: tag-release
tag-release: assert-master-branch check-release-date check-long-description-markup
	git commit -a -m "Release $(VERSION)"
	git tag -a -m "Version $(VERSION)" v$(VERSION)

.PHONY: check-long-description-markup
check-long-description-markup:
	pyproject-build --sdist
	twine check dist/$(DIST_FILE_NAME).tar.gz

.PHONY: check-release-date
check-release-date:
	@fgrep -q "$(VERSION) ($(shell date --iso-8601))" CHANGES.rst \
	  || (echo "ERROR: release date of version $(VERSION) not set in CHANGES.rst"; exit 1)

.PHONY: upload
upload: assert-master-branch assert-clean-tree clean compile-catalogs
	pyproject-build
	twine upload dist/$(DIST_FILE_NAME).tar.gz dist/$(DIST_FILE_NAME)*.whl

.PHONY: publish
publish: upload
	git push
	git push --tags
