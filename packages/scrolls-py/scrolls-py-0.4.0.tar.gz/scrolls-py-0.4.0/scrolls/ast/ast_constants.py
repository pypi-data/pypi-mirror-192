"""
Numeric and string constants for the language.
"""

import enum
import typing as t

__all__ = (
    "EOF",
    "COMMAND_SEP",
    "BLOCK_OPEN",
    "BLOCK_CLOSE",
    "OPEN_ARGS",
    "CLOSE_ARGS",
    "CONTROL_SIGIL",
    "EXPANSION_SIGIL",
    "SPREAD_SIGIL",
    "COMMENT_SIGIL",
    "QUOTE",
    "ESCAPE_SIGIL",
    "TokenType",
    "TokenizeConsumeRestState",
    "ASTNodeType"
)


EOF: str = ""
"""End-of-file indicator."""

COMMAND_SEP: t.Sequence[str] = [";", "\n"]
"""Command separator characters."""

BLOCK_OPEN: str = "{"
"""Open character for a code block."""

BLOCK_CLOSE: str = "}"
"""Close character for a code block."""

OPEN_ARGS: str = "("
"""Open character for a set of arguments."""

CLOSE_ARGS: str = ")"
"""Close character for a set of arguments."""

CONTROL_SIGIL = "!"
"""Character introducing a control call."""

EXPANSION_SIGIL = "$"
"""Character introducing variable and call expansion."""

SPREAD_SIGIL = "^"
"""Character indicating spread expansion."""

COMMENT_SIGIL = "#"
"""Character introducing a comment."""

QUOTE = "\""
"""Character for quoting strings."""

ESCAPE_SIGIL = "\\"
"""Character than introduces escape sequences in quoted literals."""


class TokenType(enum.Enum):
    """
    All possible token types generated by `scrolls.ast.tokenizer.Tokenizer`.
    """

    OPEN_ARGS = 1
    CLOSE_ARGS = 2
    OPEN_BLOCK = 3
    CLOSE_BLOCK = 4
    EXPANSION_SIGIL = 5
    SPREAD_SIGIL = 6
    CONTROL_SIGIL = 7
    COMMAND_SEP = 8
    STRING_LITERAL = 9
    EOF = 10
    WHITESPACE = 11
    COMMENT = 12


class TokenizeConsumeRestState(enum.Enum):
    """
    Internal `scrolls.ast.tokenizer.Tokenizer` state for the CONSUME_REST feature.
    """

    OFF = 0
    COUNTING = 1
    CONSUME = 2


class ASTNodeType(enum.Enum):
    """
    All possible AST node types.
    """

    NONE = 0
    """AST nodes with this type should be ignored."""

    EOF = 1
    """A node representing EOF."""

    ROOT = 2
    """The root AST node."""

    STRING = 3
    """A string literal."""

    COMMAND_CALL = 4
    """The parent node for a command call."""

    COMMAND_ARGUMENTS = 5
    """The parent node for a list of command arguments."""

    BLOCK = 6
    """A block of statements."""

    CONTROL_CALL = 7
    """The parent node for a control call."""

    CONTROL_ARGUMENTS = 8
    """The parent node for a list of control arguments."""

    EXPANSION = 9
    """The parent node for an expansion, either variable or call."""

    EXPANSION_SINGLE = 10
    """Indicates an expansion should use normal expansion."""

    EXPANSION_SPREAD = 11
    """Indicates an expansion should use vector expansion."""

    EXPANSION_VAR = 12
    """Parent node for a variable expansion."""

    EXPANSION_CALL = 13
    """Parent node for an expansion call."""

    EXPANSION_ARGUMENTS = 14
    """Parent node for a list of expansion arguments. Applies only to calls."""
