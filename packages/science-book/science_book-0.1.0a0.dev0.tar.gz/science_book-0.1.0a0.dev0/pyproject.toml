# PEP-517 compliant build
# See: https://www.python.org/dev/peps/pep-0517/
# See: https://python-poetry.org/docs/pyproject/#poetry-and-pep-517
[build-system]
requires = ["poetry-core>=1.1.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "science-book"
version = "0.1.0-a0.dev0"
description = "A package to help everyday users with science calculations"
authors = ["Gary Hammock <ghammock79@gmail.com>"]
maintainers = ["Gary Hammock <ghammock79@gmail.com>"]
license = "mit"
readme = "README.md"
homepage = "https://github.com/ghammock/science-book"
repository = "https://github.com/ghammock/science-book"
documentation = "https://github.com/ghammock/science-book/docs"
keywords = [
    "science",
    "physics",
    "engineering"
]
# For a list of valid classifiers, see: https://pypi.org/classifiers/
# N.B. Some classifiers are automatically set by Poetry, see: https://python-poetry.org/docs/pyproject/#classifiers
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Intended Audience :: Science/Research",
    "Typing :: Typed",
]
packages = [
    { include = "science_book", from = "src" }
]
include = [
    { path = "tests", format = "sdist" },
    "README.md",
    "LICENSE",
    "CHANGELOG.md"
]

[tool.poetry.urls]
changelog = "https://github.com/ghammock/science-book/blob/main/CHANGELOG.md"
download = "https://github.com/ghammock/science-book/releases"
issues = "https://github.com/ghammock/science-book/issues"

[tool.poetry.dependencies]
python = "^3.8"
importlib-metadata = { version = "^5.0.0", python = "<3.10" }

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.4"
black = "^22.10.0"
darglint = "^1.8.1"
flake8 = "^5.0.4"
flake8-broken-line = "^0.6.0"
flake8-bugbear = "^22.9.23"
flake8-builtins = "^2.0.0"
flake8-comprehensions = "^3.10.0"
flake8-eradicate = "^1.4.0"
flake8-isort = "^5.0.0"
flake8-pie = "^0.16.0"
flake8-simplify = "^0.19.3"
flake8-type-checking = "^2.1.3"
flake8-typing-imports = "^1.13.0"
isort = { version = "^5.10.1", extras = ["colors"] }
pep8-naming = "^0.13.2"

[tool.poetry.group.typing.dependencies]
mypy = ">=0.982"

[tool.poetry.group.test.dependencies]
pytest = "^7.1.3"
pytest-cov = "^4.0.0"
pytest-html = "^3.1.1"
pytest-mock = "^3.10.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^5.2.3"
sphinx-autodoc-typehints = "^1.19.4"
sphinx-rtd-theme = "^1.0.0"

# black configuration
# See: https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html
[tool.black]
color = true
line-length = 120
target-version = ['py39', 'py310']
preview = true
exclude = '''
(
  /(
    # These are ordinarily excluded by default because of .gitignore, but they are
    # here for manual invocation or for Makefile target invocation.
    | \.git
    | \.idea
    | \.mypy_cache
    | \.pytest_cache
    | \.?venv
    | \.?egg.*
    | __pycache__
  )/
)
'''

# coverage.py configuration
# See: https://coverage.readthedocs.io/en/latest/config.html
[tool.coverage.run]
branch = true
command_line = "-m pytest"
source = ["src/science_book/*"]
omit = [
    "*/__init__.py",
    "*/tests/*",
]
parallel = true

[tool.coverage.report]
show_missing = true
skip_empty = true
exclude_lines = [
    # Don't complain if tests don't hit defensive assertion code:
    '''\#\s*pragma: no cover''',
    '''^\s*raise AssertionError\b''',
    '''^\s*raise NotImplementedError\b''',
    '''^\s*return NotImplemented\b''',
    '''^\s*raise$''',
    '''^if __name__ == .__main__.:$''',
    '''^\s*if TYPE_CHECKING:'''
]

[tool.coverage.html]
directory = "tests/coverage/html"

# isort configuration
# See: https://pycqa.github.io/isort/docs/configuration/options.html
# See: https://pycqa.github.io/isort/docs/configuration/profiles.html
# See: https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html
[tool.isort]
atomic = true
color_output = true
known_first_party = ["science_book"]
known_local_folder = ["tests"]
known_third_party = []
lines_after_imports = 2
profile = "black"
src_paths = ["src", "tests"]
skip_glob = ["tests/coverage/*"]

# Mypy Configuration
# See: https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
pretty = true
files = "**/*.py"
mypy_path = "src"
exclude = ["docs", "tests"]
explicit_package_bases = true
namespace_packages = true
show_column_numbers = true
show_error_codes = true
strict = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = []
ignore_missing_imports = true

# pytest configuration
# See: https://docs.pytest.org/en/stable/reference/reference.html#configuration-options
[tool.pytest.ini_options]
# You can add -ra to the options below to only show summary output.
addopts = [
    "-v",
    "--tb=auto",
    "--showlocals",
    "--color=yes",
    "--doctest-modules",
    "--ignore=docs",
]
junit_family = "xunit2"
minversion = "6.0"
python_files = [
    "test_*.py"
]
pythonpath = "src"
testpaths = "tests"
