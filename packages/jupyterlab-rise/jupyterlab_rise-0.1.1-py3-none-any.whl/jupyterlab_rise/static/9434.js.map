{"version":3,"file":"9434.bundle.js","mappings":"2MAYA,MAmBA,EADgB,CAlBU,CACtBA,GAAI,2CACJC,SAAU,EAAAC,yBACVC,SAAWC,IACP,MAAMC,EAAS,EAAAC,iBAAA,eACTC,EAAM,EAAAC,OAAA,KAAYH,EAAOI,MAAO,WAChCC,EAAyD,QAAzC,EAAAC,WAAA,UAAqB,iBAM3C,OALiBC,GACNF,EACD,IAAI,EAAAG,2BAA2BC,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGH,GAAU,CAAEL,SAC3E,IAAI,EAAAS,YAEA,G","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/docprovider-extension/lib/index.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module docprovider-extension\n */\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { IDocumentProviderFactory, ProviderMock, WebSocketProviderWithLocks } from '@jupyterlab/docprovider';\nimport { ServerConnection } from '@jupyterlab/services';\n/**\n * The default document provider plugin\n */\nconst docProviderPlugin = {\n    id: '@jupyterlab/docprovider-extension:plugin',\n    provides: IDocumentProviderFactory,\n    activate: (app) => {\n        const server = ServerConnection.makeSettings();\n        const url = URLExt.join(server.wsUrl, 'api/yjs');\n        const collaborative = PageConfig.getOption('collaborative') == 'true' ? true : false;\n        const factory = (options) => {\n            return collaborative\n                ? new WebSocketProviderWithLocks(Object.assign(Object.assign({}, options), { url }))\n                : new ProviderMock();\n        };\n        return factory;\n    }\n};\n/**\n * Export the plugins as default.\n */\nconst plugins = [docProviderPlugin];\nexport default plugins;\n//# sourceMappingURL=index.js.map"],"names":["id","provides","IDocumentProviderFactory","activate","app","server","ServerConnection","url","URLExt","wsUrl","collaborative","PageConfig","options","WebSocketProviderWithLocks","Object","assign","ProviderMock"],"sourceRoot":""}