{"version":3,"file":"847.c069d5994d9b3f186f92.js?v=c069d5994d9b3f186f92","mappings":"uRASA,MAAMA,EAAS,EAAQ,KACjBC,EAAqB,IAAIC,SAASC,IACpCH,EAAOI,qBAAuBD,CAAO,ICV5BE,EAAWC,IAEbC,EADUP,EAAA,eACDM,GCGPE,EAAa,CAACC,EAAKC,EAAO,CAAEC,gBAAiB,YACtD,MAAMC,EAASZ,EAAA,QACTa,EAAMD,EAAOH,EAAIK,YACvBd,EAAOe,MAAMC,IAAIP,EAAKI,GACtB,MAAMI,EARkB,EAACJ,EAAKK,KAEvBC,EADSnB,EAAA,2BACDa,EAAKK,GAMAE,CAAoBP,EAAKJ,EAAIK,YAC3CI,GAAwB,IAAjBD,EAAqBP,EAAKC,gBAAkBM,EACnDI,EAAOrB,EAAA,MACPsB,EAAOV,EAAOM,GACpB,IAQI,MACMK,GAAcC,EADAxB,EAAA,kBACYsB,EAAMJ,EAAML,EAAKJ,EAAIK,YACrD,GAAIT,EAAQkB,GACR,MAAM,IAAIE,MAAM,gCAAgCF,KAIpD,MAAMG,EAAO,IAAIC,WAAW3B,EAAO4B,OAAOC,OAAQP,EAAMC,GAAaO,QAGrE,OAFAT,EAAKC,EAAMJ,GACXG,EAAKR,EAAKJ,EAAIK,YACPY,CAMX,CAJA,MAAOK,GAGH,MAFAV,EAAKC,EAAMJ,GACXG,EAAKR,EAAKJ,EAAIK,YACRiB,CACV,GChCSC,EAAW,CAACvB,EAAKwB,KAC1B,MAAMC,GALahB,EAKST,EAAIK,YAHzBoB,EADOlC,EAAA,qBACDkB,IAFK,IAACA,EAMnB,MAAMN,EAASZ,EAAA,QACTmC,EAAavB,EAAOsB,GACpBrB,EAAMD,EAAOH,EAAIK,YACvBd,EAAOe,MAAMC,IAAIP,EAAKI,GACtB,MAAMQ,EAAOrB,EAAA,MACb,IASI,MACMuB,GAAca,EADFpC,EAAA,gBACYmC,EAAYD,EAAOrB,EAAKJ,EAAIK,WAAYmB,QAAqCA,EAAQ,GACnH,GAAI5B,EAAQkB,GACR,MAAM,IAAIE,MAAM,gCAAgCF,KAIpD,MAAMG,EAAO,IAAIC,WAAW3B,EAAO4B,OAAOC,OAAQM,EAAYZ,GAAaO,QAG3E,OAFAT,EAAKc,EAAYD,GACjBb,EAAKR,EAAKJ,EAAIK,YACPY,CAMX,CAJA,MAAOK,GAGH,MAFAV,EAAKc,EAAYD,GACjBb,EAAKR,EAAKJ,EAAIK,YACRiB,CACV,GChCSM,EAAa,IACfrC,EAAA,mBAEEsC,EAAsB,CAACC,EAAM9B,EAAK+B,EAAM9B,EAAO,CAAEC,gBAAiB,YAC3E,MAAMC,EAASZ,EAAA,QACTa,EAAMD,EAAOH,EAAIK,YACvBd,EAAOe,MAAMC,IAAIP,EAAKI,GACtB,MAAM4B,EAAQ7B,EAAO4B,EAAK1B,YAC1Bd,EAAOe,MAAMC,IAAIwB,EAAMC,GACvB,MAAMxB,EAbkB,EAACJ,EAAKK,KAEvBC,EADSnB,EAAA,2BACDa,EAAKK,GAWA,CAAoBL,EAAKJ,EAAIK,YAC3CI,GAAwB,IAAjBD,EAAqBP,EAAKC,gBAAkBM,EACnDI,EAAOrB,EAAA,MACPsB,EAAOV,EAAOM,GACpB,IACI,MACMK,GAAcC,EADAxB,EAAA,4BACYuC,EAAMjB,EAAMJ,EAAML,EAAKJ,EAAIK,WAAY2B,EAAOD,EAAK1B,YACnF,GAAIT,EAAQkB,GACR,MAAM,IAAIE,MAAM,gCAAgCF,KAIpD,MAAMG,EAAO,IAAIC,WAAW3B,EAAO4B,OAAOC,OAAQP,EAAMC,GAAaO,QAGrE,OAFAT,EAAKC,EAAMJ,GACXG,EAAKR,EAAKJ,EAAIK,YACPY,CAMX,CAJA,MAAOK,GAGH,MAFAV,EAAKC,EAAMJ,GACXG,EAAKR,EAAKJ,EAAIK,YACRiB,CACV,GC9BSW,EAAa,IACf1C,EAAA,mBAEE2C,EAAoB,CAACC,EAAMnC,EAAK+B,EAAMP,KAC/C,MAAMC,GARahB,EAQST,EAAIK,YANzBoB,EADOlC,EAAA,qBACDkB,IAFK,IAACA,EASnB,MAAMN,EAASZ,EAAA,QACTmC,EAAavB,EAAOsB,GACpBrB,EAAMD,EAAOH,EAAIK,YACvBd,EAAOe,MAAMC,IAAIP,EAAKI,GAEtB,MAAM4B,EAAQ7B,EAAO4B,EAAK1B,YAC1Bd,EAAOe,MAAMC,IAAIwB,EAAMC,GACvB,MAAMpB,EAAOrB,EAAA,MACb,IASI,MACMuB,GAAca,EADFpC,EAAA,0BACY4C,EAAMT,EAAYD,EAAOrB,EAAKJ,EAAIK,WAAY2B,EAAOD,EAAK1B,WAAYmB,QAAqCA,EAAQ,GACjJ,GAAI5B,EAAQkB,GACR,MAAM,IAAIE,MAAM,gCAAgCF,KAIpD,MAAMG,EAAO,IAAIC,WAAW3B,EAAO4B,OAAOC,OAAQM,EAAYZ,GAAaO,QAI3E,OAHAT,EAAKc,EAAYD,GACjBb,EAAKR,EAAKJ,EAAIK,YACdO,EAAKoB,EAAOD,EAAK1B,YACVY,CAOX,CALA,MAAOK,GAIH,MAHAV,EAAKc,EAAYD,GACjBb,EAAKR,EAAKJ,EAAIK,YACdO,EAAKoB,EAAOD,EAAK1B,YACXiB,CACV,GCpCG,MAAMc,EAAQC,IAAS,OAVwBC,OAUd,EAVuBC,OAUf,EAV8BC,EAUd,YAC5D,IAAIC,EACJ,MAAMC,EAAM,EAAQ,KNZoB,IAAUJ,EAASC,EAAYI,EAAGH,EMa1EjD,EAAA,KAAgF,QAAhEkD,EAAKJ,QAAmCA,EAAOK,EAAIE,eAA4B,IAAPH,EAAgBA,EAAKC,SNb3DJ,OAaP,EAbgBC,OAaR,EAboBI,OAaZ,EAbeH,EAaP,kBAC7DhD,CACV,EAbW,IAAKmD,IAAMA,EAAIlD,WAAU,SAAUC,EAASmD,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKR,EAAUS,KAAKF,GAAkC,CAAvB,MAAOzB,GAAKuB,EAAOvB,EAAI,CAAE,CAC1F,SAAS4B,EAASH,GAAS,IAAMC,EAAKR,EAAiB,MAAEO,GAAkC,CAAvB,MAAOzB,GAAKuB,EAAOvB,EAAI,CAAE,CAC7F,SAAS0B,EAAKG,GAJlB,IAAeJ,EAIaI,EAAOC,KAAO1D,EAAQyD,EAAOJ,QAJ1CA,EAIyDI,EAAOJ,MAJhDA,aAAiBJ,EAAII,EAAQ,IAAIJ,GAAE,SAAUjD,GAAWA,EAAQqD,EAAQ,KAIjBM,KAAKP,EAAWI,EAAW,CAC7GF,GAAMR,EAAYA,EAAUc,MAAMhB,EAASC,GAAc,KAAKU,OAClE,IMQJ,EAbW,KAFgEN,OAUnB,KARlCA,EAAIlD,WAAU,SAAUC,EAASmD,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKR,EAAUS,KAAKF,GAAkC,CAAvB,MAAOzB,GAAKuB,EAAOvB,EAAI,CAAE,CAC1F,SAAS4B,EAASH,GAAS,IAAMC,EAAKR,EAAiB,MAAEO,GAAkC,CAAvB,MAAOzB,GAAKuB,EAAOvB,EAAI,CAAE,CAC7F,SAAS0B,EAAKG,GAJlB,IAAeJ,EAIaI,EAAOC,KAAO1D,EAAQyD,EAAOJ,QAJ1CA,EAIyDI,EAAOJ,MAJhDA,aAAiBJ,EAAII,EAAQ,IAAIJ,GAAE,SAAUjD,GAAWA,EAAQqD,EAAQ,KAIjBM,KAAKP,EAAWI,EAAW,CAC7GF,GAAMR,EAAYA,EAAUc,MAAMhB,EAASC,GAAc,KAAKU,OAClE,IAPwC,IAAUX,EAASC,EAAYI,EAAGH,CAe5E,C,UCfF,IAEIe,EAFAhE,OAA2B,IAAXA,EAAyBA,EAAS,CAAC,EACnDiE,EAAkB,CAAC,EAEvB,IAAKD,KAAOhE,EACNA,EAAOkE,eAAeF,KACxBC,EAAgBD,GAAOhE,EAAOgE,IAGlC,IAkBIG,EAlBAC,EAAa,GACbC,EAAMrE,EAAiB,UAAKsE,QAAQC,KAAKC,KAAKF,SAClD,IAAKN,KAAOC,EACNA,EAAgBC,eAAeF,KACjChE,EAAOgE,GAAOC,EAAgBD,IAGlCC,EAAkB,KACdjE,EAAkB,YAAGoE,EAAapE,EAAkB,WACpDA,EAAoB,cAAGyE,YAAczE,EAAoB,aACzDA,EAAa,OAAG0E,MAAQ1E,EAAa,MAKd,iBAAhB2E,aACTC,EAAM,mCAGR,IAUI/C,EAAQD,EAVRiD,GAAQ,EAWZ,SAASC,EAA2BrE,GAClCoB,EAASpB,EACTT,EAAc,MAAI,IAAI+E,UAAUtE,GAChCT,EAAe,OAAI4B,EAAS,IAAID,WAAWlB,EAC7C,CACqBT,EAAuB,eAA5C,IACIgF,EACAC,EAAe,GACfC,EAAa,GACbC,EAAgB,GAiChBC,EAAkB,EAClBC,EAAuB,KACvBC,EAAwB,KA0B5B,SAASV,EAAMW,GAUb,MATIvF,EAAgB,SAClBA,EAAgB,QAAEuF,GAGpBlB,EADAkB,GAAQ,IAERV,GAAQ,EACRW,WAAa,EACbD,EAAO,SAAWA,EAAO,KACjB,IAAIZ,YAAYc,aAAaF,EAEvC,CAuEA,SAASG,EAAqBC,GAC5B,KAAOA,EAAUC,OAAS,GAAG,CAC3B,IAAIC,EAAWF,EAAUG,QACzB,GAAuB,mBAAZD,EAAX,CAIA,IAAIE,EAAOF,EAASE,KACA,iBAATA,OACYC,IAAjBH,EAASI,IACXjB,EAAUkB,IAAIH,EAAdf,GAEAA,EAAUkB,IAAIH,EAAdf,CAAoBa,EAASI,KAG/BF,OAAsBC,IAAjBH,EAASI,IAAoB,KAAOJ,EAASI,IATpD,MAFEJ,EAAS7F,EAab,CACF,CACA,SAASmG,EAA0BjF,GACjC,IAGE,OAFAiD,EAAWiC,KAAMlF,EAAOW,EAAOf,WAAa,QAAW,IACvDgE,EAA2BX,EAAWtC,QAC/B,CACI,CAAX,MAAOE,GAAI,CACf,CA7GA/B,EAAwB,gBAAI,CAAC,EAC7BA,EAAwB,gBAAI,CAAC,EAkI7B,IAsCIqG,EAtCAC,EAAgB,CAAEC,EAjNtB,SAAwBC,EAAWC,EAAUC,EAAMX,GACjDnB,EAAM,qBAAuB,CAAC6B,GAAsB,mBAAoBC,EAAMX,GAAc,oBAC9F,EA+MyCY,EArBzC,SAAiCC,GAC/B,IA1LeC,EA0LXC,EAAUlF,EAAOgE,OAEjBmB,EAAc,WAClB,IAFAH,KAAkC,GAEdG,EAClB,OAAO,EAET,IAAK,IAAIC,EAAU,EAAGA,GAAW,EAAGA,GAAW,EAAG,CAChD,IAAIC,EAAoBH,GAAW,EAAI,GAAME,GAI7C,GAHAC,EAAoBC,KAAKC,IAAIF,EAAmBL,EAAgB,WAE9CT,EADJe,KAAKC,IAAIJ,IAnMVF,EAmM+BK,KAAKE,IAAIR,EAAeK,IAAoB,MAlMvE,IACjBJ,GAiMwF,MAjMvEA,EAiMuE,OA/LnFA,KAkMH,OAAO,CAEX,CACA,OAAO,CACT,EAIqEQ,EAHrE,SAAsBC,GAEtB,GA4CA,SAASC,EAAIC,GASX,SAASC,IACHpB,IACJA,GAAY,EACZrG,EAAkB,WAAI,EAClB6E,IAzONa,EAAqBR,GA2OflF,EAA6B,sBAAGA,EAA6B,uBAzOrE,WACE,GAAIA,EAAgB,QAElB,IADgC,mBAArBA,EAAgB,UAAiBA,EAAgB,QAAI,CAACA,EAAgB,UAC1EA,EAAgB,QAAE4F,QAYP8B,EAXH1H,EAAgB,QAAE8F,QAYnCX,EAAcwC,QAAQD,GADxB,IAAsBA,EARpBhC,EAAqBP,EACvB,CAkOIyC,IACF,CAhBAJ,EAAOA,GAAQpD,EACXgB,EAAkB,IAzOxB,WACE,GAAIpF,EAAe,OAEjB,IAD+B,mBAApBA,EAAe,SAAiBA,EAAe,OAAI,CAACA,EAAe,SACvEA,EAAe,OAAE4F,QAmBP8B,EAlBH1H,EAAe,OAAE8F,QAmBjCb,EAAa0C,QAAQD,GADvB,IAAqBA,EAfnBhC,EAAqBT,EACvB,CAoOE4C,GACIzC,EAAkB,IAYlBpF,EAAkB,WACpBA,EAAkB,UAAE,cACpB8H,YAAW,WACTA,YAAW,WACT9H,EAAkB,UAAE,GACtB,GAAG,GACHyH,GACF,GAAG,IAEHA,KAEJ,CAEA,GAzEAzH,EAA2B,mBAAI,WAC7B,OAAQA,EAA2B,mBAAIA,EAAY,IAAK,GAAG+D,MAAM,KAAMgE,UACzE,EACA/H,EAAgB,QAAI,WAClB,OAAQA,EAAgB,QAAIA,EAAY,IAAK,GAAG+D,MAAM,KAAMgE,UAC9D,EACA/H,EAAc,MAAI,WAChB,OAAQA,EAAc,MAAIA,EAAY,IAAK,GAAG+D,MAAM,KAAMgE,UAC5D,EACA/H,EAAsB,cAAI,WACxB,OAAQA,EAAsB,cAAIA,EAAY,IAAK,GAAG+D,MAAM,KAAMgE,UACpE,EACA/H,EAA4B,oBAAI,WAC9B,OAAQA,EAA4B,oBAAIA,EAAY,IAAK,GAAG+D,MAAM,KAAMgE,UAC1E,EACA/H,EAAyB,iBAAI,WAC3B,OAAQA,EAAyB,iBAAIA,EAAY,IAAK,GAAG+D,MAAM,KAAMgE,UACvE,EACA/H,EAAiC,yBAAI,WACnC,OAAQA,EAAiC,yBAAIA,EAAY,IAAK,GAAG+D,MAAM,KAAMgE,UAC/E,EACA/H,EAAuB,eAAI,WACzB,OAAQA,EAAuB,eAAIA,EAAY,IAAK,GAAG+D,MAAM,KAAMgE,UACrE,EACA/H,EAAyB,iBAAI,WAC3B,OAAQA,EAAyB,iBAAIA,EAAY,IAAK,GAAG+D,MAAM,KAAMgE,UACvE,EACA/H,EAAkC,0BAAI,WACpC,OAAQA,EAAkC,0BAAIA,EAAY,IAAK,GAAG+D,MAAM,KAAMgE,UAChF,EACA/H,EAAmC,2BAAI,WACrC,OAAQA,EAAmC,2BAAIA,EAAY,IAAK,GAAG+D,MAAM,KAAMgE,UACjF,EACA/H,EAAyB,iBAAI,WAC3B,OAAQA,EAAyB,iBAAIA,EAAY,IAAK,GAAG+D,MAAM,KAAMgE,UACvE,EAGAzC,EAAwB,SAAS0C,IAC1B3B,GAAWkB,IACXlB,IAAWf,EAAwB0C,EAC1C,EA+BAhI,EAAY,IAAIuH,EACZvH,EAAgB,QAElB,IADgC,mBAArBA,EAAgB,UAAiBA,EAAgB,QAAI,CAACA,EAAgB,UAC1EA,EAAgB,QAAE4F,OAAS,GAChC5F,EAAgB,QAAEiI,KAAlBjI,GAGJA,EAAa,KA3Lb,SAAckI,GACZ,IAAIC,EAAO,CAAE5B,EAAGD,GAChB,SAAS8B,EAAgBC,EAAUC,GACjC,IA3DeZ,EA2DXa,EAAUF,EAASE,QACvBvI,EAAY,IAAIuI,EAEhBzD,GADAX,EAAanE,EAAY,IAAK,GACQ6B,QACtCmD,EAAYhF,EAAY,IAAK,EA/Dd0H,EAgEL1H,EAAY,IAAK,EA/D7BkF,EAAWyC,QAAQD,GAcrB,SAA6Bc,GAK3B,GAJApD,IACIpF,EAA+B,wBACjCA,EAA+B,uBAAEoF,GAEZ,GAAnBA,IAC2B,OAAzBC,IACFoD,cAAcpD,GACdA,EAAuB,MAErBC,GAAuB,CACzB,IAAIO,EAAWP,EACfA,EAAwB,KACxBO,GACF,CAEJ,CAkCI6C,EACF,CAEA,SAASC,EAA2B/E,GAClCwE,EAAgBxE,EAAiB,SACnC,CACA,SAASgF,EAAuBC,GAC9B,OAzBsB1F,EAyBE+E,EAxBnBY,MAAM3F,EAAK,CAAE4F,YAAa,gBAAiBjF,MAAK,SAAUkF,GAC/D,IAAKA,EAAa,GAChB,KAAM,uCAAyC7F,EAAM,IAEvD,OAAO6F,EAAsB,aAC/B,KAoBKlF,MAAK,SAAUmF,GAEd,OADatE,YAAYuE,YAAYD,EAAQd,EAE/C,IACCrE,KAAK+E,GAAU,SAAUM,GACxB9E,EAAI,0CAA4C8E,GAChDvE,EAAMuE,EACR,IAjCN,IAA0BhG,CAkCxB,CAuBA,GA9FAiC,IACIpF,EAA+B,wBACjCA,EAA+B,uBAAEoF,GA4F/BpF,EAAwB,gBAC1B,IAEE,OADcA,EAAwB,gBAAEmI,EAAMC,EAKhD,CAHE,MAAOrG,GAEP,OADAsC,EAAI,sDAAwDtC,IACrD,CACT,CAGF,OA/BMmG,GAAiBA,EAAcpH,WAAa,EACvC6D,YAAYuE,YAAYhB,EAAeC,GAAMrE,KAAK6E,GAA4B,SAAUQ,GAC7F9E,EAAI,wBAA0B8E,EAChC,IAE4C,mBAArCxE,YAAYyE,sBACM,iBAAlBlB,GACU,mBAAVY,MAEAA,MAAMZ,EAAe,CAAEa,YAAa,gBAAiBjF,MAAK,SAAUkF,GAEzE,OADarE,YAAYyE,qBAAqBJ,EAAUb,GAC1CrE,KAAK6E,GAA4B,SAAUQ,GAGvD,OAFA9E,EAAI,kCAAoC8E,GACxC9E,EAAI,6CACGuE,EAAuBD,EAChC,GACF,IAEOC,EAAuBD,GAa3B,CAAC,CACV,EAiIAL,EAAOC,QAAUvI,C","sources":["webpack://@jupyrdf/jupyter-forcegraph/./node_modules/@bokuweb/zstd-wasm/dist/web/module.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/@bokuweb/zstd-wasm/dist/web/errors/index.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/@bokuweb/zstd-wasm/dist/web/simple/decompress.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/@bokuweb/zstd-wasm/dist/web/simple/compress.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/@bokuweb/zstd-wasm/dist/web/simple/decompress_using_dict.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/@bokuweb/zstd-wasm/dist/web/simple/compress_using_dict.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/@bokuweb/zstd-wasm/dist/web/index.web.js","webpack://@jupyrdf/jupyter-forcegraph/./node_modules/@bokuweb/zstd-wasm/dist/web/wasm/zstd.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst Module = require('./wasm/zstd.js');\nconst initialized = (() => new Promise((resolve) => {\n    Module.onRuntimeInitialized = resolve;\n}))();\nexport const waitInitialized = () => __awaiter(void 0, void 0, void 0, function* () {\n    yield initialized;\n});\nexport { Module };\n","import { Module } from '../module';\nexport const isError = (code) => {\n    const _isError = Module['_ZSTD_isError'];\n    return _isError(code);\n};\n// @See https://github.com/facebook/zstd/blob/12c045f74d922dc934c168f6e1581d72df983388/lib/common/error_private.c#L24-L53\n// export const getErrorName = (code: number): string => {\n//   const _getErrorName = Module.cwrap('ZSTD_getErrorName', 'string', ['number']);\n//   return _getErrorName(code);\n// };\n","import { Module } from '../module';\nimport { isError } from '../errors';\nconst getFrameContentSize = (src, size) => {\n    const getSize = Module['_ZSTD_getFrameContentSize'];\n    return getSize(src, size);\n};\nexport const decompress = (buf, opts = { defaultHeapSize: 1024 * 1024 }) => {\n    const malloc = Module['_malloc'];\n    const src = malloc(buf.byteLength);\n    Module.HEAP8.set(buf, src);\n    const contentSize = getFrameContentSize(src, buf.byteLength);\n    const size = contentSize === -1 ? opts.defaultHeapSize : contentSize;\n    const free = Module['_free'];\n    const heap = malloc(size);\n    try {\n        /*\n          @See https://zstd.docsforge.com/dev/api/ZSTD_decompress/\n          compressedSize : must be the exact size of some number of compressed and/or skippable frames.\n          dstCapacity is an upper bound of originalSize to regenerate.\n          If user cannot imply a maximum upper bound, it's better to use streaming mode to decompress data.\n          @return: the number of bytes decompressed into dst (<= dstCapacity), or an errorCode if it fails (which can be tested using ZSTD_isError()).\n        */\n        const _decompress = Module['_ZSTD_decompress'];\n        const sizeOrError = _decompress(heap, size, src, buf.byteLength);\n        if (isError(sizeOrError)) {\n            throw new Error(`Failed to compress with code ${sizeOrError}`);\n        }\n        // Copy buffer\n        // Uint8Array.prototype.slice() return copied buffer.\n        const data = new Uint8Array(Module.HEAPU8.buffer, heap, sizeOrError).slice();\n        free(heap, size);\n        free(src, buf.byteLength);\n        return data;\n    }\n    catch (e) {\n        free(heap, size);\n        free(src, buf.byteLength);\n        throw e;\n    }\n};\n","import { Module } from '../module';\nimport { isError } from '../errors';\nconst compressBound = (size) => {\n    const bound = Module['_ZSTD_compressBound'];\n    return bound(size);\n};\nexport const compress = (buf, level) => {\n    const bound = compressBound(buf.byteLength);\n    const malloc = Module['_malloc'];\n    const compressed = malloc(bound);\n    const src = malloc(buf.byteLength);\n    Module.HEAP8.set(buf, src);\n    const free = Module['_free'];\n    try {\n        /*\n          @See https://zstd.docsforge.com/dev/api/ZSTD_compress/\n          size_t ZSTD_compress( void* dst, size_t dstCapacity, const void* src, size_t srcSize, int compressionLevel);\n          Compresses `src` content as a single zstd compressed frame into already allocated `dst`.\n          Hint : compression runs faster if `dstCapacity` >=  `ZSTD_compressBound(srcSize)`.\n          @return : compressed size written into `dst` (<= `dstCapacity),\n                    or an error code if it fails (which can be tested using ZSTD_isError()).\n        */\n        const _compress = Module['_ZSTD_compress'];\n        const sizeOrError = _compress(compressed, bound, src, buf.byteLength, level !== null && level !== void 0 ? level : 3);\n        if (isError(sizeOrError)) {\n            throw new Error(`Failed to compress with code ${sizeOrError}`);\n        }\n        // // Copy buffer\n        // // Uint8Array.prototype.slice() return copied buffer.\n        const data = new Uint8Array(Module.HEAPU8.buffer, compressed, sizeOrError).slice();\n        free(compressed, bound);\n        free(src, buf.byteLength);\n        return data;\n    }\n    catch (e) {\n        free(compressed, bound);\n        free(src, buf.byteLength);\n        throw e;\n    }\n};\n","import { Module } from '../module';\nimport { isError } from '../errors';\nconst getFrameContentSize = (src, size) => {\n    const getSize = Module['_ZSTD_getFrameContentSize'];\n    return getSize(src, size);\n};\nexport const createDCtx = () => {\n    return Module['_ZSTD_createDCtx']();\n};\nexport const decompressUsingDict = (dctx, buf, dict, opts = { defaultHeapSize: 1024 * 1024 }) => {\n    const malloc = Module['_malloc'];\n    const src = malloc(buf.byteLength);\n    Module.HEAP8.set(buf, src);\n    const pdict = malloc(dict.byteLength);\n    Module.HEAP8.set(dict, pdict);\n    const contentSize = getFrameContentSize(src, buf.byteLength);\n    const size = contentSize === -1 ? opts.defaultHeapSize : contentSize;\n    const free = Module['_free'];\n    const heap = malloc(size);\n    try {\n        const _decompress = Module['_ZSTD_decompress_usingDict'];\n        const sizeOrError = _decompress(dctx, heap, size, src, buf.byteLength, pdict, dict.byteLength);\n        if (isError(sizeOrError)) {\n            throw new Error(`Failed to compress with code ${sizeOrError}`);\n        }\n        // Copy buffer\n        // Uint8Array.prototype.slice() return copied buffer.\n        const data = new Uint8Array(Module.HEAPU8.buffer, heap, sizeOrError).slice();\n        free(heap, size);\n        free(src, buf.byteLength);\n        return data;\n    }\n    catch (e) {\n        free(heap, size);\n        free(src, buf.byteLength);\n        throw e;\n    }\n};\n","import { Module } from '../module';\nimport { isError } from '../errors';\nconst compressBound = (size) => {\n    const bound = Module['_ZSTD_compressBound'];\n    return bound(size);\n};\nexport const createCCtx = () => {\n    return Module['_ZSTD_createCCtx']();\n};\nexport const compressUsingDict = (cctx, buf, dict, level) => {\n    const bound = compressBound(buf.byteLength);\n    const malloc = Module['_malloc'];\n    const compressed = malloc(bound);\n    const src = malloc(buf.byteLength);\n    Module.HEAP8.set(buf, src);\n    // Setup dict\n    const pdict = malloc(dict.byteLength);\n    Module.HEAP8.set(dict, pdict);\n    const free = Module['_free'];\n    try {\n        /*\n          @See https://zstd.docsforge.com/dev/api/ZSTD_compress_usingDict/\n          size_t ZSTD_compress_usingDict(ZSTD_CCtx* cctx,\n                             void* dst, size_t dstCapacity,\n                             const void* src, size_t srcSize,\n                             const void* dict, size_t dictSize,\n                             int compressionLevel)\n        */\n        const _compress = Module['_ZSTD_compress_usingDict'];\n        const sizeOrError = _compress(cctx, compressed, bound, src, buf.byteLength, pdict, dict.byteLength, level !== null && level !== void 0 ? level : 3);\n        if (isError(sizeOrError)) {\n            throw new Error(`Failed to compress with code ${sizeOrError}`);\n        }\n        // // Copy buffer\n        // // Uint8Array.prototype.slice() return copied buffer.\n        const data = new Uint8Array(Module.HEAPU8.buffer, compressed, sizeOrError).slice();\n        free(compressed, bound);\n        free(src, buf.byteLength);\n        free(pdict, dict.byteLength);\n        return data;\n    }\n    catch (e) {\n        free(compressed, bound);\n        free(src, buf.byteLength);\n        free(pdict, dict.byteLength);\n        throw e;\n    }\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Module, waitInitialized } from './module';\nexport const init = (path) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a;\n    const url = require('./wasm/zstd.wasm');\n    Module['init']((_a = path !== null && path !== void 0 ? path : url.default) !== null && _a !== void 0 ? _a : url);\n    yield waitInitialized();\n});\nexport * from './simple/decompress';\nexport * from './simple/compress';\nexport * from './simple/decompress_using_dict';\nexport * from './simple/compress_using_dict';\n","var Module = typeof Module !== 'undefined' ? Module : {};\nvar moduleOverrides = {};\nvar key;\nfor (key in Module) {\n  if (Module.hasOwnProperty(key)) {\n    moduleOverrides[key] = Module[key];\n  }\n}\nvar arguments_ = [];\nvar err = Module['printErr'] || console.warn.bind(console);\nfor (key in moduleOverrides) {\n  if (moduleOverrides.hasOwnProperty(key)) {\n    Module[key] = moduleOverrides[key];\n  }\n}\nmoduleOverrides = null;\nif (Module['arguments']) arguments_ = Module['arguments'];\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];\nif (Module['quit']) quit_ = Module['quit'];\nvar tempRet0 = 0;\nvar setTempRet0 = function (value) {\n  tempRet0 = value;\n};\nif (typeof WebAssembly !== 'object') {\n  abort('no native wasm support detected');\n}\nvar wasmMemory;\nvar ABORT = false;\nfunction ___assert_fail(condition, filename, line, func) {\n  abort('Assertion failed: ' + [filename ? filename : 'unknown filename', line, func ? func : 'unknown function']);\n}\nfunction alignUp(x, multiple) {\n  if (x % multiple > 0) {\n    x += multiple - (x % multiple);\n  }\n  return x;\n}\nvar buffer, HEAPU8;\nfunction updateGlobalBufferAndViews(buf) {\n  buffer = buf;\n  Module['HEAP8'] = new Int8Array(buf);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buf);\n}\nvar INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 16777216;\nvar wasmTable;\nvar __ATPRERUN__ = [];\nvar __ATINIT__ = [];\nvar __ATPOSTRUN__ = [];\nvar runtimeInitialized = false;\nfunction preRun() {\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\nfunction initRuntime() {\n  runtimeInitialized = true;\n  callRuntimeCallbacks(__ATINIT__);\n}\nfunction postRun() {\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null;\nfunction addRunDependency(id) {\n  runDependencies++;\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n}\nfunction removeRunDependency(id) {\n  runDependencies--;\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback();\n    }\n  }\n}\nModule['preloadedImages'] = {};\nModule['preloadedAudios'] = {};\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n  what += '';\n  err(what);\n  ABORT = true;\n  EXITSTATUS = 1;\n  what = 'abort(' + what + ').';\n  var e = new WebAssembly.RuntimeError(what);\n  throw e;\n}\n\nfunction getBinaryPromise(url) {\n  return fetch(url, { credentials: 'same-origin' }).then(function (response) {\n    if (!response['ok']) {\n      throw \"failed to load wasm binary file at '\" + url + \"'\";\n    }\n    return response['arrayBuffer']();\n  });\n}\n\nfunction init(filePathOrBuf) {\n  var info = { a: asmLibraryArg };\n  function receiveInstance(instance, module) {\n    var exports = instance.exports;\n    Module['asm'] = exports;\n    wasmMemory = Module['asm']['d'];\n    updateGlobalBufferAndViews(wasmMemory.buffer);\n    wasmTable = Module['asm']['m'];\n    addOnInit(Module['asm']['e']);\n    removeRunDependency('wasm-instantiate');\n  }\n  addRunDependency('wasm-instantiate');\n  function receiveInstantiationResult(result) {\n    receiveInstance(result['instance']);\n  }\n  function instantiateArrayBuffer(receiver) {\n    return getBinaryPromise(filePathOrBuf)\n      .then(function (binary) {\n        var result = WebAssembly.instantiate(binary, info);\n        return result;\n      })\n      .then(receiver, function (reason) {\n        err('failed to asynchronously prepare wasm: ' + reason);\n        abort(reason);\n      });\n  }\n  function instantiateAsync() {\n    if (filePathOrBuf && filePathOrBuf.byteLength > 0) {\n      return WebAssembly.instantiate(filePathOrBuf, info).then(receiveInstantiationResult, function (reason) {\n        err('wasm compile failed: ' + reason);\n      });\n    } else if (\n      typeof WebAssembly.instantiateStreaming === 'function' &&\n      typeof filePathOrBuf === 'string' &&\n      typeof fetch === 'function'\n    ) {\n      return fetch(filePathOrBuf, { credentials: 'same-origin' }).then(function (response) {\n        var result = WebAssembly.instantiateStreaming(response, info);\n        return result.then(receiveInstantiationResult, function (reason) {\n          err('wasm streaming compile failed: ' + reason);\n          err('falling back to ArrayBuffer instantiation');\n          return instantiateArrayBuffer(receiveInstantiationResult);\n        });\n      });\n    } else {\n      return instantiateArrayBuffer(receiveInstantiationResult);\n    }\n  }\n  if (Module['instantiateWasm']) {\n    try {\n      var exports = Module['instantiateWasm'](info, receiveInstance);\n      return exports;\n    } catch (e) {\n      err('Module.instantiateWasm callback failed with error: ' + e);\n      return false;\n    }\n  }\n  instantiateAsync();\n  return {};\n}\nfunction callRuntimeCallbacks(callbacks) {\n  while (callbacks.length > 0) {\n    var callback = callbacks.shift();\n    if (typeof callback == 'function') {\n      callback(Module);\n      continue;\n    }\n    var func = callback.func;\n    if (typeof func === 'number') {\n      if (callback.arg === undefined) {\n        wasmTable.get(func)();\n      } else {\n        wasmTable.get(func)(callback.arg);\n      }\n    } else {\n      func(callback.arg === undefined ? null : callback.arg);\n    }\n  }\n}\nfunction emscripten_realloc_buffer(size) {\n  try {\n    wasmMemory.grow((size - buffer.byteLength + 65535) >>> 16);\n    updateGlobalBufferAndViews(wasmMemory.buffer);\n    return 1;\n  } catch (e) {}\n}\nfunction _emscripten_resize_heap(requestedSize) {\n  var oldSize = HEAPU8.length;\n  requestedSize = requestedSize >>> 0;\n  var maxHeapSize = 2147483648;\n  if (requestedSize > maxHeapSize) {\n    return false;\n  }\n  for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n    var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n    overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n    var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n    var replacement = emscripten_realloc_buffer(newSize);\n    if (replacement) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction _setTempRet0(val) {\n  setTempRet0(val);\n}\nvar asmLibraryArg = { a: ___assert_fail, b: _emscripten_resize_heap, c: _setTempRet0 };\nModule['___wasm_call_ctors'] = function () {\n  return (Module['___wasm_call_ctors'] = Module['asm']['e']).apply(null, arguments);\n};\nModule['_malloc'] = function () {\n  return (Module['_malloc'] = Module['asm']['f']).apply(null, arguments);\n};\nModule['_free'] = function () {\n  return (Module['_free'] = Module['asm']['g']).apply(null, arguments);\n};\nModule['_ZSTD_isError'] = function () {\n  return (Module['_ZSTD_isError'] = Module['asm']['h']).apply(null, arguments);\n};\nModule['_ZSTD_compressBound'] = function () {\n  return (Module['_ZSTD_compressBound'] = Module['asm']['i']).apply(null, arguments);\n};\nModule['_ZSTD_createCCtx'] = function () {\n  return (Module['_ZSTD_createCCtx'] = Module['asm']['j']).apply(null, arguments);\n};\nModule['_ZSTD_compress_usingDict'] = function () {\n  return (Module['_ZSTD_compress_usingDict'] = Module['asm']['k']).apply(null, arguments);\n};\nModule['_ZSTD_compress'] = function () {\n  return (Module['_ZSTD_compress'] = Module['asm']['l']).apply(null, arguments);\n};\nModule['_ZSTD_createDCtx'] = function () {\n  return (Module['_ZSTD_createDCtx'] = Module['asm']['m']).apply(null, arguments);\n};\nModule['_ZSTD_getFrameContentSize'] = function () {\n  return (Module['_ZSTD_getFrameContentSize'] = Module['asm']['n']).apply(null, arguments);\n};\nModule['_ZSTD_decompress_usingDict'] = function () {\n  return (Module['_ZSTD_decompress_usingDict'] = Module['asm']['o']).apply(null, arguments);\n};\nModule['_ZSTD_decompress'] = function () {\n  return (Module['_ZSTD_decompress'] = Module['asm']['p']).apply(null, arguments);\n};\n\nvar calledRun;\ndependenciesFulfilled = function runCaller() {\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller;\n};\nfunction run(args) {\n  args = args || arguments_;\n  if (runDependencies > 0) {\n    return;\n  }\n  preRun();\n  if (runDependencies > 0) {\n    return;\n  }\n  function doRun() {\n    if (calledRun) return;\n    calledRun = true;\n    Module['calledRun'] = true;\n    if (ABORT) return;\n    initRuntime();\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n    postRun();\n  }\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function () {\n      setTimeout(function () {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else {\n    doRun();\n  }\n}\nModule['run'] = run;\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\nModule['init'] = init;\nmodule.exports = Module;\n"],"names":["Module","initialized","Promise","resolve","onRuntimeInitialized","isError","code","_isError","decompress","buf","opts","defaultHeapSize","malloc","src","byteLength","HEAP8","set","contentSize","size","getSize","getFrameContentSize","free","heap","sizeOrError","_decompress","Error","data","Uint8Array","HEAPU8","buffer","slice","e","compress","level","bound","compressed","_compress","createDCtx","decompressUsingDict","dctx","dict","pdict","createCCtx","compressUsingDict","cctx","init","path","thisArg","_arguments","generator","_a","url","P","default","reject","fulfilled","value","step","next","rejected","result","done","then","apply","key","moduleOverrides","hasOwnProperty","wasmMemory","arguments_","err","console","warn","bind","thisProgram","quit_","WebAssembly","abort","ABORT","updateGlobalBufferAndViews","Int8Array","wasmTable","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runDependencies","runDependencyWatcher","dependenciesFulfilled","what","EXITSTATUS","RuntimeError","callRuntimeCallbacks","callbacks","length","callback","shift","func","undefined","arg","get","emscripten_realloc_buffer","grow","calledRun","asmLibraryArg","a","condition","filename","line","b","requestedSize","x","oldSize","maxHeapSize","cutDown","overGrownHeapSize","Math","min","max","c","val","run","args","doRun","cb","unshift","postRun","preRun","setTimeout","arguments","runCaller","pop","filePathOrBuf","info","receiveInstance","instance","module","exports","id","clearInterval","removeRunDependency","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","response","binary","instantiate","reason","instantiateStreaming"],"sourceRoot":""}