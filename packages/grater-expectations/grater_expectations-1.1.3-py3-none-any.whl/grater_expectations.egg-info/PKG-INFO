Metadata-Version: 2.1
Name: grater-expectations
Version: 1.1.3
Summary: A grated application of Great Expectations to create greater Expectations
Home-page: https://github.com/jschra/grater_expectations
Author: Jorik Schra
Author-email: j.c.m.schra@gmail.com
License: MIT License
        
        Copyright (c) 2022 jschra
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE

# Grater Expectations

![grater_expectations](https://raw.githubusercontent.com/jschra/grater_expectations/main/docs/images/grater_expectations_background_small.png)


Welcome to Grater Expectations! In this repository, you will find code, notebooks and configurations that help you implement data testing using [Great Expectations](https://greatexpectations.io/). In doing so, a subset of logic was taken from Great Expectations - or *grated* - and implemented in Python to get you up, running and testing your data fast and as such, Grater Expectations was born!

In this project a combination of Python, Docker, Terraform and Azure or AWS services are used to enable you to quickly bootstrap a new project for testing your data. 


For more information on how to get started, please refer to the README file specific for the cloud provider you intend to use:

- [Azure](https://github.com/jschra/grater_expectations/blob/main/README_AZURE.md)
- [AWS](https://github.com/jschra/grater_expectations/blob/main/README_AWS.md)
