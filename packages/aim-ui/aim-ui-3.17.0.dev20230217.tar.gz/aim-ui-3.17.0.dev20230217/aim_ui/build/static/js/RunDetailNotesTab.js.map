{"version":3,"sources":["pages/RunDetail/RunDetailNotesTab/RunDetailNotesTab.tsx","pages/RunDetail/RunDetailNotesTab/index.ts","components/ConfirmModal/ConfirmModal.tsx","pages/RunDetail/RunDetailNotesTab/NoteTooltip.tsx","components/RouteLeavingGuard/RouteLeavingGuard.tsx","components/RouteLeavingGuard/index.ts"],"names":["RunDetailNotesTab","runHash","useModel","notesModel","isLoading","noteData","notifyData","React","useState","value","setValue","saveDisabled","setSaveDisabled","theme","setTheme","editorRef","useRef","useEffect","initialize","analytics","ANALYTICS_EVENT_KEYS","runDetails","tabs","notes","tabView","destroy","current","id","content","RichEditorThemeColors","onNoteSave","useCallback","onNoteUpdate","onNoteCreate","onNoteChange","currentVal","isSaveDisabled","className","RouteLeavingGuard","when","classNames","created_at","Tooltip","title","name","tint","moment","utc","local","format","YEAR_MONTH_DAY_DATE_FORMAT","updated_at","disabled","variant","size","onClick","ref","placeholder","disableExtensions","tooltip","children","NoteTooltip","onChange","Spinner","length","NotificationContainer","handleClose","onNoteNotificationDelete","data","displayName","memo","NotesTab","ConfirmModal","props","open","onClose","onCancel","aria-labelledby","aria-describedby","PaperProps","elevation","statusType","color","withOnlyIcon","icon","component","weight","description","text","cancelBtnText","onSubmit","autoFocus","confirmBtnText","defaultProps","mounted","setMounted","parentNode","message","openModal","setOpenModal","nextLocation","setNextLocation","confirmNavigation","setConfirmNavigation","history","useHistory","onBeforeUnload","event","preventDefault","returnValue","closeModal","push","window","addEventListener","removeEventListener","location","showModal","pathname"],"mappings":"8UA2BA,SAASA,EAAkB,GAEmD,IAAD,EAD3EC,EAAO,EAAPA,QAEA,EAA4CC,YAASC,KAA7CC,EAAS,EAATA,UAAWC,EAAQ,EAARA,SAAUC,EAAU,EAAVA,WAC7B,EAA0BC,IAAMC,SAAiB,IAAG,mBAA7CC,EAAK,KAAEC,EAAQ,KACtB,EAAwCH,IAAMC,UAAkB,GAAK,mBAA9DG,EAAY,KAAEC,EAAe,KACpC,EAA0BL,IAAMC,SAAoB,MAAK,mBAAlDK,EAAK,KAAEC,EAAQ,KAChBC,EAAYR,IAAMS,OAAqB,MAE7CT,IAAMU,WAAU,WAId,OAHAd,IAAWe,WAAWjB,GACtBkB,IAAmBC,IAAqBC,WAAWC,KAAKC,MAAMC,SAEvD,WACLrB,IAAWsB,aAGZ,IAEHlB,IAAMU,WAAU,WACU,IAAD,EAAnBF,EAAUW,UACZhB,GAAiB,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAUsB,IAAa,OAARtB,QAAQ,IAARA,OAAQ,EAARA,EAAUuB,QAAU,IAC5Cd,EAAS,2BACa,QADb,EACJC,EAAUW,eAAO,aAAjB,EAAmBb,SACnBgB,SAGN,CAACxB,IAGJ,IAAMyB,EAAavB,IAAMwB,aAAY,WACnCnB,GAAgB,IACJ,OAARP,QAAQ,IAARA,OAAQ,EAARA,EAAUsB,IACZK,IAEA7B,IAAW8B,aAAahC,EAAS,CAC/B2B,QAASb,EAAUW,QAAQjB,YAI9B,CAAS,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUsB,GAAI1B,IAEZ+B,EAAezB,IAAMwB,aAAY,WACrC5B,IAAW6B,aAAa/B,EAAS,CAC/B2B,QAASb,EAAUW,QAAQjB,YAE5B,CAACR,IAEEiC,EAAe3B,IAAMwB,aACzB,SAACI,GACC,IAAMC,EAA0B3B,IAAU0B,IACtCxB,IAAiByB,GACnBxB,EAAgBwB,KAGpB,CAACzB,EAAcF,IAGjB,OACE,0BAAS4B,UAAU,oBAAmB,UACpC,cAACC,EAAA,EAAiB,CAACC,MAAO5B,IAC1B,sBACE0B,UAAWG,IAAW,4BAA6B,CACjDpC,cACC,UAEH,sBAAKiC,UAAU,yCAAwC,UACrD,sBAAKA,UAAU,+CAA8C,WAClD,OAARhC,QAAQ,IAARA,OAAQ,EAARA,EAAUoC,aACT,cAACC,EAAA,EAAO,CAACC,MAAM,aAAY,SACzB,sBAAKN,UAAU,qDAAoD,UACjE,cAAC,IAAI,CAACO,KAAK,aACX,cAAC,IAAI,CAACC,KAAM,GAAG,mBACTC,IACDC,IAAY,OAAR1C,QAAQ,IAARA,OAAQ,EAARA,EAAUoC,YACdO,QACAC,OAAOC,cAKT,OAAR7C,QAAQ,IAARA,OAAQ,EAARA,EAAU8C,aACT,cAACT,EAAA,EAAO,CAACC,MAAM,aAAY,SACzB,sBAAKN,UAAU,qDAAoD,UACjE,cAAC,IAAI,CAACO,KAAK,SACX,cAAC,IAAI,CAACC,KAAM,GAAG,mBACTC,IACDC,IAAY,OAAR1C,QAAQ,IAARA,OAAQ,EAARA,EAAU8C,YACdH,QACAC,OAAOC,gBAMpB,cAACR,EAAA,EAAO,CAACC,MAAM,YAAW,SACxB,8BACE,cAAC,IAAM,CACLS,SAAUzC,GAAgBP,EAC1BiD,QAAQ,YACRC,KAAK,QACLC,QAASzB,EACTO,UAAU,kDAAiD,SAC5D,gBAMP,cAAC,IAAM,CACLmB,IAAKzC,EACLsB,UAAU,uCACV5B,MAAOA,EACPgD,YAAY,kBACZ5C,MAAOA,IAA0B,QAArB,EAAIE,EAAUW,eAAO,aAAjB,EAAmBb,SACnC6C,kBAAmB,CAAC,QAAS,QAAS,oBACtCC,QAAS,YAAmB,IAAhBC,EAAQ,EAARA,SACV,OAAO,cAACC,EAAA,EAAW,UAAED,KAEvBE,SAAU5B,IAEX9B,GACC,qBAAKiC,UAAU,oCAAmC,SAChD,cAAC0B,EAAA,EAAO,SAIbzD,EAAY0D,OAAS,GACpB,cAACC,EAAA,EAAqB,CACpBC,YAAa/D,IAAWgE,yBACxBC,KAAM9D,OAOhBN,EAAkBqE,YAAc,oBAEjB9D,UAAM+D,KAAKtE,GCpKXuE,a,iCCFf,4DAWA,SAASC,EACPC,GAEA,OACE,cAAC,IAAa,UACZ,eAAC,IAAM,CACLC,KAAMD,EAAMC,KACZC,QAASF,EAAMG,SACfC,kBAAgB,eAChBC,mBAAiB,qBACjBC,WAAY,CACVC,UAAW,IAEb3C,UAAS,qCAAgCoC,EAAMQ,YAAa,UAE5D,sBAAK5C,UAAU,qBAAoB,UACjC,cAAC,IAAM,CACLiB,KAAK,QACLjB,UAAU,4BACV6C,MAAM,YACNC,cAAY,EACZ5B,QAASkB,EAAMG,SAAS,SAExB,cAAC,IAAI,CAAChC,KAAK,YAGb,sBAAKP,UAAU,iCAAgC,UAC7C,qBAAKA,UAAU,qBAAoB,SAAEoC,EAAMW,OAC1CX,EAAM9B,OACL,cAAC,IAAI,CAACW,KAAM,GAAIT,KAAM,IAAKwC,UAAU,KAAKC,OAAQ,IAAI,SACnDb,EAAM9B,WAKb,gCACG8B,EAAMc,aACL,cAAC,IAAI,CACHlD,UAAU,4BACViD,OAAQ,IACRD,UAAU,IACV1D,GAAG,qBAAoB,SAEtB8C,EAAMc,cAIX,gCACGd,EAAMe,MACL,cAAC,IAAI,CACHnD,UAAU,qBACViD,OAAQ,IACRD,UAAU,IACV/B,KAAM,GACN3B,GAAG,qBAAoB,SAEtB8C,EAAMe,MAAQ,KAGlBf,EAAMb,UAAYa,EAAMb,kBAK/B,sBAAKvB,UAAU,uBAAsB,UACnC,cAAC,IAAM,CACLkB,QAASkB,EAAMG,SACfvC,UAAU,6BAA4B,SAErCoC,EAAMgB,gBAET,cAAC,IAAM,CACLlC,QAASkB,EAAMiB,SACfR,MAAM,UACN7B,QAAQ,YACRhB,UAAU,8BACVsD,WAAS,WAERlB,EAAMmB,yBAQnBpB,EAAaqB,aAAe,CAC1BD,eAAgB,UAChBH,cAAe,SACfR,WAAY,QAGdT,EAAaH,YAAc,eAEZ9D,QAAM+D,KAAyBE,I,yFClF/BX,IAnBf,SAAqB,GAAkC,IAAhCD,EAAQ,EAARA,SACfJ,EAAMjD,IAAMS,OAAY,MAC9B,EAA8BT,IAAMC,UAAkB,GAAM,mBAArDsF,EAAO,KAAEC,EAAU,KAc1B,OAZAxF,IAAMU,WAAU,WACd,GAAK6E,EAEE,CACL,IAAME,EACJxC,EAAI9B,QAAQsE,WAAWA,WAAWA,WACd,0BAAlBA,EAAWrE,KACbqE,EAAWrE,GAAK,8BALlBoE,GAAW,KAQZ,CAACD,IAEG,qBAAKtC,IAAKA,EAAI,SAAEI,M,2FC+DVtB,MA3Ef,SAA2B,GAIE,IAH3BC,EAAI,EAAJA,KAAK,EAAD,EACJ0D,eAAO,MAAG,qCAAoC,MAC9CL,sBAAc,MAAG,QAAO,EAExB,EAAkCrF,IAAMC,UAAkB,GAAM,mBAAzD0F,EAAS,KAAEC,EAAY,KAC9B,EAAwC5F,IAAMC,SAAiB,IAAG,mBAA3D4F,EAAY,KAAEC,EAAe,KACpC,EAAkD9F,IAAMC,UAAS,GAAM,mBAAhE8F,EAAiB,KAAEC,EAAoB,KACxCC,EAAUC,cAchB,SAASC,EAAeC,GACtB,OAAKpE,GAGE,OAALoE,QAAK,IAALA,KAAOC,iBACHD,IACFA,EAAME,YACJ,yDAEG,SAPP,EAgBJ,SAASC,IACPX,GAAa,GAiBf,OAhDA5F,IAAMU,WAAU,WAMd,OALIqF,IACFE,EAAQO,KAAKX,GACbG,GAAqB,IAEvBS,OAAOC,iBAAiB,eAAgBP,GACjC,WACLM,OAAOE,oBAAoB,eAAgBR,MAG5C,CAACJ,EAAmB/D,IAuCrB,qCACE,cAAC,IAAM,CAACA,KAAMA,EAAM0D,QAhBxB,SAAiCkB,GAC/B,QAAKb,IAVP,SAAmBa,GACjBhB,GAAa,GACbE,EAAgBc,GASdC,CAAUD,EAASE,WACZ,MAcP,cAAC7C,EAAA,EAAY,CACXE,KAAMwB,EACNtB,SAAUkC,EACVpB,SAbN,WACEoB,IACIV,GACFG,GAAqB,IAWnBf,KAAMS,EACNb,KAAM,cAAC,IAAI,CAACxC,KAAK,sBACjBqC,WAAW,UACXW,eAAgBA,EAChBjD,MAAM,qBCzECL","file":"static/js/RunDetailNotesTab.js?version=5ffe51b2ee25c1c1759e","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport Editor from 'rich-markdown-editor';\nimport moment from 'moment';\nimport { useModel } from 'hooks';\n\nimport { Tooltip } from '@material-ui/core';\n\nimport { Button, Icon, Text } from 'components/kit';\nimport NotificationContainer from 'components/NotificationContainer/NotificationContainer';\nimport Spinner from 'components/kit/Spinner';\nimport RouteLeavingGuard from 'components/RouteLeavingGuard';\n\nimport { ANALYTICS_EVENT_KEYS } from 'config/analytics/analyticsKeysMap';\nimport { RichEditorThemeColors } from 'config/colors/colors';\nimport { YEAR_MONTH_DAY_DATE_FORMAT } from 'config/dates/dates';\n\nimport * as analytics from 'services/analytics';\nimport notesModel from 'services/models/notes/notesModel';\n\nimport { INoteReqBody } from 'types/services/models/notes/notes';\n\nimport NoteTooltip from './NoteTooltip';\nimport { IRunDetailNotesTabProps } from './types';\n\nimport './RunDetailNotesTab.scss';\n\nfunction RunDetailNotesTab({\n  runHash,\n}: IRunDetailNotesTabProps): React.FunctionComponentElement<React.ReactNode> {\n  const { isLoading, noteData, notifyData } = useModel(notesModel)!;\n  const [value, setValue] = React.useState<string>('');\n  const [saveDisabled, setSaveDisabled] = React.useState<boolean>(true);\n  const [theme, setTheme] = React.useState<null | {}>(null);\n  const editorRef = React.useRef<Editor | any>(null);\n\n  React.useEffect(() => {\n    notesModel.initialize(runHash);\n    analytics.pageView(ANALYTICS_EVENT_KEYS.runDetails.tabs.notes.tabView);\n\n    return () => {\n      notesModel.destroy();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    if (editorRef.current) {\n      setValue(noteData?.id ? noteData?.content : '');\n      setTheme({\n        ...editorRef.current?.theme(),\n        ...RichEditorThemeColors,\n      });\n    }\n  }, [noteData]);\n\n  // CRUD handlers\n  const onNoteSave = React.useCallback((): void => {\n    setSaveDisabled(true);\n    if (noteData?.id) {\n      onNoteUpdate();\n    } else {\n      notesModel.onNoteCreate(runHash, {\n        content: editorRef.current.value(),\n      } as INoteReqBody);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [noteData?.id, runHash]);\n\n  const onNoteUpdate = React.useCallback((): void => {\n    notesModel.onNoteUpdate(runHash, {\n      content: editorRef.current.value(),\n    } as INoteReqBody);\n  }, [runHash]);\n\n  const onNoteChange = React.useCallback(\n    (currentVal: () => string): void => {\n      const isSaveDisabled: boolean = value === currentVal();\n      if (saveDisabled !== isSaveDisabled) {\n        setSaveDisabled(isSaveDisabled);\n      }\n    },\n    [saveDisabled, value],\n  );\n\n  return (\n    <section className='RunDetailNotesTab'>\n      <RouteLeavingGuard when={!saveDisabled} />\n      <div\n        className={classNames('RunDetailNotesTab__Editor', {\n          isLoading,\n        })}\n      >\n        <div className='RunDetailNotesTab__Editor__actionPanel'>\n          <div className='RunDetailNotesTab__Editor__actionPanel__info'>\n            {noteData?.created_at && (\n              <Tooltip title='Created at'>\n                <div className='RunDetailNotesTab__Editor__actionPanel__info-field'>\n                  <Icon name='calendar' />\n                  <Text tint={70}>\n                    {`${moment\n                      .utc(noteData?.created_at)\n                      .local()\n                      .format(YEAR_MONTH_DAY_DATE_FORMAT)}`}\n                  </Text>\n                </div>\n              </Tooltip>\n            )}\n            {noteData?.updated_at && (\n              <Tooltip title='Updated at'>\n                <div className='RunDetailNotesTab__Editor__actionPanel__info-field'>\n                  <Icon name='time' />\n                  <Text tint={70}>\n                    {`${moment\n                      .utc(noteData?.updated_at)\n                      .local()\n                      .format(YEAR_MONTH_DAY_DATE_FORMAT)}`}\n                  </Text>\n                </div>\n              </Tooltip>\n            )}\n          </div>\n          <Tooltip title='Save Note'>\n            <div>\n              <Button\n                disabled={saveDisabled || isLoading}\n                variant='contained'\n                size='small'\n                onClick={onNoteSave}\n                className='RunDetailNotesTab__Editor__actionPanel__saveBtn'\n              >\n                Save\n              </Button>\n            </div>\n          </Tooltip>\n        </div>\n        <Editor\n          ref={editorRef}\n          className='RunDetailNotesTab__Editor__container'\n          value={value}\n          placeholder='Leave your Note'\n          theme={theme || editorRef.current?.theme()}\n          disableExtensions={['table', 'image', 'container_notice']}\n          tooltip={({ children }) => {\n            return <NoteTooltip>{children}</NoteTooltip>;\n          }}\n          onChange={onNoteChange}\n        />\n        {isLoading && (\n          <div className='RunDetailNotesTab__spinnerWrapper'>\n            <Spinner />\n          </div>\n        )}\n      </div>\n      {notifyData!.length > 0 && (\n        <NotificationContainer\n          handleClose={notesModel.onNoteNotificationDelete}\n          data={notifyData!}\n        />\n      )}\n    </section>\n  );\n}\n\nRunDetailNotesTab.displayName = 'RunDetailNotesTab';\n\nexport default React.memo(RunDetailNotesTab);\n","import NotesTab from './RunDetailNotesTab';\n\nexport default NotesTab;\n","import React from 'react';\n\nimport { Dialog } from '@material-ui/core';\n\nimport { Button, Text, Icon } from 'components/kit';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { IConfirmModalProps } from 'types/components/ConfirmModal/ConfirmModal';\n\nimport './ConfirmModal.scss';\n\nfunction ConfirmModal(\n  props: IConfirmModalProps,\n): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <ErrorBoundary>\n      <Dialog\n        open={props.open}\n        onClose={props.onCancel}\n        aria-labelledby='dialog-title'\n        aria-describedby='dialog-description'\n        PaperProps={{\n          elevation: 10,\n        }}\n        className={`ConfirmModal ConfirmModal__${props.statusType}`}\n      >\n        <div className='ConfirmModal__Body'>\n          <Button\n            size='small'\n            className='ConfirmModal__Close__Icon'\n            color='secondary'\n            withOnlyIcon\n            onClick={props.onCancel}\n          >\n            <Icon name='close' />\n          </Button>\n\n          <div className='ConfirmModal__Title__Container'>\n            <div className='ConfirmModal__Icon'>{props.icon}</div>\n            {props.title && (\n              <Text size={16} tint={100} component='h4' weight={600}>\n                {props.title}\n              </Text>\n            )}\n          </div>\n\n          <div>\n            {props.description && (\n              <Text\n                className='ConfirmModal__description'\n                weight={400}\n                component='p'\n                id='dialog-description'\n              >\n                {props.description}\n              </Text>\n            )}\n\n            <div>\n              {props.text && (\n                <Text\n                  className='ConfirmModal__text'\n                  weight={400}\n                  component='p'\n                  size={14}\n                  id='dialog-description'\n                >\n                  {props.text || ''}\n                </Text>\n              )}\n              {props.children && props.children}\n            </div>\n          </div>\n        </div>\n\n        <div className='ConfirmModal__Footer'>\n          <Button\n            onClick={props.onCancel}\n            className='ConfirmModal__CancelButton'\n          >\n            {props.cancelBtnText}\n          </Button>\n          <Button\n            onClick={props.onSubmit}\n            color='primary'\n            variant='contained'\n            className='ConfirmModal__ConfirmButton'\n            autoFocus\n          >\n            {props.confirmBtnText}\n          </Button>\n        </div>\n      </Dialog>\n    </ErrorBoundary>\n  );\n}\n\nConfirmModal.defaultProps = {\n  confirmBtnText: 'Confirm',\n  cancelBtnText: 'Cancel',\n  statusType: 'info',\n};\n\nConfirmModal.displayName = 'ConfirmModal';\n\nexport default React.memo<IConfirmModalProps>(ConfirmModal);\n","import React from 'react';\n\nimport { INoteTooltipProps } from '../NotesTab/types';\n\nfunction NoteTooltip({ children }: INoteTooltipProps) {\n  const ref = React.useRef<any>(null);\n  const [mounted, setMounted] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    if (!mounted) {\n      setMounted(true);\n    } else {\n      const parentNode: HTMLDivElement =\n        ref.current.parentNode.parentNode.parentNode;\n      if (parentNode.id !== 'notes-toolbar-popover') {\n        parentNode.id = 'notes-toolbar-popover';\n      }\n    }\n  }, [mounted]);\n\n  return <div ref={ref}>{children}</div>;\n}\n\nexport default NoteTooltip;\n","import React from 'react';\nimport { Prompt, useHistory } from 'react-router-dom';\n\nimport ConfirmModal from 'components/ConfirmModal/ConfirmModal';\nimport { Icon } from 'components/kit';\n\nimport { IRouteLeavingGuardProps } from './RouteLeavingGuard.d';\n\nfunction RouteLeavingGuard({\n  when,\n  message = 'Changes you made may not be saved.',\n  confirmBtnText = 'Leave',\n}: IRouteLeavingGuardProps) {\n  const [openModal, setOpenModal] = React.useState<boolean>(false);\n  const [nextLocation, setNextLocation] = React.useState<string>('');\n  const [confirmNavigation, setConfirmNavigation] = React.useState(false);\n  const history = useHistory();\n\n  React.useEffect(() => {\n    if (confirmNavigation) {\n      history.push(nextLocation);\n      setConfirmNavigation(false);\n    }\n    window.addEventListener('beforeunload', onBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', onBeforeUnload);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [confirmNavigation, when]);\n\n  function onBeforeUnload(event: any): string | undefined {\n    if (!when) {\n      return;\n    } else {\n      event?.preventDefault();\n      if (event) {\n        event.returnValue =\n          'Your changes is not saved. Do you still want to leave';\n      }\n      return '';\n    }\n  }\n\n  function showModal(location: string): void {\n    setOpenModal(true);\n    setNextLocation(location);\n  }\n\n  function closeModal() {\n    setOpenModal(false);\n  }\n\n  function handleBlockedNavigation(location: Location | any): boolean {\n    if (!confirmNavigation) {\n      showModal(location.pathname);\n      return false;\n    }\n    return true;\n  }\n  function handleConfirm(): void {\n    closeModal();\n    if (nextLocation) {\n      setConfirmNavigation(true);\n    }\n  }\n\n  return (\n    <>\n      <Prompt when={when} message={handleBlockedNavigation} />\n      <ConfirmModal\n        open={openModal}\n        onCancel={closeModal}\n        onSubmit={handleConfirm}\n        text={message}\n        icon={<Icon name='warning-contained' />}\n        statusType='warning'\n        confirmBtnText={confirmBtnText}\n        title='Are you sure'\n      />\n    </>\n  );\n}\n\nexport default RouteLeavingGuard;\n","import RouteLeavingGuard from './RouteLeavingGuard';\n\nexport * from './RouteLeavingGuard.d';\n\nexport default RouteLeavingGuard;\n"],"sourceRoot":""}