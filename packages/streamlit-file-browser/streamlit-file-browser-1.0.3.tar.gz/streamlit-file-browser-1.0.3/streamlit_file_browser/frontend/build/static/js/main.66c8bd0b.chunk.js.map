{"version":3,"sources":["actions.jsx","StFileBrowser.tsx","index.tsx"],"names":["Actions","props","selectedItems","isFolder","icons","nameFilter","canCreateFolder","onCreateFolder","canRenameFile","onRenameFile","canRenameFolder","onRenameFolder","canDeleteFile","onDeleteFile","canDeleteFolder","onDeleteFolder","canDownloadFile","onDownloadFile","canDownloadFolder","onDownloadFolder","canChooseFile","onChooseFile","canChooseFolder","onChooseFolder","actions","length","selectedItemsAction","filter","item","action","Set","actionText","className","Loading","push","key","onClick","href","role","Folder","itemsWithoutKeyDerived","find","keyDerived","Rename","Delete","Download","aria-hidden","defaultProps","StreamlitEventType","noticeStreamlit","event","Streamlit","setComponentValue","FileBrowserWrapper","args","folderOpenHandler","opts","ajustHeight","folderCloseHandler","fileSelectedHandler","file","files","path","type","SELECT_FILE","target","downlandHandler","keys","includes","forEach","url","URL","artifacts_site","toString","filename","substring","lastIndexOf","a","document","createElement","download","body","appendChild","click","parentNode","removeChild","DOWNLOAD","chooseHandler","CHOOSE_FILE","convertFiles","map","modified","time","update_time","Date","size","noop","render","that","showActionBar","canFilter","detailRenderer","Icons","FontAwesome","onFolderOpen","onFolderClose","onSelect","actionRenderer","show_choose_file","show_download_file","i","revoke_step","root","getElementById","height","Math","min","clientHeight","scrollHeight","offsetHeight","setFrameHeight","setTimeout","this","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","StFileBrowser"],"mappings":"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","file":"static/js/main.66c8bd0b.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Actions = (props) => {\n  const {\n    selectedItems,\n    isFolder,\n    icons,\n    nameFilter,\n\n    canCreateFolder,\n    onCreateFolder,\n\n    canRenameFile,\n    onRenameFile,\n\n    canRenameFolder,\n    onRenameFolder,\n\n    canDeleteFile,\n    onDeleteFile,\n\n    canDeleteFolder,\n    onDeleteFolder,\n\n    canDownloadFile,\n    onDownloadFile,\n\n    canDownloadFolder,\n    onDownloadFolder,\n\n    canChooseFile,\n    onChooseFile,\n\n    canChooseFolder,\n    onChooseFolder,\n  } = props\n\n  /** @type any */\n  let actions = []\n\n  if (selectedItems.length) {\n    // Something is selected. Build custom actions depending on what it is.\n    const selectedItemsAction = selectedItems.filter(item => item.action)\n    if (selectedItemsAction.length === selectedItems.length && [...new Set(selectedItemsAction)].length === 1) {\n      // Selected item has an active action against it. Disable all other actions.\n      let actionText\n      switch (selectedItemsAction[0].action) {\n        case 'delete':\n          actionText = 'Deleting ...'\n          break\n\n        case 'rename':\n          actionText = 'Renaming ...'\n          break\n\n        default:\n          actionText = 'Moving ...'\n          break\n      }\n\n      actions = (\n        // TODO: Enable plugging in custom spinner.\n        <div className=\"item-actions\">\n          {icons.Loading} {actionText}\n        </div>\n      )\n    } else {\n      if (isFolder && canCreateFolder && !nameFilter) {\n        actions.push(\n          <li key=\"action-add-folder\">\n            <a\n              onClick={onCreateFolder}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Folder}\n              &nbsp;Add Subfolder\n            </a>\n          </li>\n        )\n      }\n\n      const itemsWithoutKeyDerived = selectedItems.find(item => !item.keyDerived)\n      if (!itemsWithoutKeyDerived && !isFolder && canRenameFile && selectedItems.length === 1) {\n        actions.push(\n          <li key=\"action-rename\">\n            <a\n              onClick={onRenameFile}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Rename}\n              &nbsp;Rename\n            </a>\n          </li>\n        )\n      } else if (!itemsWithoutKeyDerived && isFolder && canRenameFolder) {\n        actions.push(\n          <li key=\"action-rename\">\n            <a\n              onClick={onRenameFolder}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Rename}\n              &nbsp;Rename\n            </a>\n          </li>\n        )\n      }\n\n      if (!itemsWithoutKeyDerived && !isFolder && canDeleteFile) {\n        actions.push(\n          <li key=\"action-delete\">\n            <a\n              onClick={onDeleteFile}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Delete}\n              &nbsp;Delete\n            </a>\n          </li>\n        )\n      } else if (!itemsWithoutKeyDerived && isFolder && canDeleteFolder) {\n        actions.push(\n          <li key=\"action-delete\">\n            <a\n              onClick={onDeleteFolder}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Delete}\n              &nbsp;Delete\n            </a>\n          </li>\n        )\n      }\n\n      if ((!isFolder && canDownloadFile) || (isFolder && canDownloadFolder)) {\n        actions.push(\n          <li key=\"action-download\">\n            <a\n              onClick={isFolder ? onDownloadFolder : onDownloadFile}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Download}\n              &nbsp;Download\n            </a>\n          </li>\n        )\n      }\n\n      if ((!isFolder && canChooseFile) || (isFolder && canChooseFolder)) {\n        actions.push(\n          <li key=\"action-choose\">\n            <a\n              onClick={isFolder ? onChooseFolder : onChooseFile}\n              href=\"#\"\n              role=\"button\"\n            >\n              <i className=\"fa fa-plus\" aria-hidden=\"true\" />\n              &nbsp;Choose\n            </a>\n          </li>\n        )\n      }\n\n      if (actions.length) {\n        actions = (<ul className=\"item-actions\">{actions}</ul>)\n      } else {\n        actions = (<div className=\"item-actions\">&nbsp;</div>)\n      }\n    }\n  } else {\n    // Nothing selected: We're in the 'root' folder. Only allowed action is adding a folder.\n    if (canCreateFolder && !nameFilter) {\n      actions.push(\n        <li key=\"action-add-folder\">\n          <a\n            onClick={onCreateFolder}\n            href=\"#\"\n            role=\"button\"\n          >\n            {icons.Folder}\n            &nbsp;Add Folder\n          </a>\n        </li>\n      )\n    }\n\n    if (actions.length) {\n      actions = (<ul className=\"item-actions\">{actions}</ul>)\n    } else {\n      actions = (<div className=\"item-actions\">&nbsp;</div>)\n    }\n  }\n\n  return actions\n}\n\nActions.propTypes = {\n  selectedItems: PropTypes.arrayOf(PropTypes.object),\n  isFolder: PropTypes.bool,\n  icons: PropTypes.object,\n  nameFilter: PropTypes.string,\n\n  canCreateFolder: PropTypes.bool,\n  onCreateFolder: PropTypes.func,\n\n  canRenameFile: PropTypes.bool,\n  onRenameFile: PropTypes.func,\n\n  canRenameFolder: PropTypes.bool,\n  onRenameFolder: PropTypes.func,\n\n  canDeleteFile: PropTypes.bool,\n  onDeleteFile: PropTypes.func,\n\n  canDeleteFolder: PropTypes.bool,\n  onDeleteFolder: PropTypes.func,\n\n  canDownloadFile: PropTypes.bool,\n  onDownloadFile: PropTypes.func,\n\n  canDownloadFolder: PropTypes.bool,\n  onDownloadFolder: PropTypes.func,\n\n  canChooseFile: PropTypes.bool,\n  onChooseFile: PropTypes.func,\n\n  canChooseFolder: PropTypes.bool,\n  onChooseFolder: PropTypes.func,\n}\n\nActions.defaultProps = {\n  selectedItems: [],\n  isFolder: false,\n  icons: {},\n  nameFilter: '',\n\n  canCreateFolder: false,\n  onCreateFolder: null,\n\n  canRenameFile: false,\n  onRenameFile: null,\n\n  canRenameFolder: false,\n  onRenameFolder: null,\n\n  canDeleteFile: false,\n  onDeleteFile: null,\n\n  canDeleteFolder: false,\n  onDeleteFolder: null,\n\n  canDownloadFile: false,\n  onDownloadFile: null,\n\n  canDownloadFolder: false,\n  onDownloadFolder: null,\n\n  canChooseFile: false,\n  onChooseFile: null,\n\n  canChooseFolder: false,\n  onChooseFolder: null,\n}\n\nexport default Actions\n","import React from \"react\"\nimport {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n  ComponentProps,\n} from \"streamlit-component-lib\"\nimport FileBrowser, { Icons, FileBrowserFile, FileBrowserFolder } from 'react-keyed-file-browser';\nimport Actions from './actions';\nimport 'react-keyed-file-browser/dist/react-keyed-file-browser.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\ninterface File {\n  name: string;\n  path: string;\n  size: number;\n  create_time: number;\n  update_time: number;\n  access_time: number;\n}\n\nenum StreamlitEventType {\n  SELECT_FILE = \"SELECT_FILE\",\n  SELECT_FOLDER = \"SELECT_FOLDER\",\n  DOWNLOAD = \"DOWNLOAD\",\n  DELETE_FILE = \"DELETE_FILE\",\n  DELETE_FOLDER = \"DELETE_FOLDER\",\n  RENAME_FOLDER = \"RENAME_FOLDER\",\n  RENAME_FILE = \"RENAME_FILE\",\n  CREATE_FILE = \"CREATE_FILE\",\n  CREATE_FOLDER = \"CREATE_FOLDER\",\n  MOVE_FILE = \"MOVE_FILE\",\n  MOVE_FOLDER = \"MOVE_FOLDER\",\n  CHOOSE_FILE = \"CHOOSE_FILE\",\n}\n\ninterface StreamlitEvent {\n  type: StreamlitEventType;\n  target: File | File[];\n}\n\ninterface State {\n  numClicks: number\n  isFocused: boolean\n}\n\ninterface IArgs {\n  files: File[]\n  artifacts_site: string\n  show_download_file: boolean\n  show_choose_file: boolean\n}\n\nconst noticeStreamlit = (event: StreamlitEvent) => Streamlit.setComponentValue(event)\n\nconst getTimeDiff = (time: number) => (+new Date() - time);\n\nclass FileBrowserWrapper extends StreamlitComponentBase<State> {\n  private args: IArgs\n\n  constructor(props: ComponentProps) {\n    super(props)\n    this.args = props.args\n  }\n\n  ajustHeight(revoke_step?: number) {\n    const root = document.getElementById('root');\n    if (root) {\n      const height = Math.min(root.clientHeight, root.scrollHeight, root.offsetHeight);\n      Streamlit.setFrameHeight(height - (revoke_step ? revoke_step : 0));\n      setTimeout(Streamlit.setFrameHeight, 1);\n    }\n  }\n\n  componentDidMount() {\n    this.ajustHeight();\n  }\n\n  componentDidUpdate() {\n    this.ajustHeight();\n  }\n\n  folderOpenHandler = (opts: FileBrowserFolder) => this.ajustHeight();\n  folderCloseHandler = (opts: FileBrowserFolder) => this.ajustHeight();\n\n  fileSelectedHandler = (opts: FileBrowserFile) => {\n    const file = this.args.files.find(file => file.path === opts.key)\n    file && noticeStreamlit({ type: StreamlitEventType.SELECT_FILE, target: file });\n  }\n\n  downlandHandler = (keys: string[]) => {\n    const files = this.args.files.filter(file => keys.includes(file.path))\n    files.forEach(file => {\n      let url = new URL(file.path, `${this.args.artifacts_site}/download/artifacts/`).toString();\n      let filename = url.substring(url.lastIndexOf('/')+1);\n      let a = document.createElement('a');\n      a.target = \"_blank\";\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      a.parentNode?.removeChild(a);\n    });\n    files.length && noticeStreamlit({ type: StreamlitEventType.DOWNLOAD, target: files });\n  }\n\n  chooseHandler = (keys: string[]) => {\n    const files = this.args.files.filter(file => keys.includes(file.path))\n    files.length && noticeStreamlit({ type: StreamlitEventType.CHOOSE_FILE, target: files });\n  }\n\n  convertFiles = (files: File[]): FileBrowserFile[] => (\n    files.map(file => (\n      {\n        key: file.path,\n        modified: getTimeDiff(file.update_time),\n        size: file.size,\n      }\n    ))\n  )\n\n  noop = () => <></>\n  public render = () => {\n    let that = this;\n    return (\n      <div>\n        <FileBrowser\n          {...this.args}\n          showActionBar\n          canFilter={true}\n          detailRenderer={this.noop}\n          icons={Icons.FontAwesome(4)}\n          files={this.convertFiles(this.args.files)}\n          onFolderOpen={this.folderOpenHandler}\n          onFolderClose={this.folderCloseHandler}\n          onSelect={this.fileSelectedHandler}\n          onDownloadFile={this.downlandHandler}\n          actionRenderer={(...args: any) => {\n            return Actions({\n              ...args[0],\n              ...{\n              canChooseFile: that.args.show_choose_file,\n              canDownloadFile: that.args.show_download_file && that.args.artifacts_site,\n              onChooseFile: (keys: string[]) => that.chooseHandler(args[0].selectedItems.map((i: any) => i.key))\n            }})\n            }\n          }\n        />\n      </div>\n    )\n  }\n}\n\nexport default withStreamlitConnection(FileBrowserWrapper)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport StFileBrowser from \"./StFileBrowser\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StFileBrowser />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}