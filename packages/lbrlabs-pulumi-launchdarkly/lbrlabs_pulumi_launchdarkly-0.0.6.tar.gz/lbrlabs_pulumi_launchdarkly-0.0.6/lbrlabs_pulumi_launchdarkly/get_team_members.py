# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetTeamMembersResult',
    'AwaitableGetTeamMembersResult',
    'get_team_members',
    'get_team_members_output',
]

@pulumi.output_type
class GetTeamMembersResult:
    """
    A collection of values returned by getTeamMembers.
    """
    def __init__(__self__, emails=None, id=None, ignore_missing=None, team_members=None):
        if emails and not isinstance(emails, list):
            raise TypeError("Expected argument 'emails' to be a list")
        pulumi.set(__self__, "emails", emails)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ignore_missing and not isinstance(ignore_missing, bool):
            raise TypeError("Expected argument 'ignore_missing' to be a bool")
        pulumi.set(__self__, "ignore_missing", ignore_missing)
        if team_members and not isinstance(team_members, list):
            raise TypeError("Expected argument 'team_members' to be a list")
        pulumi.set(__self__, "team_members", team_members)

    @property
    @pulumi.getter
    def emails(self) -> Sequence[str]:
        return pulumi.get(self, "emails")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="ignoreMissing")
    def ignore_missing(self) -> Optional[bool]:
        return pulumi.get(self, "ignore_missing")

    @property
    @pulumi.getter(name="teamMembers")
    def team_members(self) -> Sequence['outputs.GetTeamMembersTeamMemberResult']:
        return pulumi.get(self, "team_members")


class AwaitableGetTeamMembersResult(GetTeamMembersResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetTeamMembersResult(
            emails=self.emails,
            id=self.id,
            ignore_missing=self.ignore_missing,
            team_members=self.team_members)


def get_team_members(emails: Optional[Sequence[str]] = None,
                     ignore_missing: Optional[bool] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetTeamMembersResult:
    """
    Provides a LaunchDarkly team members data source.

    This data source allows you to retrieve team member information from your LaunchDarkly organization on multiple team members.


    :param Sequence[str] emails: An array of unique email addresses associated with the team members.
    :param bool ignore_missing: A boolean to determine whether to ignore members that weren't found.
    """
    __args__ = dict()
    __args__['emails'] = emails
    __args__['ignoreMissing'] = ignore_missing
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('launchdarkly:index/getTeamMembers:getTeamMembers', __args__, opts=opts, typ=GetTeamMembersResult).value

    return AwaitableGetTeamMembersResult(
        emails=__ret__.emails,
        id=__ret__.id,
        ignore_missing=__ret__.ignore_missing,
        team_members=__ret__.team_members)


@_utilities.lift_output_func(get_team_members)
def get_team_members_output(emails: Optional[pulumi.Input[Sequence[str]]] = None,
                            ignore_missing: Optional[pulumi.Input[Optional[bool]]] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetTeamMembersResult]:
    """
    Provides a LaunchDarkly team members data source.

    This data source allows you to retrieve team member information from your LaunchDarkly organization on multiple team members.


    :param Sequence[str] emails: An array of unique email addresses associated with the team members.
    :param bool ignore_missing: A boolean to determine whether to ignore members that weren't found.
    """
    ...
