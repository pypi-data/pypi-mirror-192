# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetComputeInstanceListResult',
    'AwaitableGetComputeInstanceListResult',
    'get_compute_instance_list',
    'get_compute_instance_list_output',
]

@pulumi.output_type
class GetComputeInstanceListResult:
    """
    A collection of values returned by getComputeInstanceList.
    """
    def __init__(__self__, id=None, instances=None, zone=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instances and not isinstance(instances, list):
            raise TypeError("Expected argument 'instances' to be a list")
        pulumi.set(__self__, "instances", instances)
        if zone and not isinstance(zone, str):
            raise TypeError("Expected argument 'zone' to be a str")
        pulumi.set(__self__, "zone", zone)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def instances(self) -> Sequence['outputs.GetComputeInstanceListInstanceResult']:
        return pulumi.get(self, "instances")

    @property
    @pulumi.getter
    def zone(self) -> str:
        return pulumi.get(self, "zone")


class AwaitableGetComputeInstanceListResult(GetComputeInstanceListResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetComputeInstanceListResult(
            id=self.id,
            instances=self.instances,
            zone=self.zone)


def get_compute_instance_list(zone: Optional[str] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetComputeInstanceListResult:
    """
    Use this data source to access information about an existing resource.

    :param str zone: The Exoscale [Zone][zone] name.
    """
    __args__ = dict()
    __args__['zone'] = zone
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('exoscale:index/getComputeInstanceList:getComputeInstanceList', __args__, opts=opts, typ=GetComputeInstanceListResult).value

    return AwaitableGetComputeInstanceListResult(
        id=__ret__.id,
        instances=__ret__.instances,
        zone=__ret__.zone)


@_utilities.lift_output_func(get_compute_instance_list)
def get_compute_instance_list_output(zone: Optional[pulumi.Input[str]] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetComputeInstanceListResult]:
    """
    Use this data source to access information about an existing resource.

    :param str zone: The Exoscale [Zone][zone] name.
    """
    ...
