import ghidra.dbg.attributes
import java.lang


class TargetPointerDataType(ghidra.dbg.attributes.TargetDataType, object):
    UNDEFINED1: ghidra.dbg.attributes.TargetDataType = ghidra.dbg.attributes.TargetPrimitiveDataType$DefaultTargetPrimitiveDataType@1e991e67




    class DefaultTargetPointerDataType(object, ghidra.dbg.attributes.TargetPointerDataType):
        UNDEFINED1: ghidra.dbg.attributes.TargetDataType = ghidra.dbg.attributes.TargetPrimitiveDataType$DefaultTargetPrimitiveDataType@1e991e67



        def __init__(self, __a0: ghidra.dbg.attributes.TargetDataType): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def getReferentType(self) -> ghidra.dbg.attributes.TargetDataType: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...

        @property
        def referentType(self) -> ghidra.dbg.attributes.TargetDataType: ...





    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getReferentType(self) -> ghidra.dbg.attributes.TargetDataType: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def referentType(self) -> ghidra.dbg.attributes.TargetDataType: ...