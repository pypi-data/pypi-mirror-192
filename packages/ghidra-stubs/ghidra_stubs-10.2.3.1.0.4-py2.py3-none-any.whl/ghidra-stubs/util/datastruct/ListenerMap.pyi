import ghidra.util.datastruct
import java.lang


class ListenerMap(object):
    CALLING_THREAD: java.util.concurrent.Executor = ghidra.util.datastruct.ListenerMap$1@28ca06b6



    @overload
    def __init__(self, __a0: java.lang.Class): ...

    @overload
    def __init__(self, __a0: java.lang.Class, __a1: java.util.concurrent.Executor): ...



    def addChained(self, __a0: ghidra.util.datastruct.ListenerMap) -> None: ...

    @staticmethod
    def checkErr() -> None: ...

    def clear(self) -> None: ...

    def clearChained(self) -> None: ...

    @staticmethod
    def clearErr() -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def fire(self, __a0: java.lang.Class) -> object: ...

    def get(self, __a0: object) -> object: ...

    def getClass(self) -> java.lang.Class: ...

    def hashCode(self) -> int: ...

    def isEmpty(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def put(self, __a0: object, __a1: object) -> object: ...

    def putAll(self, __a0: ghidra.util.datastruct.ListenerMap) -> None: ...

    def remove(self, __a0: object) -> object: ...

    def removeChained(self, __a0: ghidra.util.datastruct.ListenerMap) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def empty(self) -> bool: ...