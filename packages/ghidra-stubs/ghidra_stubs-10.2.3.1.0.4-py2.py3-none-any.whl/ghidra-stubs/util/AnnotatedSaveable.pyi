from typing import List
import ghidra.util
import java.io
import java.lang
import java.lang.annotation
import java.util.function


class AnnotatedSaveable(object, ghidra.util.Saveable):





    class AbstractFieldAccessor(object, ghidra.util.AnnotatedSaveable.FieldAccessor):




        def __init__(self, __a0: java.lang.reflect.Field, __a1: java.util.function.Function, __a2: java.util.function.BiConsumer): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def restore(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def save(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class LongArrayFieldAccessor(ghidra.util.AnnotatedSaveable.AbstractFieldAccessor):




        def __init__(self, __a0: java.lang.reflect.Field): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def restore(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def save(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class SaveableField(java.lang.annotation.Annotation, object):








        def annotationType(self) -> java.lang.Class: ...

        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class LongFieldAccessor(ghidra.util.AnnotatedSaveable.AbstractFieldAccessor):




        def __init__(self, __a0: java.lang.reflect.Field): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def restore(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def save(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class StringArrayFieldAccessor(ghidra.util.AnnotatedSaveable.AbstractFieldAccessor):




        def __init__(self, __a0: java.lang.reflect.Field): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def restore(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def save(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class FloatArrayFieldAccessor(ghidra.util.AnnotatedSaveable.AbstractFieldAccessor):




        def __init__(self, __a0: java.lang.reflect.Field): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def restore(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def save(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class ShortFieldAccessor(ghidra.util.AnnotatedSaveable.AbstractFieldAccessor):




        def __init__(self, __a0: java.lang.reflect.Field): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def restore(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def save(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class AnnotatedSaveableException(java.lang.AssertionError):




        def __init__(self, __a0: unicode): ...



        def addSuppressed(self, __a0: java.lang.Throwable) -> None: ...

        def equals(self, __a0: object) -> bool: ...

        def fillInStackTrace(self) -> java.lang.Throwable: ...

        def getCause(self) -> java.lang.Throwable: ...

        def getClass(self) -> java.lang.Class: ...

        def getLocalizedMessage(self) -> unicode: ...

        def getMessage(self) -> unicode: ...

        def getStackTrace(self) -> List[java.lang.StackTraceElement]: ...

        def getSuppressed(self) -> List[java.lang.Throwable]: ...

        def hashCode(self) -> int: ...

        def initCause(self, __a0: java.lang.Throwable) -> java.lang.Throwable: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        @overload
        def printStackTrace(self) -> None: ...

        @overload
        def printStackTrace(self, __a0: java.io.PrintStream) -> None: ...

        @overload
        def printStackTrace(self, __a0: java.io.PrintWriter) -> None: ...

        def setStackTrace(self, __a0: List[java.lang.StackTraceElement]) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class ByteArrayFieldAccessor(ghidra.util.AnnotatedSaveable.AbstractFieldAccessor):




        def __init__(self, __a0: java.lang.reflect.Field): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def restore(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def save(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class ShortArrayFieldAccessor(ghidra.util.AnnotatedSaveable.AbstractFieldAccessor):




        def __init__(self, __a0: java.lang.reflect.Field): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def restore(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def save(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class ByteFieldAccessor(ghidra.util.AnnotatedSaveable.AbstractFieldAccessor):




        def __init__(self, __a0: java.lang.reflect.Field): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def restore(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def save(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class IntArrayFieldAccessor(ghidra.util.AnnotatedSaveable.AbstractFieldAccessor):




        def __init__(self, __a0: java.lang.reflect.Field): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def restore(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def save(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class IntFieldAccessor(ghidra.util.AnnotatedSaveable.AbstractFieldAccessor):




        def __init__(self, __a0: java.lang.reflect.Field): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def restore(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def save(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class BoolFieldAccessor(ghidra.util.AnnotatedSaveable.AbstractFieldAccessor):




        def __init__(self, __a0: java.lang.reflect.Field): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def restore(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def save(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class FieldAccessor(object):








        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def restore(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def save(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class StringFieldAccessor(ghidra.util.AnnotatedSaveable.AbstractFieldAccessor):




        def __init__(self, __a0: java.lang.reflect.Field): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def restore(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def save(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class DoubleArrayFieldAccessor(ghidra.util.AnnotatedSaveable.AbstractFieldAccessor):




        def __init__(self, __a0: java.lang.reflect.Field): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def restore(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def save(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class FieldAccessorFactory(java.util.function.Function, object):








        def andThen(self, __a0: java.util.function.Function) -> java.util.function.Function: ...

        def apply(self, __a0: object) -> object: ...

        def compose(self, __a0: java.util.function.Function) -> java.util.function.Function: ...

        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        @staticmethod
        def identity() -> java.util.function.Function: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class DoubleFieldAccessor(ghidra.util.AnnotatedSaveable.AbstractFieldAccessor):




        def __init__(self, __a0: java.lang.reflect.Field): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def restore(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def save(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...






    class FloatFieldAccessor(ghidra.util.AnnotatedSaveable.AbstractFieldAccessor):




        def __init__(self, __a0: java.lang.reflect.Field): ...



        def equals(self, __a0: object) -> bool: ...

        def getClass(self) -> java.lang.Class: ...

        def hashCode(self) -> int: ...

        def notify(self) -> None: ...

        def notifyAll(self) -> None: ...

        def restore(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def save(self, __a0: ghidra.util.AnnotatedSaveable, __a1: ghidra.util.ObjectStorage) -> None: ...

        def toString(self) -> unicode: ...

        @overload
        def wait(self) -> None: ...

        @overload
        def wait(self, __a0: long) -> None: ...

        @overload
        def wait(self, __a0: long, __a1: int) -> None: ...



    def __init__(self): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getObjectStorageFields(self) -> List[java.lang.Class]: ...

    def getSchemaVersion(self) -> int: ...

    def hashCode(self) -> int: ...

    def isPrivate(self) -> bool: ...

    def isUpgradeable(self, __a0: int) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def restore(self, __a0: ghidra.util.ObjectStorage) -> None: ...

    def save(self, __a0: ghidra.util.ObjectStorage) -> None: ...

    def toString(self) -> unicode: ...

    def upgrade(self, __a0: ghidra.util.ObjectStorage, __a1: int, __a2: ghidra.util.ObjectStorage) -> bool: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def objectStorageFields(self) -> List[java.lang.Class]: ...

    @property
    def private(self) -> bool: ...

    @property
    def schemaVersion(self) -> int: ...