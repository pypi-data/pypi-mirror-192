import com.google.common.collect
import ghidra.program.model.address
import java.lang
import java.util


class TracePropertyMapOperations(object):








    def clear(self, __a0: com.google.common.collect.Range, __a1: ghidra.program.model.address.AddressRange) -> bool: ...

    def equals(self, __a0: object) -> bool: ...

    def get(self, __a0: long, __a1: ghidra.program.model.address.Address) -> object: ...

    def getAddressSetView(self, __a0: com.google.common.collect.Range) -> ghidra.program.model.address.AddressSetView: ...

    def getClass(self) -> java.lang.Class: ...

    def getEntries(self, __a0: com.google.common.collect.Range, __a1: ghidra.program.model.address.AddressRange) -> java.util.Collection: ...

    def getEntry(self, __a0: long, __a1: ghidra.program.model.address.Address) -> java.util.Map.Entry: ...

    def getValueClass(self) -> java.lang.Class: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    @overload
    def set(self, __a0: com.google.common.collect.Range, __a1: ghidra.program.model.address.Address, __a2: object) -> None: ...

    @overload
    def set(self, __a0: com.google.common.collect.Range, __a1: ghidra.program.model.address.AddressRange, __a2: object) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def valueClass(self) -> java.lang.Class: ...