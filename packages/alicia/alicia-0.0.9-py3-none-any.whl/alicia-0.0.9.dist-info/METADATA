Metadata-Version: 2.1
Name: alicia
Version: 0.0.9
Summary: A CLI to download, train, test, predict and compare an image classifiers.
Home-page: https://pypi.org/project/alicia/
License: MIT
Keywords: neural-network,classifiers,image,machine-learning,performance,diff,compare,ai,torch,torchvision
Author: aemonge
Author-email: andres@aemonge.com
Requires-Python: >=3.10,<4.0
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Dist: better-abc (>=0.0.3,<0.0.4)
Requires-Dist: click (>=8.1,<9.0)
Requires-Dist: loading-display (>=0.2,<0.3)
Requires-Dist: matplotlib (>=3.6,<4.0)
Requires-Dist: numpy (>=1.24,<2.0)
Requires-Dist: pillow (>=9.4,<10.0)
Requires-Dist: plotext (>=5.2,<6.0)
Requires-Dist: termcolor (>=2.2,<3.0)
Requires-Dist: torch (>=1.13,<2.0)
Requires-Dist: torchvision (>=0.14,<0.15)
Requires-Dist: wcmatch (>=8.4,<9.0)
Project-URL: Documentation, https://pypi.org/project/alicia/docs
Project-URL: Repository, https://github.com/aemonge/alicia
Description-Content-Type: text/x-rst


.. image:: https://img.shields.io/pypi/v/alicia.svg
    :alt: PyPI-Server
    :target: https://pypi.org/project/alicia/

.. image:: https://pepy.tech/badge/alicia/month
    :alt: Monthly Downloads
    :target: https://pepy.tech/project/alicia


================================================
                   AlicIA
================================================
::

  Usage: alicia [OPTIONS] COMMAND [ARGS]...

    A CLI to download, train, test, predict and compare an image classifiers.

    Supporting mostly all torch-vision neural networks and datasets.

    This will also identify cute 🐱 or a fierce 🐶, also flowers or what type of
    🏘️ you should be.

  Options:
    -v, --verbose
    -g, --gpu
    --version      Show the version and exit.
    --help         Show this message and exit.

  Commands:
    compare   Compare the info, accuracy, and step speed two (or more by...
    create    Creates a new model for a given architecture.
    download  Download a MNIST dataset with PyTorch and split it into...
    info      Display information about a model architecture.
    predict   Predict images using a pre trained model, for a given folder...
    test      Test a pre trained model.
    train     Train a given architecture with a data directory containing a...


.. image:: ./docs/DallE-Alicia-logo.png
    :alt: DallE-Alicia-logo

Install and usage
================================================
::

    pip install alicia
    alicia --help

Features
-----------------------------------------------

To see the full list of features, and option please refer to `alicia --help`

* Download common torchvision datasets
* Train, test and predict using different custom-made and torch-vision models.
* Get information about each model.
* Compare models training speed, accuracy, and meta information.
* Tested with MNIST and FashionMNIST.

References
-----------------------------------------------

Useful links found and used while developing this

* (https://medium.com/analytics-vidhya/creating-a-custom-dataset-and-dataloader-in-pytorch-76f210a1df5d)
* (https://stackoverflow.com/questions/51911749/what-is-the-difference-between-torch-tensor-and-torch-tensor)
* (https://deepai.org/dataset/mnist)
* (https://medium.com/fenwicks/tutorial-1-mnist-the-hello-world-of-deep-learning-abd252c47709)

