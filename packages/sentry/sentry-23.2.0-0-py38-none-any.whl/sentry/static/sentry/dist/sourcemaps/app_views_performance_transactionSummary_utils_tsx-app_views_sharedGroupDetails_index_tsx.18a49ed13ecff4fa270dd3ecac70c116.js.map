{"version":3,"file":"chunks/app_views_performance_transactionSummary_utils_tsx-app_views_sharedGroupDetails_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/errorLevel.tsx","webpack:///./app/components/events/eventEntries.tsx","webpack:///./app/components/events/eventMessage.tsx","webpack:///./app/utils/profiling/routes.tsx","webpack:///./app/views/performance/transactionSummary/utils.tsx","webpack:///./app/views/sharedGroupDetails/sharedGroupHeader.tsx","webpack:///./app/views/sharedGroupDetails/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {Level} from 'sentry/types';\n\nconst DEFAULT_SIZE = '13px';\n\ntype Props = {\n  level?: Level;\n  size?: string;\n};\n\nconst ErrorLevel = styled('span')<Props>`\n  padding: 0;\n  position: relative;\n  width: ${p => p.size || DEFAULT_SIZE};\n  height: ${p => p.size || DEFAULT_SIZE};\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n  background-color: ${p => (p.level ? p.theme.level[p.level] : p.theme.level.error)};\n`;\n\nexport default ErrorLevel;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {CommitRow} from 'sentry/components/commitRow';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {\n  Entry,\n  Event,\n  Group,\n  Organization,\n  Project,\n  SharedViewOrganization,\n} from 'sentry/types';\nimport {isNotSharedOrganization} from 'sentry/types/utils';\nimport {objectIsEmpty} from 'sentry/utils';\n\nimport {EventContexts} from './contexts';\nimport {EventDevice} from './device';\nimport {EventAttachments} from './eventAttachments';\nimport {EventCause} from './eventCause';\nimport {EventDataSection} from './eventDataSection';\nimport {EventEntry} from './eventEntry';\nimport {EventErrors} from './eventErrors';\nimport {EventExtraData} from './eventExtraData';\nimport {EventSdk} from './eventSdk';\nimport {EventTagsAndScreenshot} from './eventTagsAndScreenshot';\nimport {EventViewHierarchy} from './eventViewHierarchy';\nimport {EventGroupingInfo} from './groupingInfo';\nimport {EventPackageData} from './packageData';\nimport {EventRRWebIntegration} from './rrwebIntegration';\nimport {EventSdkUpdates} from './sdkUpdates';\nimport {DataSection} from './styles';\nimport {EventUserFeedback} from './userFeedback';\n\ntype Props = {\n  location: Location;\n  /**\n   * The organization can be the shared view on a public issue view.\n   */\n  organization: Organization | SharedViewOrganization;\n  project: Project;\n  className?: string;\n  event?: Event;\n  group?: Group;\n  isShare?: boolean;\n  showTagSummary?: boolean;\n};\n\nconst EventEntries = ({\n  organization,\n  project,\n  location,\n  event,\n  group,\n  className,\n  isShare = false,\n  showTagSummary = true,\n}: Props) => {\n  const orgSlug = organization.slug;\n  const projectSlug = project.slug;\n  const orgFeatures = organization?.features ?? [];\n\n  if (!event) {\n    return (\n      <LatestEventNotAvailable>\n        <h3>{t('Latest Event Not Available')}</h3>\n      </LatestEventNotAvailable>\n    );\n  }\n\n  const hasContext = !objectIsEmpty(event.user ?? {}) || !objectIsEmpty(event.contexts);\n\n  return (\n    <div className={className}>\n      <EventErrors event={event} project={project} isShare={isShare} />\n      {!isShare && isNotSharedOrganization(organization) && (\n        <EventCause\n          project={project}\n          eventId={event.id}\n          group={group}\n          commitRow={CommitRow}\n        />\n      )}\n      {event.userReport && group && (\n        <EventDataSection title=\"User Feedback\" type=\"user-feedback\">\n          <EventUserFeedback\n            report={event.userReport}\n            orgId={orgSlug}\n            issueId={group.id}\n          />\n        </EventDataSection>\n      )}\n      {showTagSummary && (\n        <EventTagsAndScreenshot\n          event={event}\n          organization={organization as Organization}\n          projectSlug={projectSlug}\n          location={location}\n          isShare={isShare}\n        />\n      )}\n      <Entries\n        definedEvent={event}\n        projectSlug={projectSlug}\n        group={group}\n        organization={organization}\n        isShare={isShare}\n      />\n      {hasContext && <EventContexts group={group} event={event} />}\n      <EventExtraData event={event} />\n      <EventPackageData event={event} />\n      <EventDevice event={event} />\n      {!isShare && <EventViewHierarchy event={event} project={project} />}\n      {!isShare && <EventAttachments event={event} projectSlug={projectSlug} />}\n      <EventSdk sdk={event.sdk} meta={event._meta?.sdk} />\n      {!isShare && <EventSdkUpdates event={event} />}\n      {!isShare && event.groupID && (\n        <EventGroupingInfo\n          projectSlug={projectSlug}\n          event={event}\n          showGroupingConfig={\n            orgFeatures.includes('set-grouping-config') && 'groupingConfig' in event\n          }\n        />\n      )}\n      {!isShare && (\n        <EventRRWebIntegration event={event} orgId={orgSlug} projectSlug={projectSlug} />\n      )}\n    </div>\n  );\n};\n\nfunction Entries({\n  definedEvent,\n  projectSlug,\n  isShare,\n  group,\n  organization,\n}: {\n  definedEvent: Event;\n  projectSlug: string;\n  isShare?: boolean;\n} & Pick<Props, 'group' | 'organization'>) {\n  if (!Array.isArray(definedEvent.entries)) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      {(definedEvent.entries as Array<Entry>).map((entry, entryIdx) => (\n        <EventEntry\n          key={entryIdx}\n          projectSlug={projectSlug}\n          group={group}\n          organization={organization}\n          event={definedEvent}\n          entry={entry}\n          isShare={isShare}\n        />\n      ))}\n    </Fragment>\n  );\n}\n\nconst LatestEventNotAvailable = styled('div')`\n  padding: ${space(2)} ${space(4)};\n`;\n\nconst BorderlessEventEntries = styled(EventEntries)`\n  & ${DataSection} {\n    margin-left: 0 !important;\n    margin-right: 0 !important;\n    padding: ${space(3)} 0 0 0;\n  }\n  & ${DataSection}:first-child {\n    padding-top: 0;\n    border-top: 0;\n  }\n`;\n\nexport {EventEntries, BorderlessEventEntries};\n","import styled from '@emotion/styled';\n\nimport ErrorLevel from 'sentry/components/events/errorLevel';\nimport {space} from 'sentry/styles/space';\nimport {Level} from 'sentry/types';\n\ntype Props = {\n  annotations?: React.ReactNode;\n  className?: string;\n  hasGuideAnchor?: boolean;\n  level?: Level;\n  levelIndicatorSize?: string;\n  message?: React.ReactNode;\n};\n\nconst EventMessage = styled(\n  ({className, level, levelIndicatorSize, message, annotations}: Props) => (\n    <div className={className}>\n      {level && (\n        <ErrorLevel size={levelIndicatorSize} level={level}>\n          {level}\n        </ErrorLevel>\n      )}\n\n      {message && <Message>{message}</Message>}\n\n      {annotations}\n    </div>\n  )\n)`\n  display: flex;\n  gap: ${space(1)};\n  align-items: center;\n  position: relative;\n  line-height: 1.2;\n  overflow: hidden;\n`;\n\nconst Message = styled('span')`\n  ${p => p.theme.overflowEllipsis}\n  width: auto;\n  max-height: 38px;\n`;\n\nexport default EventMessage;\n","import {Location, LocationDescriptor, Path} from 'history';\n\nimport {Organization, Project} from 'sentry/types';\nimport {Trace} from 'sentry/types/profiling/core';\n\nexport function generateProfilingRoute({orgSlug}: {orgSlug: Organization['slug']}): Path {\n  return `/organizations/${orgSlug}/profiling/`;\n}\n\nexport function generateProfileSummaryRoute({\n  orgSlug,\n  projectSlug,\n}: {\n  orgSlug: Organization['slug'];\n  projectSlug: Project['slug'];\n}): Path {\n  return `/organizations/${orgSlug}/profiling/summary/${projectSlug}/`;\n}\n\nexport function generateProfileFlamechartRoute({\n  orgSlug,\n  projectSlug,\n  profileId,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n}): string {\n  return `/organizations/${orgSlug}/profiling/profile/${projectSlug}/${profileId}/flamechart/`;\n}\n\nexport function generateProfileDetailsRoute({\n  orgSlug,\n  projectSlug,\n  profileId,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n}): string {\n  return `/organizations/${orgSlug}/profiling/profile/${projectSlug}/${profileId}/details/`;\n}\n\nexport function generateProfilingRouteWithQuery({\n  orgSlug,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfilingRoute({orgSlug});\n  return {\n    pathname,\n    query: {\n      ...query,\n    },\n  };\n}\n\nexport function generateProfileSummaryRouteWithQuery({\n  orgSlug,\n  projectSlug,\n  transaction,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  projectSlug: Project['slug'];\n  transaction: string;\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileSummaryRoute({orgSlug, projectSlug});\n  return {\n    pathname,\n    query: {\n      ...query,\n      transaction,\n    },\n  };\n}\n\nexport function generateProfileFlamechartRouteWithQuery({\n  orgSlug,\n  projectSlug,\n  profileId,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileFlamechartRoute({\n    orgSlug,\n    projectSlug,\n    profileId,\n  });\n  return {\n    pathname,\n    query: {\n      ...query,\n    },\n  };\n}\n\nexport function generateProfileFlamechartRouteWithHighlightFrame({\n  orgSlug,\n  projectSlug,\n  profileId,\n  frameName,\n  framePackage,\n  query,\n}: {\n  frameName: string;\n  framePackage: string;\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n  query?: Location['query'];\n}): LocationDescriptor {\n  return generateProfileFlamechartRouteWithQuery({\n    orgSlug,\n    projectSlug,\n    profileId,\n    query: {\n      ...query,\n      frameName,\n      framePackage,\n    },\n  });\n}\n\nexport function generateProfileDetailsRouteWithQuery({\n  orgSlug,\n  projectSlug,\n  profileId,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileDetailsRoute({orgSlug, projectSlug, profileId});\n  return {\n    pathname,\n    query: {\n      ...query,\n    },\n  };\n}\n","import {PlainRoute} from 'react-router';\nimport styled from '@emotion/styled';\nimport {LocationDescriptor, Query} from 'history';\n\nimport {space} from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport {generateEventSlug} from 'sentry/utils/discover/urls';\nimport getRouteStringFromRoutes from 'sentry/utils/getRouteStringFromRoutes';\nimport {getTransactionDetailsUrl} from 'sentry/utils/performance/urls';\nimport {generateProfileFlamechartRoute} from 'sentry/utils/profiling/routes';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {getTraceDetailsUrl} from 'sentry/views/performance/traceDetails/utils';\n\nexport enum DisplayModes {\n  DURATION_PERCENTILE = 'durationpercentile',\n  DURATION = 'duration',\n  LATENCY = 'latency',\n  TREND = 'trend',\n  VITALS = 'vitals',\n  USER_MISERY = 'usermisery',\n}\n\nexport enum TransactionFilterOptions {\n  FASTEST = 'fastest',\n  SLOW = 'slow',\n  OUTLIER = 'outlier',\n  RECENT = 'recent',\n}\n\nexport function generateTransactionSummaryRoute({\n  orgSlug,\n  subPath,\n}: {\n  orgSlug: string;\n  subPath?: string;\n}): string {\n  return `/organizations/${orgSlug}/performance/summary/${subPath ? `${subPath}/` : ''}`;\n}\n\n// normalizes search conditions by removing any redundant search conditions before presenting them in:\n// - query strings\n// - search UI\nexport function normalizeSearchConditions(query: string): MutableSearch {\n  const filterParams = normalizeSearchConditionsWithTransactionName(query);\n\n  // no need to include transaction as its already in the query params\n  filterParams.removeFilter('transaction');\n\n  return filterParams;\n}\n\n// normalizes search conditions by removing any redundant search conditions, but retains any transaction name\nexport function normalizeSearchConditionsWithTransactionName(\n  query: string\n): MutableSearch {\n  const filterParams = new MutableSearch(query);\n\n  // remove any event.type queries since it is implied to apply to only transactions\n  filterParams.removeFilter('event.type');\n\n  return filterParams;\n}\n\nexport function transactionSummaryRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n  unselectedSeries = 'p100()',\n  display,\n  trendFunction,\n  trendColumn,\n  showTransactions,\n  additionalQuery,\n  subPath,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  additionalQuery?: Record<string, string>;\n  display?: DisplayModes;\n  projectID?: string | string[];\n  showTransactions?: TransactionFilterOptions;\n  subPath?: string;\n  trendColumn?: string;\n  trendFunction?: string;\n  unselectedSeries?: string | string[];\n}) {\n  const pathname = generateTransactionSummaryRoute({\n    orgSlug,\n    subPath,\n  });\n\n  let searchFilter: typeof query.query;\n  if (typeof query.query === 'string') {\n    searchFilter = normalizeSearchConditions(query.query).formatString();\n  } else {\n    searchFilter = query.query;\n  }\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: searchFilter,\n      unselectedSeries,\n      showTransactions,\n      display,\n      trendFunction,\n      trendColumn,\n      referrer: 'performance-transaction-summary',\n      ...additionalQuery,\n    },\n  };\n}\n\nexport function generateTraceLink(dateSelection) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    _query: Query\n  ): LocationDescriptor => {\n    const traceId = `${tableRow.trace}`;\n    if (!traceId) {\n      return {};\n    }\n\n    return getTraceDetailsUrl(organization, traceId, dateSelection, {});\n  };\n}\n\nexport function generateTransactionLink(transactionName: string) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    query: Query,\n    spanId?: string\n  ): LocationDescriptor => {\n    const eventSlug = generateEventSlug(tableRow);\n    return getTransactionDetailsUrl(\n      organization.slug,\n      eventSlug,\n      transactionName,\n      query,\n      spanId\n    );\n  };\n}\n\nexport function generateProfileLink() {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    _query: Query | undefined\n  ) => {\n    const profileId = tableRow['profile.id'];\n    if (!profileId) {\n      return {};\n    }\n    return generateProfileFlamechartRoute({\n      orgSlug: organization.slug,\n      projectSlug: String(tableRow['project.name']),\n      profileId: String(profileId),\n    });\n  };\n}\n\nexport function generateReplayLink(routes: PlainRoute<any>[]) {\n  const referrer = getRouteStringFromRoutes(routes);\n\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    _query: Query | undefined\n  ): LocationDescriptor => {\n    const replayId = tableRow.replayId;\n    if (!replayId) {\n      return {};\n    }\n\n    const replaySlug = `${tableRow['project.name']}:${replayId}`;\n\n    if (!tableRow.timestamp) {\n      return {\n        pathname: `/organizations/${organization.slug}/replays/${replaySlug}/`,\n        query: {\n          referrer,\n        },\n      };\n    }\n\n    const transactionTimestamp = new Date(tableRow.timestamp).getTime();\n\n    const transactionStartTimestamp =\n      transactionTimestamp - (tableRow['transaction.duration'] as number);\n\n    return {\n      pathname: `/organizations/${organization.slug}/replays/${replaySlug}/`,\n      query: {\n        event_t: transactionStartTimestamp,\n        referrer,\n      },\n    };\n  };\n}\nexport const SidebarSpacer = styled('div')`\n  margin-top: ${space(3)};\n`;\n","import styled from '@emotion/styled';\n\nimport EventMessage from 'sentry/components/events/eventMessage';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport ShortId from 'sentry/components/shortId';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Group, IssueCategory} from 'sentry/types';\n\nimport UnhandledTag, {TagAndMessageWrapper} from '../issueDetails/unhandledTag';\n\ntype Props = {\n  group: Group;\n};\n\nconst SharedGroupHeader = ({group}: Props) => (\n  <Wrapper>\n    <Details>\n      <TitleWrap>\n        <Title>{group.title}</Title>\n        <ShortIdWrapper>\n          <ShortId\n            shortId={group.shortId}\n            avatar={<ProjectBadge project={group.project} avatarSize={20} hideName />}\n          />\n          {group.issueCategory === IssueCategory.PERFORMANCE && (\n            <FeatureBadge\n              type=\"beta\"\n              title={t(\n                'Not all features have been implemented for shared Performance Issues and these issues may be missing context.'\n              )}\n            />\n          )}\n        </ShortIdWrapper>\n      </TitleWrap>\n\n      <TagAndMessageWrapper>\n        {group.isUnhandled && <UnhandledTag />}\n        <EventMessage message={group.culprit} />\n      </TagAndMessageWrapper>\n    </Details>\n  </Wrapper>\n);\n\nexport default SharedGroupHeader;\n\nconst Wrapper = styled('div')`\n  padding: ${space(3)} ${space(4)} ${space(3)} ${space(4)};\n  border-bottom: 1px solid ${p => p.theme.border};\n  position: relative;\n`;\n\nconst Details = styled('div')`\n  max-width: 960px;\n  margin: 0 auto;\n`;\n\nconst ShortIdWrapper = styled('div')`\n  display: flex;\n`;\n\nconst TitleWrap = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr max-content;\n  align-items: center;\n  margin-bottom: ${space(1)};\n`;\n\nconst Title = styled('h3')`\n  color: ${p => p.theme.headingColor};\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  line-height: ${p => p.theme.text.lineHeightHeading};\n  margin-right: ${space(2)};\n  margin-bottom: 0;\n  ${p => p.theme.overflowEllipsis};\n\n  @media (min-width: ${props => props.theme.breakpoints.small}) {\n    font-size: ${p => p.theme.headerFontSize};\n  }\n`;\n","import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'sentry/api';\nimport NotFound from 'sentry/components/errors/notFound';\nimport {BorderlessEventEntries} from 'sentry/components/events/eventEntries';\nimport Footer from 'sentry/components/footer';\nimport Link from 'sentry/components/links/link';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport SentryTypes from 'sentry/sentryTypes';\nimport {space} from 'sentry/styles/space';\nimport {Group} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\n\nimport {OrganizationContext} from '../organizationContext';\n\nimport SharedGroupHeader from './sharedGroupHeader';\n\ntype Props = RouteComponentProps<{shareId: string; orgId?: string}, {}> & {\n  api: Client;\n};\n\ntype State = {\n  error: boolean;\n  group: Group | null;\n  loading: boolean;\n};\n\nclass SharedGroupDetails extends Component<Props, State> {\n  static childContextTypes = {\n    group: SentryTypes.Group,\n  };\n\n  state: State = this.getInitialState();\n\n  getInitialState() {\n    return {\n      group: null,\n      loading: true,\n      error: false,\n    };\n  }\n\n  getChildContext() {\n    return {\n      group: this.state.group,\n    };\n  }\n\n  componentWillMount() {\n    document.body.classList.add('shared-group');\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('shared-group');\n  }\n\n  orgSlug(): string | null {\n    const {params} = this.props;\n    if (params.orgId) {\n      return params.orgId;\n    }\n    const {customerDomain} = window.__initialData || {};\n    if (customerDomain?.subdomain) {\n      return customerDomain.subdomain;\n    }\n    return null;\n  }\n\n  async fetchData() {\n    const {params, api} = this.props;\n    const {shareId} = params;\n    const orgSlug = this.orgSlug();\n    try {\n      if (orgSlug) {\n        const group = await api.requestPromise(\n          `/organizations/${orgSlug}/shared/issues/${shareId}/`\n        );\n        this.setState({loading: false, group});\n      } else {\n        const group = await api.requestPromise(`/shared/issues/${shareId}/`);\n        this.setState({loading: false, group});\n      }\n    } catch {\n      this.setState({loading: false, error: true});\n    }\n  }\n\n  handleRetry = () => {\n    this.setState(this.getInitialState());\n    this.fetchData();\n  };\n\n  getTitle() {\n    const {group} = this.state;\n\n    return group?.title ?? 'Sentry';\n  }\n\n  render() {\n    const {group, loading, error} = this.state;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (!group) {\n      return <NotFound />;\n    }\n\n    if (error) {\n      return <LoadingError onRetry={this.handleRetry} />;\n    }\n\n    const {location} = this.props;\n    const {permalink, latestEvent, project} = group;\n    const title = this.getTitle();\n\n    return (\n      <SentryDocumentTitle noSuffix title={title}>\n        <OrganizationContext.Provider value={project.organization}>\n          <div className=\"app\">\n            <div className=\"pattern-bg\" />\n            <div className=\"container\">\n              <div className=\"box box-modal\">\n                <div className=\"box-header\">\n                  <Link className=\"logo\" to=\"/\">\n                    <span className=\"icon-sentry-logo-full\" />\n                  </Link>\n                  {permalink && (\n                    <Link className=\"details\" to={permalink}>\n                      {t('Details')}\n                    </Link>\n                  )}\n                </div>\n                <div className=\"box-content\">\n                  <SharedGroupHeader group={group} />\n                  <Container className=\"group-overview event-details-container\">\n                    <BorderlessEventEntries\n                      location={location}\n                      organization={project.organization}\n                      group={group}\n                      event={latestEvent}\n                      project={project}\n                      isShare\n                    />\n                  </Container>\n                  <Footer />\n                </div>\n              </div>\n            </div>\n          </div>\n        </OrganizationContext.Provider>\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nconst Container = styled('div')`\n  padding: ${space(4)};\n`;\n\nexport {SharedGroupDetails};\nexport default withApi(SharedGroupDetails);\n"],"names":["DEFAULT_SIZE","p","size","level","theme","error","EventEntries","organization","project","location","event","group","className","isShare","showTagSummary","orgSlug","slug","projectSlug","orgFeatures","features","LatestEventNotAvailable","t","hasContext","objectIsEmpty","user","contexts","isNotSharedOrganization","eventId","id","commitRow","CommitRow","userReport","title","type","report","orgId","issueId","Entries","definedEvent","E","sdk","meta","_meta","groupID","showGroupingConfig","includes","Array","isArray","entries","Fragment","map","entry","entryIdx","space","BorderlessEventEntries","DataSection","EventMessage","levelIndicatorSize","message","annotations","Message","overflowEllipsis","generateProfileFlamechartRoute","profileId","generateProfilingRouteWithQuery","query","pathname","generateProfilingRoute","generateProfileSummaryRouteWithQuery","transaction","generateProfileSummaryRoute","generateProfileFlamechartRouteWithQuery","generateProfileFlamechartRouteWithHighlightFrame","frameName","framePackage","generateProfileDetailsRouteWithQuery","generateProfileDetailsRoute","DisplayModes","TransactionFilterOptions","normalizeSearchConditions","filterParams","normalizeSearchConditionsWithTransactionName","removeFilter","MutableSearch","transactionSummaryRouteWithQuery","projectID","unselectedSeries","display","trendFunction","trendColumn","showTransactions","additionalQuery","subPath","generateTransactionSummaryRoute","searchFilter","formatString","environment","statsPeriod","start","end","referrer","generateTraceLink","dateSelection","tableRow","_query","traceId","trace","getTraceDetailsUrl","generateTransactionLink","transactionName","spanId","eventSlug","generateEventSlug","getTransactionDetailsUrl","generateProfileLink","String","generateReplayLink","routes","getRouteStringFromRoutes","replayId","replaySlug","timestamp","transactionStartTimestamp","Date","getTime","event_t","SidebarSpacer","SharedGroupHeader","Wrapper","Details","TitleWrap","Title","ShortIdWrapper","shortId","avatar","avatarSize","hideName","issueCategory","IssueCategory","isUnhandled","culprit","border","headingColor","fontSizeExtraLarge","text","lineHeightHeading","props","breakpoints","small","headerFontSize","SharedGroupDetails","Component","this","getInitialState","setState","fetchData","loading","getChildContext","state","componentWillMount","document","body","classList","add","componentDidMount","componentWillUnmount","remove","params","customerDomain","window","__initialData","subdomain","async","api","shareId","requestPromise","getTitle","render","onRetry","handleRetry","permalink","latestEvent","noSuffix","value","to","Container","SentryTypes","withApi"],"sourceRoot":""}