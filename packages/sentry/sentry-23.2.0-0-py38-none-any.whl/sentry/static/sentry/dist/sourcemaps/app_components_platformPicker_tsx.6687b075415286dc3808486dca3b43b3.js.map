{"version":3,"file":"chunks/app_components_platformPicker_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/links/listLink.tsx","webpack:///./app/components/platformPicker.tsx","webpack:///./app/components/searchBar.tsx"],"sourcesContent":["import {Link as RouterLink} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport * as qs from 'query-string';\n\nimport useRouter from 'sentry/utils/useRouter';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = LinkProps & {\n  /**\n   * Link target. We don't want to expose the ToLocationFunction on this component.\n   */\n  to: LocationDescriptor;\n  /**\n   * The class to apply when the link is 'active'\n   */\n  activeClassName?: string;\n  disabled?: boolean;\n  index?: boolean;\n  /**\n   * Should be should be supplied by the parent component\n   */\n  isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n  query?: string;\n};\n\nfunction ListLink({\n  children,\n  className,\n  isActive,\n  query,\n  to,\n  activeClassName = 'active',\n  index = false,\n  disabled = false,\n  ...props\n}: Props) {\n  const router = useRouter();\n  const queryData = query ? qs.parse(query) : undefined;\n  const targetLocation = typeof to === 'string' ? {pathname: to, query: queryData} : to;\n  const target = normalizeUrl(targetLocation);\n\n  const active = isActive?.(target, index) ?? router.isActive(target, index);\n\n  return (\n    <StyledLi\n      className={classNames({[activeClassName]: active}, className)}\n      disabled={disabled}\n    >\n      <RouterLink {...props} onlyActiveOnIndex={index} to={disabled ? '' : target}>\n        {children}\n      </RouterLink>\n    </StyledLi>\n  );\n}\n\nexport default ListLink;\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\nimport {PlatformIcon} from 'platformicons';\n\nimport {Button} from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport ListLink from 'sentry/components/links/listLink';\nimport NavTabs from 'sentry/components/navTabs';\nimport SearchBar from 'sentry/components/searchBar';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport categoryList, {filterAliases, PlatformKey} from 'sentry/data/platformCategories';\nimport platforms from 'sentry/data/platforms';\nimport {IconClose, IconProject} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, PlatformIntegration} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\n\nconst PLATFORM_CATEGORIES = [...categoryList, {id: 'all', name: t('All')}] as const;\n\nconst PlatformList = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  grid-template-columns: repeat(auto-fill, 112px);\n  margin-bottom: ${space(2)};\n`;\n\ntype Category = (typeof PLATFORM_CATEGORIES)[number]['id'];\n\ninterface PlatformPickerProps {\n  setPlatform: (key: PlatformKey | null) => void;\n  defaultCategory?: Category;\n  listClassName?: string;\n  listProps?: React.HTMLAttributes<HTMLDivElement>;\n  noAutoFilter?: boolean;\n  organization?: Organization;\n  platform?: string | null;\n  showOther?: boolean;\n  source?: string;\n}\n\ntype State = {\n  category: Category;\n  filter: string;\n};\n\nclass PlatformPicker extends Component<PlatformPickerProps, State> {\n  static defaultProps = {\n    showOther: true,\n  };\n\n  state: State = {\n    category: this.props.defaultCategory ?? PLATFORM_CATEGORIES[0].id,\n    filter: this.props.noAutoFilter ? '' : (this.props.platform || '').split('-')[0],\n  };\n\n  get platformList() {\n    const {category} = this.state;\n    const currentCategory = categoryList.find(({id}) => id === category);\n\n    const filter = this.state.filter.toLowerCase();\n\n    const subsetMatch = (platform: PlatformIntegration) =>\n      platform.id.includes(filter) ||\n      platform.name.toLowerCase().includes(filter) ||\n      filterAliases[platform.id as PlatformKey]?.some(alias => alias.includes(filter));\n\n    const categoryMatch = (platform: PlatformIntegration) => {\n      if (category === 'all') {\n        return true;\n      }\n\n      // Symfony was no appering under the server category\n      // because the php-symfony entry in src/sentry/integration-docs/_platforms.json\n      // does not contain the suffix 2.\n      // This is a temporary fix until we can update that file or completly remove the php-symfony2 occurrences\n      if (\n        (platform.id as any) === 'php-symfony' &&\n        (currentCategory?.platforms as undefined | string[])?.includes('php-symfony2')\n      ) {\n        return true;\n      }\n      return (currentCategory?.platforms as undefined | string[])?.includes(platform.id);\n    };\n\n    const filtered = platforms\n      .filter(this.state.filter ? subsetMatch : categoryMatch)\n      .sort((a, b) => a.id.localeCompare(b.id));\n\n    return this.props.showOther ? filtered : filtered.filter(({id}) => id !== 'other');\n  }\n\n  logSearch = debounce(() => {\n    if (this.state.filter) {\n      trackAdvancedAnalyticsEvent('growth.platformpicker_search', {\n        search: this.state.filter.toLowerCase(),\n        num_results: this.platformList.length,\n        source: this.props.source,\n        organization: this.props.organization ?? null,\n      });\n    }\n  }, DEFAULT_DEBOUNCE_DURATION);\n\n  render() {\n    const platformList = this.platformList;\n    const {setPlatform, listProps, listClassName} = this.props;\n    const {filter, category} = this.state;\n\n    return (\n      <Fragment>\n        <NavContainer>\n          <CategoryNav>\n            {PLATFORM_CATEGORIES.map(({id, name}) => (\n              <ListLink\n                key={id}\n                onClick={(e: React.MouseEvent) => {\n                  trackAdvancedAnalyticsEvent('growth.platformpicker_category', {\n                    category: id,\n                    source: this.props.source,\n                    organization: this.props.organization ?? null,\n                  });\n                  this.setState({category: id, filter: ''});\n                  e.preventDefault();\n                }}\n                to=\"\"\n                isActive={() => id === (filter ? 'all' : category)}\n              >\n                {name}\n              </ListLink>\n            ))}\n          </CategoryNav>\n          <StyledSearchBar\n            size=\"sm\"\n            query={filter}\n            placeholder={t('Filter Platforms')}\n            onChange={val => this.setState({filter: val}, this.logSearch)}\n          />\n        </NavContainer>\n        <PlatformList className={listClassName} {...listProps}>\n          {platformList.map(platform => (\n            <PlatformCard\n              data-test-id={`platform-${platform.id}`}\n              key={platform.id}\n              platform={platform}\n              selected={this.props.platform === platform.id}\n              onClear={(e: React.MouseEvent) => {\n                setPlatform(null);\n                e.stopPropagation();\n              }}\n              onClick={() => {\n                trackAdvancedAnalyticsEvent('growth.select_platform', {\n                  platform_id: platform.id,\n                  source: this.props.source,\n                  organization: this.props.organization ?? null,\n                });\n                setPlatform(platform.id as PlatformKey);\n              }}\n            />\n          ))}\n        </PlatformList>\n        {platformList.length === 0 && (\n          <EmptyMessage\n            icon={<IconProject size=\"xl\" />}\n            title={t(\"We don't have an SDK for that yet!\")}\n          >\n            {tct(\n              `Not finding your platform? You can still create your project,\n              but looks like we don't have an official SDK for your platform\n              yet. However, there's a rich ecosystem of community supported\n              SDKs (including Perl, CFML, Clojure, and ActionScript). Try\n              [search:searching for Sentry clients] or contacting support.`,\n              {\n                search: (\n                  <ExternalLink href=\"https://github.com/search?q=-org%3Agetsentry+topic%3Asentry&type=Repositories\" />\n                ),\n              }\n            )}\n          </EmptyMessage>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst NavContainer = styled('div')`\n  margin-bottom: ${space(2)};\n  display: grid;\n  gap: ${space(2)};\n  grid-template-columns: 1fr minmax(0, 300px);\n  align-items: start;\n  border-bottom: 1px solid ${p => p.theme.border};\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  min-width: 6rem;\n  max-width: 12rem;\n  margin-top: -${space(0.25)};\n  margin-left: auto;\n  flex-shrink: 0;\n  flex-basis: 0;\n  flex-grow: 1;\n`;\n\nconst CategoryNav = styled(NavTabs)`\n  margin: 0;\n  margin-top: 4px;\n  white-space: nowrap;\n\n  > li {\n    float: none;\n    display: inline-block;\n  }\n`;\n\nconst StyledPlatformIcon = styled(PlatformIcon)`\n  margin: ${space(2)};\n`;\n\nconst ClearButton = styled(Button)`\n  position: absolute;\n  top: -6px;\n  right: -6px;\n  min-height: 0;\n  height: 22px;\n  width: 22px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background: ${p => p.theme.background};\n  color: ${p => p.theme.textColor};\n`;\n\nClearButton.defaultProps = {\n  icon: <IconClose isCircled size=\"xs\" />,\n  borderless: true,\n  size: 'xs',\n};\n\nconst PlatformCard = styled(({platform, selected, onClear, ...props}) => (\n  <div {...props}>\n    <StyledPlatformIcon\n      platform={platform.id}\n      size={56}\n      radius={5}\n      withLanguageIcon\n      format=\"lg\"\n    />\n\n    <h3>{platform.name}</h3>\n    {selected && <ClearButton onClick={onClear} aria-label={t('Clear')} />}\n  </div>\n))`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 0 14px;\n  border-radius: 4px;\n  cursor: pointer;\n  background: ${p => p.selected && p.theme.alert.info.backgroundLight};\n\n  &:hover {\n    background: ${p => p.theme.alert.muted.backgroundLight};\n  }\n\n  h3 {\n    flex-grow: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    color: ${p => (p.selected ? p.theme.textColor : p.theme.subText)};\n    text-align: center;\n    font-size: ${p => p.theme.fontSizeExtraSmall};\n    text-transform: uppercase;\n    margin: 0;\n    padding: 0 ${space(0.5)};\n    line-height: 1.2;\n  }\n`;\n\nexport default PlatformPicker;\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport {\n  Input,\n  InputGroup,\n  InputLeadingItems,\n  InputProps,\n  InputTrailingItems,\n} from 'sentry/components/inputGroup';\nimport {IconSearch} from 'sentry/icons';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ninterface SearchBarProps extends Omit<InputProps, 'onChange'> {\n  defaultQuery?: string;\n  onChange?: (query: string) => void;\n  onSearch?: (query: string) => void;\n  query?: string;\n  trailing?: React.ReactNode;\n  width?: string;\n}\n\nfunction SearchBar({\n  query: queryProp,\n  defaultQuery = '',\n  onChange,\n  onSearch,\n  width,\n  size,\n  className,\n  trailing,\n  ...inputProps\n}: SearchBarProps) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [query, setQuery] = useState(queryProp ?? defaultQuery);\n\n  // if query prop keeps changing we should treat this as\n  // a controlled component and its internal state should be in sync\n  useEffect(() => {\n    if (typeof queryProp === 'string') {\n      setQuery(queryProp);\n    }\n  }, [queryProp]);\n\n  const onQueryChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {value} = e.target;\n      setQuery(value);\n      onChange?.(value);\n    },\n    [onChange]\n  );\n\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      inputRef.current?.blur();\n      onSearch?.(query);\n    },\n    [onSearch, query]\n  );\n\n  const clearSearch = useCallback(() => {\n    setQuery('');\n    onChange?.('');\n    onSearch?.('');\n  }, [onChange, onSearch]);\n\n  return (\n    <FormWrap onSubmit={onSubmit} className={className}>\n      <InputGroup>\n        <InputLeadingItems disablePointerEvents>\n          <IconSearch color=\"subText\" size={size === 'xs' ? 'xs' : 'sm'} />\n        </InputLeadingItems>\n        <StyledInput\n          {...inputProps}\n          ref={inputRef}\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          value={query}\n          onChange={onQueryChange}\n          width={width}\n          size={size}\n        />\n        <InputTrailingItems>\n          {trailing}\n          {!!query && (\n            <SearchBarTrailingButton\n              size=\"zero\"\n              borderless\n              onClick={clearSearch}\n              icon={<IconClose size=\"xs\" />}\n              aria-label={t('Clear')}\n            />\n          )}\n        </InputTrailingItems>\n      </InputGroup>\n    </FormWrap>\n  );\n}\n\nconst FormWrap = styled('form')`\n  display: block;\n  position: relative;\n`;\n\nconst StyledInput = styled(Input)`\n  ${p => p.width && `width: ${p.width};`}\n`;\n\nexport const SearchBarTrailingButton = styled(Button)`\n  color: ${p => p.theme.subText};\n  padding: ${space(0.5)};\n`;\n\nexport default SearchBar;\n"],"names":["ListLink","children","className","isActive","query","to","activeClassName","index","disabled","props","router","useRouter","queryData","qs","undefined","targetLocation","pathname","target","normalizeUrl","active","StyledLi","classNames","onlyActiveOnIndex","shouldForwardProp","prop","p","theme","PLATFORM_CATEGORIES","categoryList","id","name","t","PlatformList","space","PlatformPicker","Component","category","this","defaultCategory","filter","noAutoFilter","platform","split","debounce","state","trackAdvancedAnalyticsEvent","search","toLowerCase","num_results","platformList","length","source","organization","DEFAULT_DEBOUNCE_DURATION","currentCategory","filtered","platforms","includes","filterAliases","some","alias","sort","a","b","localeCompare","showOther","render","setPlatform","listProps","listClassName","Fragment","NavContainer","CategoryNav","map","onClick","e","setState","preventDefault","StyledSearchBar","size","placeholder","onChange","val","logSearch","PlatformCard","selected","onClear","stopPropagation","platform_id","icon","title","tct","href","border","SearchBar","NavTabs","StyledPlatformIcon","PlatformIcon","ClearButton","Button","background","textColor","defaultProps","isCircled","borderless","radius","withLanguageIcon","format","alert","info","backgroundLight","muted","subText","fontSizeExtraSmall","queryProp","defaultQuery","onSearch","width","trailing","inputProps","inputRef","useRef","setQuery","useState","useEffect","onQueryChange","useCallback","value","onSubmit","current","blur","clearSearch","FormWrap","disablePointerEvents","color","StyledInput","ref","type","autoComplete","SearchBarTrailingButton","Input"],"sourceRoot":""}