{"version":3,"file":"chunks/app_views_settings_project_projectTeams_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"kLAYA,QAZA,SACEA,EACAC,GAGQ,IAFRC,IAAsB,UAAH,+CACnBC,EAAoB,uCAEpB,MAAMC,EAAY,GAAEJ,OAAeC,IAC7BI,EAAOF,EAAe,GAAEC,OAAcD,IAAgBC,EAE5D,OAAOF,EAAc,GAAEG,aAAkBA,CAC3C,C,66BCiBA,MAAMC,UAAqBC,EAAAA,EAAwB,gEAWjC,KACd,MAAM,aAACC,GAAgBC,KAAKC,MACtBC,EAAS,IAAIC,IAAIJ,EAAaG,QACpC,OACEA,EAAOE,IAAI,cAAgBF,EAAOE,IAAI,eAAiBF,EAAOE,IAAI,gBAAgB,KAErF,4BAEeC,IACd,GAAIL,KAAKM,MAAMC,QACb,OAGF,MAAM,aAACR,EAAY,QAAES,GAAWR,KAAKC,OAErCQ,EAAAA,EAAAA,IAAsBT,KAAKU,IAAKX,EAAaY,KAAMH,EAAQG,KAAMN,GAC9DO,MAAK,IAAMZ,KAAKa,kBAAkBR,KAClCS,OAAM,MACLC,EAAAA,EAAAA,KAAgBC,EAAAA,EAAAA,GAAE,+BAAgCX,IAClDL,KAAKiB,SAAS,CAACV,SAAS,GAAO,GAC/B,KACL,iCAEoBF,IACnBL,KAAKiB,UAASC,IAAa,CACzBC,aAAc,KACRD,EAAUC,cAAgB,IAAIC,QAAOC,GAAQA,EAAKV,OAASN,QAEhE,KACJ,+BAEkBgB,IACjBrB,KAAKiB,UAASC,IAAa,CACzBC,aAAc,IAAKD,EAAUC,cAAgB,GAAKE,MACjD,KACJ,yBAEYhB,IACX,GAAIL,KAAKM,MAAMC,QACb,OAGF,MAAMc,EAAOC,EAAAA,EAAAA,UAAoBjB,GACjC,IAAKgB,EAGH,OAFAN,EAAAA,EAAAA,KAAgBQ,EAAAA,EAAAA,IAAI,8BAA+B,CAAClB,mBACpDL,KAAKiB,SAAS,CAACO,OAAO,IAIxB,MAAM,aAACzB,EAAY,QAAES,GAAWR,KAAKC,OAErCwB,EAAAA,EAAAA,IAAiBzB,KAAKU,IAAKX,EAAaY,KAAMH,EAAQG,KAAMU,GAAMT,MAChE,KACEZ,KAAK0B,gBAAgBL,EAAK,IAE5B,KACErB,KAAKiB,SAAS,CACZO,OAAO,EACPjB,SAAS,GACT,GAEL,KACF,gCAEmBoB,IAClBA,EAAEC,kBACFD,EAAEE,iBAEF,MAAM,QAACrB,EAAO,aAAET,GAAgBC,KAAKC,MAEhCD,KAAK8B,kBAIVC,EAAAA,EAAAA,qBAAoB,CAClBvB,UACAT,eACAiC,QAASC,KACPR,EAAAA,EAAAA,IAAiBzB,KAAKU,IAAKX,EAAaY,KAAMH,EAAQG,KAAMsB,GAAMrB,KAChEZ,KAAKkC,iBACLlC,KAAKkC,iBACN,GAEH,GACH,CA9FDC,eACE,MAAM,aAACpC,EAAY,QAAES,GAAWR,KAAKC,MACrC,MAAO,CAAC,CAAC,eAAiB,aAAYF,EAAaY,QAAQH,EAAQG,eACrE,CAEAyB,WACE,MAAM,UAACC,GAAarC,KAAKC,MAAMqC,OAC/B,OAAOC,EAAAA,EAAAA,IAAcvB,EAAAA,EAAAA,GAAE,iBAAkBqB,GAAW,EACtD,CAwFAG,aACE,MAAM,QAAChC,EAAO,aAAET,GAAgBC,KAAKC,MAE/B6B,EAAgB9B,KAAK8B,gBACrBW,EAAY1C,EAAaG,OAAOwC,SAAS,iBACzCC,GAAgB3B,EAAAA,EAAAA,GACpB,0NACAR,EAAQG,OAEJ,aAACQ,GAAgBnB,KAAKM,MAEtBsC,GACJ,QAACC,EAAgB,YACd7B,EAAAA,EAAAA,GAAE,UACH,QAAC,IAAO,CACN8B,SAAUhB,EACViB,OAAO/B,EAAAA,EAAAA,GAAE,+CACTgC,SAAS,MAAK,UAEd,QAACC,EAAoB,CACnBC,GAAG,eACHJ,UAAWhB,EACXqB,QAASnD,KAAKoD,iBAAiB,UAE9BpC,EAAAA,EAAAA,GAAE,sBAMX,OACE,0BACE,QAAC,IAAkB,CAAC+B,OAAO/B,EAAAA,EAAAA,GAAE,uBAAwBR,EAAQG,SAC7D,QAAC,IAAU,CACTmC,UAAWL,EACXY,uBAAuB,EACvBtD,aAAcA,EACd6C,WAAYA,EACZU,cAAenC,GAAgB,GAC/BoC,UAAWvD,KAAKwD,UAChBC,aAAczD,KAAK0D,aACnBC,6BAA8BhB,MAItC,EAGF,MAAME,GAAmB,OAAO,MAAK,qBAAZ,CAAa,8BAEzBe,EAAAA,EAAAA,GAAM,IAAI,kCAIjBX,GAAuB,OAAOY,EAAAA,EAAI,qBAAX,CAAY,oCAGrCC,GACAA,EAAEhB,WACFiB,EAAAA,EAAAA,IAAG,4BAEQD,EAAEE,MAAMC,QAAO,qBAEzB,KAGL,G","sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/settings/project/projectTeams.tsx"],"sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import {RouteComponentProps} from 'react-router';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {openCreateTeamModal} from 'sentry/actionCreators/modal';\nimport {addTeamToProject, removeTeamFromProject} from 'sentry/actionCreators/projects';\nimport Link from 'sentry/components/links/link';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {t, tct} from 'sentry/locale';\nimport TeamStore from 'sentry/stores/teamStore';\nimport {space} from 'sentry/styles/space';\nimport {Organization, Project, Team} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TeamSelect from 'sentry/views/settings/components/teamSelect';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & RouteComponentProps<{projectId: string}, {}>;\n\ntype State = {\n  projectTeams: null | Team[];\n} & AsyncView['state'];\n\nclass ProjectTeams extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, project} = this.props;\n    return [['projectTeams', `/projects/${organization.slug}/${project.slug}/teams/`]];\n  }\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Project Teams'), projectId, false);\n  }\n\n  canCreateTeam = () => {\n    const {organization} = this.props;\n    const access = new Set(organization.access);\n    return (\n      access.has('org:write') && access.has('team:write') && access.has('project:write')\n    );\n  };\n\n  handleRemove = (teamSlug: Team['slug']) => {\n    if (this.state.loading) {\n      return;\n    }\n\n    const {organization, project} = this.props;\n\n    removeTeamFromProject(this.api, organization.slug, project.slug, teamSlug)\n      .then(() => this.handleRemovedTeam(teamSlug))\n      .catch(() => {\n        addErrorMessage(t('Could not remove the %s team', teamSlug));\n        this.setState({loading: false});\n      });\n  };\n\n  handleRemovedTeam = (teamSlug: Team['slug']) => {\n    this.setState(prevState => ({\n      projectTeams: [\n        ...(prevState.projectTeams || []).filter(team => team.slug !== teamSlug),\n      ],\n    }));\n  };\n\n  handleAddedTeam = (team: Team) => {\n    this.setState(prevState => ({\n      projectTeams: [...(prevState.projectTeams || []), team],\n    }));\n  };\n\n  handleAdd = (teamSlug: string) => {\n    if (this.state.loading) {\n      return;\n    }\n\n    const team = TeamStore.getBySlug(teamSlug);\n    if (!team) {\n      addErrorMessage(tct('Unable to find \"[teamSlug]\"', {teamSlug}));\n      this.setState({error: true});\n      return;\n    }\n\n    const {organization, project} = this.props;\n\n    addTeamToProject(this.api, organization.slug, project.slug, team).then(\n      () => {\n        this.handleAddedTeam(team);\n      },\n      () => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n      }\n    );\n  };\n\n  handleCreateTeam = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    const {project, organization} = this.props;\n\n    if (!this.canCreateTeam()) {\n      return;\n    }\n\n    openCreateTeamModal({\n      project,\n      organization,\n      onClose: data => {\n        addTeamToProject(this.api, organization.slug, project.slug, data).then(\n          this.remountComponent,\n          this.remountComponent\n        );\n      },\n    });\n  };\n\n  renderBody() {\n    const {project, organization} = this.props;\n\n    const canCreateTeam = this.canCreateTeam();\n    const hasAccess = organization.access.includes('project:write');\n    const confirmRemove = t(\n      'This is the last team with access to this project. Removing it will mean only organization owners and managers will be able to access the project pages. Are you sure you want to remove this team from the project %s?',\n      project.slug\n    );\n    const {projectTeams} = this.state;\n\n    const menuHeader = (\n      <StyledTeamsLabel>\n        {t('Teams')}\n        <Tooltip\n          disabled={canCreateTeam}\n          title={t('You must be a project admin to create teams')}\n          position=\"top\"\n        >\n          <StyledCreateTeamLink\n            to=\"#create-team\"\n            disabled={!canCreateTeam}\n            onClick={this.handleCreateTeam}\n          >\n            {t('Create Team')}\n          </StyledCreateTeamLink>\n        </Tooltip>\n      </StyledTeamsLabel>\n    );\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('Project Teams for %s', project.slug)} />\n        <TeamSelect\n          disabled={!hasAccess}\n          enforceIdpProvisioned={false}\n          organization={organization}\n          menuHeader={menuHeader}\n          selectedTeams={projectTeams ?? []}\n          onAddTeam={this.handleAdd}\n          onRemoveTeam={this.handleRemove}\n          confirmLastTeamRemoveMessage={confirmRemove}\n        />\n      </div>\n    );\n  }\n}\n\nconst StyledTeamsLabel = styled('div')`\n  font-size: 0.875em;\n  padding: ${space(0.5)} 0px;\n  text-transform: uppercase;\n`;\n\nconst StyledCreateTeamLink = styled(Link)`\n  float: right;\n  text-transform: none;\n  ${p =>\n    p.disabled &&\n    css`\n      cursor: not-allowed;\n      color: ${p.theme.gray300};\n      opacity: 0.6;\n    `};\n`;\n\nexport default ProjectTeams;\n"],"names":["routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","ProjectTeams","AsyncView","organization","this","props","access","Set","has","teamSlug","state","loading","project","removeTeamFromProject","api","slug","then","handleRemovedTeam","catch","addErrorMessage","t","setState","prevState","projectTeams","filter","team","TeamStore","tct","error","addTeamToProject","handleAddedTeam","e","stopPropagation","preventDefault","canCreateTeam","openCreateTeamModal","onClose","data","remountComponent","getEndpoints","getTitle","projectId","params","routeTitleGen","renderBody","hasAccess","includes","confirmRemove","menuHeader","StyledTeamsLabel","disabled","title","position","StyledCreateTeamLink","to","onClick","handleCreateTeam","enforceIdpProvisioned","selectedTeams","onAddTeam","handleAdd","onRemoveTeam","handleRemove","confirmLastTeamRemoveMessage","space","Link","p","css","theme","gray300"],"sourceRoot":""}