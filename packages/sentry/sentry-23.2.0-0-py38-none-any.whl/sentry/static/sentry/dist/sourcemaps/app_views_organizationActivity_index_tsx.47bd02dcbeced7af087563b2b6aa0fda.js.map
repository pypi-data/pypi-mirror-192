{"version":3,"file":"chunks/app_views_organizationActivity_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/activity/item/avatar.tsx","webpack:///./app/components/events/errorLevel.tsx","webpack:///./app/components/events/eventMessage.tsx","webpack:///./app/components/pullRequestLink.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/components/issueLink.tsx","webpack:///./app/views/organizationActivity/activityFeedItem.tsx","webpack:///./app/views/organizationActivity/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport Placeholder from 'sentry/components/placeholder';\nimport {IconSentry} from 'sentry/icons';\nimport {AvatarUser} from 'sentry/types';\n\ntype Props = {\n  type: 'system' | 'user';\n  className?: string;\n  size?: number;\n  user?: AvatarUser;\n};\n\nfunction ActivityAvatar({className, type, user, size = 38}: Props) {\n  if (user) {\n    return <UserAvatar user={user} size={size} className={className} />;\n  }\n\n  if (type === 'system') {\n    // Return Sentry avatar\n    return (\n      <SystemAvatar className={className} size={size}>\n        <StyledIconSentry size=\"md\" />\n      </SystemAvatar>\n    );\n  }\n\n  return (\n    <Placeholder\n      className={className}\n      width={`${size}px`}\n      height={`${size}px`}\n      shape=\"circle\"\n    />\n  );\n}\n\nexport default ActivityAvatar;\n\ntype SystemAvatarProps = {\n  size: number;\n};\n\nconst SystemAvatar = styled('span')<SystemAvatarProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${p => p.size}px;\n  height: ${p => p.size}px;\n  background-color: ${p => p.theme.textColor};\n  color: ${p => p.theme.background};\n  border-radius: 50%;\n`;\n\nconst StyledIconSentry = styled(IconSentry)`\n  padding-bottom: 3px;\n`;\n","import styled from '@emotion/styled';\n\nimport {Level} from 'sentry/types';\n\nconst DEFAULT_SIZE = '13px';\n\ntype Props = {\n  level?: Level;\n  size?: string;\n};\n\nconst ErrorLevel = styled('span')<Props>`\n  padding: 0;\n  position: relative;\n  width: ${p => p.size || DEFAULT_SIZE};\n  height: ${p => p.size || DEFAULT_SIZE};\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n  background-color: ${p => (p.level ? p.theme.level[p.level] : p.theme.level.error)};\n`;\n\nexport default ErrorLevel;\n","import styled from '@emotion/styled';\n\nimport ErrorLevel from 'sentry/components/events/errorLevel';\nimport {space} from 'sentry/styles/space';\nimport {Level} from 'sentry/types';\n\ntype Props = {\n  annotations?: React.ReactNode;\n  className?: string;\n  hasGuideAnchor?: boolean;\n  level?: Level;\n  levelIndicatorSize?: string;\n  message?: React.ReactNode;\n};\n\nconst EventMessage = styled(\n  ({className, level, levelIndicatorSize, message, annotations}: Props) => (\n    <div className={className}>\n      {level && (\n        <ErrorLevel size={levelIndicatorSize} level={level}>\n          {level}\n        </ErrorLevel>\n      )}\n\n      {message && <Message>{message}</Message>}\n\n      {annotations}\n    </div>\n  )\n)`\n  display: flex;\n  gap: ${space(1)};\n  align-items: center;\n  position: relative;\n  line-height: 1.2;\n  overflow: hidden;\n`;\n\nconst Message = styled('span')`\n  ${p => p.theme.overflowEllipsis}\n  width: auto;\n  max-height: 38px;\n`;\n\nexport default EventMessage;\n","import styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {IconBitbucket, IconGithub, IconGitlab} from 'sentry/icons';\nimport {space} from 'sentry/styles/space';\nimport {PullRequest, Repository} from 'sentry/types';\n\nfunction renderIcon(repo: Repository) {\n  if (!repo.provider) {\n    return null;\n  }\n\n  const {id} = repo.provider;\n  const providerId = id.includes(':') ? id.split(':').pop() : id;\n\n  switch (providerId) {\n    case 'github':\n      return <IconGithub size=\"xs\" data-test-id=\"pull-request-github\" />;\n    case 'gitlab':\n      return <IconGitlab size=\"xs\" data-test-id=\"pull-request-gitlab\" />;\n    case 'bitbucket':\n      return <IconBitbucket size=\"xs\" />;\n    default:\n      return null;\n  }\n}\n\ntype Props = {\n  pullRequest: PullRequest;\n  repository: Repository;\n  inline?: boolean;\n};\n\nfunction PullRequestLink({pullRequest, repository, inline}: Props) {\n  const displayId = `${repository.name} #${pullRequest.id}: ${pullRequest.title}`;\n\n  if (!pullRequest.externalUrl) {\n    return <span>{displayId}</span>;\n  }\n\n  return !inline ? (\n    <Button\n      external\n      href={pullRequest.externalUrl}\n      size=\"sm\"\n      icon={renderIcon(repository)}\n    >\n      {displayId}\n    </Button>\n  ) : (\n    <ExternalPullLink href={pullRequest.externalUrl}>\n      {renderIcon(repository)}\n      {displayId}\n    </ExternalPullLink>\n  );\n}\n\nconst ExternalPullLink = styled(ExternalLink)`\n  display: inline-flex;\n  align-items: center;\n  gap: ${space(0.5)};\n`;\n\nexport default PullRequestLink;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport Count from 'sentry/components/count';\nimport EventOrGroupTitle from 'sentry/components/eventOrGroupTitle';\nimport EventAnnotation from 'sentry/components/events/eventAnnotation';\nimport EventMessage from 'sentry/components/events/eventMessage';\nimport {Hovercard} from 'sentry/components/hovercard';\nimport Link from 'sentry/components/links/link';\nimport TimeSince from 'sentry/components/timeSince';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Group} from 'sentry/types';\nimport {getMessage} from 'sentry/utils/events';\n\ntype Props = {\n  card: boolean;\n  children: React.ReactNode;\n  issue: Group;\n  orgId: string;\n  to: string;\n};\n\nconst IssueLink = ({children, orgId, issue, to, card = true}: Props) => {\n  if (!card) {\n    return <Link to={to}>{children}</Link>;\n  }\n\n  const message = getMessage(issue);\n\n  const className = classNames({\n    isBookmarked: issue.isBookmarked,\n    hasSeen: issue.hasSeen,\n    isResolved: issue.status === 'resolved',\n  });\n\n  const streamPath = `/organizations/${orgId}/issues/`;\n\n  const hovercardBody = (\n    <div className={className}>\n      <Section>\n        <Title>\n          <StyledEventOrGroupTitle data={issue} />\n        </Title>\n\n        <HovercardEventMessage\n          level={issue.level}\n          levelIndicatorSize=\"9px\"\n          message={message}\n          annotations={\n            <Fragment>\n              {issue.logger && (\n                <EventAnnotation>\n                  <Link\n                    to={{\n                      pathname: streamPath,\n                      query: {query: `logger:${issue.logger}`, referrer: 'issue-link'},\n                    }}\n                  >\n                    {issue.logger}\n                  </Link>\n                </EventAnnotation>\n              )}\n              {issue.annotations.map((annotation, i) => (\n                <EventAnnotation key={i} dangerouslySetInnerHTML={{__html: annotation}} />\n              ))}\n            </Fragment>\n          }\n        />\n      </Section>\n\n      <Grid>\n        <div>\n          <GridHeader>{t('First Seen')}</GridHeader>\n          <StyledTimeSince date={issue.firstSeen} />\n        </div>\n        <div>\n          <GridHeader>{t('Last Seen')}</GridHeader>\n          <StyledTimeSince date={issue.lastSeen} />\n        </div>\n        <div>\n          <GridHeader>{t('Occurrences')}</GridHeader>\n          <Count value={issue.count} />\n        </div>\n        <div>\n          <GridHeader>{t('Users Affected')}</GridHeader>\n          <Count value={issue.userCount} />\n        </div>\n      </Grid>\n    </div>\n  );\n\n  return (\n    <Hovercard body={hovercardBody} header={issue.shortId}>\n      <Link to={to}>{children}</Link>\n    </Hovercard>\n  );\n};\n\nexport default IssueLink;\n\nconst Title = styled('div')`\n  ${p => p.theme.overflowEllipsis};\n  margin: 0 0 ${space(0.5)};\n`;\n\nconst StyledEventOrGroupTitle = styled(EventOrGroupTitle)`\n  font-weight: 600;\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  em {\n    font-style: normal;\n    font-weight: 400;\n    font-size: ${p => p.theme.fontSizeSmall};\n  }\n`;\n\nconst Section = styled('section')`\n  margin-bottom: ${space(2)};\n`;\n\nconst Grid = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${space(2)};\n`;\nconst HovercardEventMessage = styled(EventMessage)`\n  font-size: 12px;\n`;\n\nconst GridHeader = styled('h5')`\n  color: ${p => p.theme.gray300};\n  font-size: 11px;\n  margin-bottom: ${space(0.5)};\n  text-transform: uppercase;\n`;\n\nconst StyledTimeSince = styled(TimeSince)`\n  color: inherit;\n`;\n","import {Component, createRef} from 'react';\nimport styled from '@emotion/styled';\n\nimport ActivityAvatar from 'sentry/components/activity/item/avatar';\nimport CommitLink from 'sentry/components/commitLink';\nimport Duration from 'sentry/components/duration';\nimport IssueLink from 'sentry/components/issueLink';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport PullRequestLink from 'sentry/components/pullRequestLink';\nimport TimeSince from 'sentry/components/timeSince';\nimport Version from 'sentry/components/version';\nimport VersionHoverCard from 'sentry/components/versionHoverCard';\nimport {t, tct, tn} from 'sentry/locale';\nimport MemberListStore from 'sentry/stores/memberListStore';\nimport TeamStore from 'sentry/stores/teamStore';\nimport {space} from 'sentry/styles/space';\nimport {Activity, GroupActivity, Organization} from 'sentry/types';\nimport marked from 'sentry/utils/marked';\n\nconst defaultProps = {\n  defaultClipped: false,\n  clipHeight: 68,\n};\ntype DefaultProps = typeof defaultProps;\n\ntype Props = {\n  item: Activity;\n  organization: Organization;\n  className?: string;\n} & DefaultProps;\n\ntype State = {\n  clipped: Props['defaultClipped'];\n};\n\nclass ActivityItem extends Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    clipped: this.props.defaultClipped,\n  };\n\n  componentDidMount() {\n    if (this.activityBubbleRef.current) {\n      const bubbleHeight = this.activityBubbleRef.current.offsetHeight;\n\n      if (bubbleHeight > this.props.clipHeight) {\n        // okay if this causes re-render; cannot determine until\n        // rendered first anyways\n        // eslint-disable-next-line react/no-did-mount-set-state\n        this.setState({clipped: true});\n      }\n    }\n  }\n\n  renderVersionLink(version: string, item: GroupActivity) {\n    const {organization} = this.props;\n    const {project} = item;\n    return version ? (\n      <VersionHoverCard\n        organization={organization}\n        projectSlug={project.slug}\n        releaseVersion={version}\n      >\n        <Version version={version} projectId={project.id} />\n      </VersionHoverCard>\n    ) : null;\n  }\n\n  activityBubbleRef = createRef<HTMLDivElement>();\n\n  formatProjectActivity = (author, item) => {\n    const data = item.data;\n    const {organization} = this.props;\n    const orgId = organization.slug;\n    const issue = item.issue;\n    const basePath = `/organizations/${orgId}/issues/`;\n\n    const issueLink = issue ? (\n      <IssueLink\n        orgId={orgId}\n        issue={issue}\n        to={`${basePath}${issue.id}/?referrer=activity-feed-issue-link`}\n        card\n      >\n        {issue.shortId}\n      </IssueLink>\n    ) : null;\n\n    const versionLink = this.renderVersionLink(data.version, item);\n\n    switch (item.type) {\n      case 'note':\n        return tct('[author] commented on [issue]', {\n          author,\n          issue: (\n            <IssueLink\n              card\n              orgId={orgId}\n              issue={issue}\n              to={`${basePath}${issue.id}/activity/?referrer=activity-comment#event_${item.id}`}\n            >\n              {issue.shortId}\n            </IssueLink>\n          ),\n        });\n      case 'set_resolved':\n        return tct('[author] marked [issue] as resolved', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_resolved_by_age':\n        return tct('[author] marked [issue] as resolved due to age', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_resolved_in_release':\n        const {current_release_version, version} = item.data;\n        if (current_release_version) {\n          return tct(\n            '[author] marked [issue] as resolved in releases greater than [version]',\n            {\n              author,\n              version: this.renderVersionLink(current_release_version, item),\n              issue: issueLink,\n            }\n          );\n        }\n        if (version) {\n          return tct('[author] marked [issue] as resolved in [version]', {\n            author,\n            version: versionLink,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] marked [issue] as resolved in the upcoming release', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_resolved_in_commit':\n        return tct('[author] marked [issue] as resolved in [version]', {\n          author,\n          version: (\n            <CommitLink\n              inline\n              commitId={data.commit && data.commit.id}\n              repository={data.commit && data.commit.repository}\n            />\n          ),\n          issue: issueLink,\n        });\n      case 'set_resolved_in_pull_request':\n        return tct('[author] marked [issue] as resolved in [version]', {\n          author,\n          version: (\n            <PullRequestLink\n              inline\n              pullRequest={data.pullRequest}\n              repository={data.pullRequest && data.pullRequest.repository}\n            />\n          ),\n          issue: issueLink,\n        });\n      case 'set_unresolved':\n        return tct('[author] marked [issue] as unresolved', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_ignored':\n        if (data.ignoreDuration) {\n          return tct('[author] ignored [issue] for [duration]', {\n            author,\n            duration: <Duration seconds={data.ignoreDuration * 60} />,\n            issue: issueLink,\n          });\n        }\n        if (data.ignoreCount && data.ignoreWindow) {\n          return tct(\n            '[author] ignored [issue] until it happens [count] time(s) in [duration]',\n            {\n              author,\n              count: data.ignoreCount,\n              duration: <Duration seconds={data.ignoreWindow * 60} />,\n              issue: issueLink,\n            }\n          );\n        }\n        if (data.ignoreCount) {\n          return tct('[author] ignored [issue] until it happens [count] time(s)', {\n            author,\n            count: data.ignoreCount,\n            issue: issueLink,\n          });\n        }\n        if (data.ignoreUserCount && data.ignoreUserWindow) {\n          return tct(\n            '[author] ignored [issue] until it affects [count] user(s) in [duration]',\n            {\n              author,\n              count: data.ignoreUserCount,\n              duration: <Duration seconds={data.ignoreUserWindow * 60} />,\n              issue: issueLink,\n            }\n          );\n        }\n        if (data.ignoreUserCount) {\n          return tct('[author] ignored [issue] until it affects [count] user(s)', {\n            author,\n            count: data.ignoreUserCount,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] ignored [issue]', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_public':\n        return tct('[author] made [issue] public', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_private':\n        return tct('[author] made [issue] private', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_regression':\n        if (data.version) {\n          return tct('[author] marked [issue] as a regression in [version]', {\n            author,\n            version: versionLink,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] marked [issue] as a regression', {\n          author,\n          issue: issueLink,\n        });\n      case 'create_issue':\n        return tct('[author] linked [issue] on [provider]', {\n          author,\n          provider: data.provider,\n          issue: issueLink,\n        });\n      case 'unmerge_destination':\n        return tn(\n          '%2$s migrated %1$s fingerprint from %3$s to %4$s',\n          '%2$s migrated %1$s fingerprints from %3$s to %4$s',\n          data.fingerprints.length,\n          author,\n          data.source ? (\n            <a href={`${basePath}${data.source.id}`}>{data.source.shortId}</a>\n          ) : (\n            t('a group')\n          ),\n          issueLink\n        );\n      case 'first_seen':\n        return tct('[author] saw [link:issue]', {\n          author,\n          issue: issueLink,\n        });\n      case 'assigned':\n        let assignee;\n\n        if (data.assigneeType === 'team') {\n          const team = TeamStore.getById(data.assignee);\n          assignee = team ? team.slug : '<unknown-team>';\n\n          return tct('[author] assigned [issue] to #[assignee]', {\n            author,\n            issue: issueLink,\n            assignee,\n          });\n        }\n\n        if (item.user && data.assignee === item.user.id) {\n          return tct('[author] assigned [issue] to themselves', {\n            author,\n            issue: issueLink,\n          });\n        }\n        assignee = MemberListStore.getById(data.assignee);\n        if (assignee && assignee.email) {\n          return tct('[author] assigned [issue] to [assignee]', {\n            author,\n            assignee: <span title={assignee.email}>{assignee.name}</span>,\n            issue: issueLink,\n          });\n        }\n        if (data.assigneeEmail) {\n          return tct('[author] assigned [issue] to [assignee]', {\n            author,\n            assignee: data.assigneeEmail,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] assigned [issue] to an [help:unknown user]', {\n          author,\n          help: <span title={data.assignee} />,\n          issue: issueLink,\n        });\n      case 'unassigned':\n        return tct('[author] unassigned [issue]', {\n          author,\n          issue: issueLink,\n        });\n      case 'merge':\n        return tct('[author] merged [count] [link:issues]', {\n          author,\n          count: data.issues.length + 1,\n          link: <Link to={`${basePath}${issue.id}/?referrer=activity-feed-merge`} />,\n        });\n      case 'release':\n        return tct('[author] released version [version]', {\n          author,\n          version: versionLink,\n        });\n      case 'deploy':\n        return tct('[author] deployed version [version] to [environment].', {\n          author,\n          version: versionLink,\n          environment: data.environment || 'Default Environment',\n        });\n      case 'mark_reviewed':\n        return tct('[author] marked [issue] as reviewed', {\n          author,\n          issue: issueLink,\n        });\n      default:\n        return ''; // should never hit (?)\n    }\n  };\n\n  render() {\n    const {className, item} = this.props;\n\n    const avatar = (\n      <ActivityAvatar\n        type={!item.user ? 'system' : 'user'}\n        user={item.user ?? undefined}\n        size={36}\n      />\n    );\n    const author = {\n      name: item.user ? item.user.name : 'Sentry',\n      avatar,\n    };\n\n    const hasBubble = ['note', 'create_issue'].includes(item.type);\n    const bubbleProps = {\n      ...(item.type === 'note'\n        ? {dangerouslySetInnerHTML: {__html: marked(item.data.text)}}\n        : {}),\n      ...(item.type === 'create_issue'\n        ? {\n            children: (\n              <ExternalLink href={item.data.location}>{item.data.title}</ExternalLink>\n            ),\n          }\n        : {}),\n    };\n\n    return (\n      <div data-test-id=\"activity-feed-item\" className={className}>\n        {author.avatar}\n        <div>\n          {this.formatProjectActivity(\n            <span>\n              <ActivityAuthor>{author.name}</ActivityAuthor>\n            </span>,\n            item\n          )}\n          {hasBubble && (\n            <Bubble\n              ref={this.activityBubbleRef}\n              clipped={this.state.clipped}\n              {...bubbleProps}\n            />\n          )}\n          <Meta>\n            <Project>{item.project.slug}</Project>\n            <StyledTimeSince date={item.dateCreated} />\n          </Meta>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default styled(ActivityItem)`\n  display: grid;\n  gap: ${space(1)};\n  grid-template-columns: max-content auto;\n  position: relative;\n  margin: 0;\n  padding: ${space(1)};\n  border-bottom: 1px solid ${p => p.theme.innerBorder};\n  line-height: 1.4;\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst ActivityAuthor = styled('span')`\n  font-weight: 600;\n`;\n\nconst Meta = styled('div')`\n  color: ${p => p.theme.textColor};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\nconst Project = styled('span')`\n  font-weight: bold;\n`;\n\nconst Bubble = styled('div')<{clipped: boolean}>`\n  background: ${p => p.theme.backgroundSecondary};\n  margin: ${space(0.5)} 0;\n  padding: ${space(1)} ${space(2)};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: 3px;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.04);\n  position: relative;\n  overflow: hidden;\n\n  a {\n    max-width: 100%;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n  }\n\n  p {\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  ${p =>\n    p.clipped &&\n    `\n    max-height: 68px;\n\n    &:after {\n      position: absolute;\n      content: '';\n      display: block;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      height: 36px;\n      background-image: linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 1));\n      border-bottom: 6px solid #fff;\n      border-radius: 0 0 3px 3px;\n      pointer-events: none;\n    }\n  `}\n`;\n\nconst StyledTimeSince = styled(TimeSince)`\n  color: ${p => p.theme.gray300};\n  padding-left: ${space(1)};\n`;\n","import {RouteComponentProps} from 'react-router';\n\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Activity, Organization} from 'sentry/types';\nimport routeTitle from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport ActivityFeedItem from './activityFeedItem';\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<{}, {}> &\n  AsyncView['props'];\n\ntype State = {\n  activity: Activity[];\n} & AsyncView['state'];\n\nclass OrganizationActivity extends AsyncView<Props, State> {\n  getTitle() {\n    const {organization} = this.props;\n    return routeTitle(t('Activity'), organization.slug, false);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization} = this.props;\n    return [['activity', `/organizations/${organization.slug}/activity/`]];\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderEmpty() {\n    return (\n      <EmptyStateWarning>\n        <p>{t('Nothing to show here, move along.')}</p>\n      </EmptyStateWarning>\n    );\n  }\n\n  renderError(error?: Error, disableLog = false): React.ReactNode {\n    const {errors} = this.state;\n    const notFound = Object.values(errors).find(resp => resp && resp.status === 404);\n    if (notFound) {\n      return this.renderBody();\n    }\n    return super.renderError(error, disableLog);\n  }\n\n  renderBody() {\n    const {loading, activity, activityPageLinks} = this.state;\n\n    return (\n      <Layout.Page>\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <Layout.Title>{t('Activity')}</Layout.Title>\n          </Layout.HeaderContent>\n        </Layout.Header>\n        <Layout.Body>\n          <Layout.Main fullWidth>\n            <Panel>\n              {loading && <LoadingIndicator />}\n              {!loading && !activity?.length && this.renderEmpty()}\n              {!loading && activity?.length > 0 && (\n                <div data-test-id=\"activity-feed-list\">\n                  {activity.map(item => (\n                    <ErrorBoundary\n                      mini\n                      css={{marginBottom: space(1), borderRadius: 0}}\n                      key={item.id}\n                    >\n                      <ActivityFeedItem\n                        organization={this.props.organization}\n                        item={item}\n                      />\n                    </ErrorBoundary>\n                  ))}\n                </div>\n              )}\n            </Panel>\n            {activityPageLinks && (\n              <Pagination pageLinks={activityPageLinks} {...this.props} />\n            )}\n          </Layout.Main>\n        </Layout.Body>\n      </Layout.Page>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationActivity);\n"],"names":["ActivityAvatar","className","type","user","size","SystemAvatar","StyledIconSentry","width","height","shape","p","theme","textColor","background","IconSentry","DEFAULT_SIZE","level","error","EventMessage","levelIndicatorSize","message","annotations","Message","space","overflowEllipsis","renderIcon","repo","provider","id","includes","split","pop","ExternalPullLink","ExternalLink","pullRequest","repository","inline","displayId","name","title","externalUrl","href","external","icon","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","this","renderComponent","IssueLink","children","orgId","issue","to","card","getMessage","classNames","isBookmarked","hasSeen","isResolved","status","streamPath","hovercardBody","Section","Title","StyledEventOrGroupTitle","data","HovercardEventMessage","Fragment","logger","pathname","query","referrer","map","annotation","i","dangerouslySetInnerHTML","__html","Grid","GridHeader","t","StyledTimeSince","date","firstSeen","lastSeen","value","count","userCount","body","header","shortId","EventOrGroupTitle","fontSizeMedium","fontSizeSmall","gray300","TimeSince","ActivityItem","Component","clipped","props","defaultClipped","createRef","author","item","organization","slug","basePath","issueLink","versionLink","renderVersionLink","version","tct","current_release_version","commitId","commit","ignoreDuration","duration","seconds","ignoreCount","ignoreWindow","ignoreUserCount","ignoreUserWindow","tn","fingerprints","length","source","assignee","assigneeType","team","TeamStore","MemberListStore","email","assigneeEmail","help","issues","link","environment","componentDidMount","activityBubbleRef","current","offsetHeight","clipHeight","setState","project","releaseVersion","projectId","avatar","undefined","hasBubble","bubbleProps","marked","text","location","formatProjectActivity","ActivityAuthor","Bubble","ref","state","Meta","Project","dateCreated","innerBorder","fontSizeRelativeSmall","backgroundSecondary","border","OrganizationActivity","routeTitle","getEndpoints","renderLoading","renderBody","renderEmpty","renderError","disableLog","errors","Object","values","find","resp","super","loading","activity","activityPageLinks","fullWidth","mini","css","marginBottom","borderRadius","pageLinks","withOrganization"],"sourceRoot":""}