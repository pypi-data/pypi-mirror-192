{"version":3,"file":"chunks/app_views_settings_project_projectCreateServiceHook_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"kmBAcA,SAASA,EAAyB,GAA+B,IAA/B,aAACC,EAAY,OAAEC,GAAc,EAC7D,MAAM,UAACC,GAAaD,EACdE,GAAQC,EAAAA,EAAAA,GAAE,uBAEhB,OACE,QAAC,IAAmB,CAACD,MAAOA,EAAM,UAChC,QAAC,EAAAE,SAAQ,YACP,QAAC,IAAkB,CAACF,MAAOA,KAC3B,QAAC,IAAuB,CACtBH,aAAcA,EACdE,UAAWA,EACXI,YAAa,CAACC,OAAQ,GAAIC,UAAU,SAK9C,CAhBST,EAAwB,uCAkBjC,SAAeU,EAAAA,EAAAA,GAAiBV,E,0vBCnBhC,MAAMW,EAAgB,CAAC,cAAe,iBASvB,MAAMC,UAAgCC,EAAAA,UAAiB,kEAClD,KAChB,MAAM,aAACZ,EAAY,UAAEE,GAAaW,KAAKC,MACvCC,EAAAA,eAAAA,MACEC,EAAAA,EAAAA,GAAc,aAAYhB,EAAaiB,iBAAiBf,YACzD,GACF,CAEDgB,SACE,MAAM,YAACZ,EAAW,aAAEN,EAAY,UAAEE,EAAS,OAAEiB,GAAUN,KAAKC,MAEtDM,EAAWD,EACZ,aAAYnB,EAAaiB,QAAQf,WAAmBiB,KACpD,aAAYnB,EAAaiB,QAAQf,WAEtC,OACE,QAAC,KAAK,WACJ,QAAC,IAAO,CACNmB,UAAWF,EAAS,MAAQ,OAC5BG,YAAaF,EACbd,YAAaA,EACbiB,gBAAiBV,KAAKU,gBACtBC,YAAa,CACXC,UAAW,EACXC,aAAc,IAEhBC,YAAaR,GAASf,EAAAA,EAAAA,GAAE,iBAAkBA,EAAAA,EAAAA,GAAE,eAAe,WAE3D,QAAC,KAAW,WAAEA,EAAAA,EAAAA,GAAE,yBAChB,QAAC,IAAS,YACR,QAAC,IAAY,CAACwB,KAAK,WAAWC,OAAOzB,EAAAA,EAAAA,GAAE,aACvC,QAAC,IAAS,CACRwB,KAAK,MACLC,OAAOzB,EAAAA,EAAAA,GAAE,OACT0B,UAAQ,EACRC,MAAM3B,EAAAA,EAAAA,GAAE,yCAEV,QAAC,IAAS,CACRwB,KAAK,SACLC,OAAOzB,EAAAA,EAAAA,GAAE,UACT4B,QAAQ,EACRD,MAAM3B,EAAAA,EAAAA,GAAE,6CAA6C,SAEpD,QAAC,KAACwB,EAAI,MAAEK,EAAK,SAAEC,GAAS,SACvB,QAAC,IAAgB,CAACA,SAAUA,EAAUD,MAAOA,EAAOL,KAAMA,EAAK,SAC5DlB,EAAcyB,KAAIC,IACjB,QAAC,SAAqB,CAAaH,MAAOG,EAAM,SAC7CA,GADyBA,MAIb,WAOjC,EAzDmBzB,EAAuB,qC","sources":["webpack:///./app/views/settings/project/projectCreateServiceHook.tsx","webpack:///./app/views/settings/project/serviceHookSettingsForm.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport ServiceHookSettingsForm from 'sentry/views/settings/project/serviceHookSettingsForm';\n\ntype Props = RouteComponentProps<{projectId: string}, {}> & {\n  organization: Organization;\n};\n\nfunction ProjectCreateServiceHook({organization, params}: Props) {\n  const {projectId} = params;\n  const title = t('Create Service Hook');\n\n  return (\n    <SentryDocumentTitle title={title}>\n      <Fragment>\n        <SettingsPageHeader title={title} />\n        <ServiceHookSettingsForm\n          organization={organization}\n          projectId={projectId}\n          initialData={{events: [], isActive: true}}\n        />\n      </Fragment>\n    </SentryDocumentTitle>\n  );\n}\n\nexport default withOrganization(ProjectCreateServiceHook);\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\n\nimport ApiForm from 'sentry/components/forms/apiForm';\nimport MultipleCheckbox from 'sentry/components/forms/controls/multipleCheckbox';\nimport BooleanField from 'sentry/components/forms/fields/booleanField';\nimport TextField from 'sentry/components/forms/fields/textField';\nimport FormField from 'sentry/components/forms/formField';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {Organization, ServiceHook} from 'sentry/types';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\n\nconst EVENT_CHOICES = ['event.alert', 'event.created'];\n\ntype Props = {\n  initialData: Partial<ServiceHook> & {isActive: boolean};\n  organization: Organization;\n  projectId: string;\n  hookId?: string;\n};\n\nexport default class ServiceHookSettingsForm extends Component<Props> {\n  onSubmitSuccess = () => {\n    const {organization, projectId} = this.props;\n    browserHistory.push(\n      normalizeUrl(`/settings/${organization.slug}/projects/${projectId}/hooks/`)\n    );\n  };\n\n  render() {\n    const {initialData, organization, projectId, hookId} = this.props;\n\n    const endpoint = hookId\n      ? `/projects/${organization.slug}/${projectId}/hooks/${hookId}/`\n      : `/projects/${organization.slug}/${projectId}/hooks/`;\n\n    return (\n      <Panel>\n        <ApiForm\n          apiMethod={hookId ? 'PUT' : 'POST'}\n          apiEndpoint={endpoint}\n          initialData={initialData}\n          onSubmitSuccess={this.onSubmitSuccess}\n          footerStyle={{\n            marginTop: 0,\n            paddingRight: 20,\n          }}\n          submitLabel={hookId ? t('Save Changes') : t('Create Hook')}\n        >\n          <PanelHeader>{t('Hook Configuration')}</PanelHeader>\n          <PanelBody>\n            <BooleanField name=\"isActive\" label={t('Active')} />\n            <TextField\n              name=\"url\"\n              label={t('URL')}\n              required\n              help={t('The URL which will receive events.')}\n            />\n            <FormField\n              name=\"events\"\n              label={t('Events')}\n              inline={false}\n              help={t('The event types you wish to subscribe to.')}\n            >\n              {({name, value, onChange}) => (\n                <MultipleCheckbox onChange={onChange} value={value} name={name}>\n                  {EVENT_CHOICES.map(event => (\n                    <MultipleCheckbox.Item key={event} value={event}>\n                      {event}\n                    </MultipleCheckbox.Item>\n                  ))}\n                </MultipleCheckbox>\n              )}\n            </FormField>\n          </PanelBody>\n        </ApiForm>\n      </Panel>\n    );\n  }\n}\n"],"names":["ProjectCreateServiceHook","organization","params","projectId","title","t","Fragment","initialData","events","isActive","withOrganization","EVENT_CHOICES","ServiceHookSettingsForm","Component","this","props","browserHistory","normalizeUrl","slug","render","hookId","endpoint","apiMethod","apiEndpoint","onSubmitSuccess","footerStyle","marginTop","paddingRight","submitLabel","name","label","required","help","inline","value","onChange","map","event"],"sourceRoot":""}