{"version":3,"file":"chunks/app_views_settings_projectProguard_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/acl/role.tsx","webpack:///./app/components/searchBar.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/projectProguard/projectProguardRow.tsx","webpack:///./app/views/settings/projectProguard/projectProguard.tsx","webpack:///./app/views/settings/projectProguard/index.tsx"],"sourcesContent":["import {useMemo} from 'react';\n\nimport ConfigStore from 'sentry/stores/configStore';\nimport {Organization, User} from 'sentry/types';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype RoleRenderProps = {\n  hasRole: boolean;\n};\n\ntype ChildrenRenderFn = (props: RoleRenderProps) => React.ReactElement | null;\n\nfunction checkUserRole(user: User, organization: Organization, role: RoleProps['role']) {\n  if (!user) {\n    return false;\n  }\n\n  if (isActiveSuperuser()) {\n    return true;\n  }\n\n  if (!Array.isArray(organization.orgRoleList)) {\n    return false;\n  }\n\n  const roleIds = organization.orgRoleList.map(r => r.id);\n\n  if (!roleIds.includes(role) || !roleIds.includes(organization.orgRole ?? '')) {\n    return false;\n  }\n\n  const requiredIndex = roleIds.indexOf(role);\n  const currentIndex = roleIds.indexOf(organization.orgRole ?? '');\n  return currentIndex >= requiredIndex;\n}\n\ninterface RoleProps {\n  /**\n   * If children is a function then will be treated as a render prop and\n   * passed RoleRenderProps.\n   *\n   * The other interface is more simple, only show `children` if user has\n   * the minimum required role.\n   */\n  children: React.ReactElement | ChildrenRenderFn;\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n  /**\n   * Minimum required role\n   */\n  role: string;\n}\n\nfunction Role({role, organization, children}: RoleProps): React.ReactElement | null {\n  const user = ConfigStore.get('user');\n\n  const hasRole = useMemo(\n    () => checkUserRole(user, organization, role),\n    // It seems that this returns a stable reference, but\n    [organization, role, user]\n  );\n\n  if (isRenderFunc<ChildrenRenderFn>(children)) {\n    return children({hasRole});\n  }\n\n  return hasRole ? children : null;\n}\n\nconst withOrganizationRole = withOrganization(Role);\n\nexport {withOrganizationRole as Role};\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport {\n  Input,\n  InputGroup,\n  InputLeadingItems,\n  InputProps,\n  InputTrailingItems,\n} from 'sentry/components/inputGroup';\nimport {IconSearch} from 'sentry/icons';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ninterface SearchBarProps extends Omit<InputProps, 'onChange'> {\n  defaultQuery?: string;\n  onChange?: (query: string) => void;\n  onSearch?: (query: string) => void;\n  query?: string;\n  trailing?: React.ReactNode;\n  width?: string;\n}\n\nfunction SearchBar({\n  query: queryProp,\n  defaultQuery = '',\n  onChange,\n  onSearch,\n  width,\n  size,\n  className,\n  trailing,\n  ...inputProps\n}: SearchBarProps) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [query, setQuery] = useState(queryProp ?? defaultQuery);\n\n  // if query prop keeps changing we should treat this as\n  // a controlled component and its internal state should be in sync\n  useEffect(() => {\n    if (typeof queryProp === 'string') {\n      setQuery(queryProp);\n    }\n  }, [queryProp]);\n\n  const onQueryChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {value} = e.target;\n      setQuery(value);\n      onChange?.(value);\n    },\n    [onChange]\n  );\n\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      inputRef.current?.blur();\n      onSearch?.(query);\n    },\n    [onSearch, query]\n  );\n\n  const clearSearch = useCallback(() => {\n    setQuery('');\n    onChange?.('');\n    onSearch?.('');\n  }, [onChange, onSearch]);\n\n  return (\n    <FormWrap onSubmit={onSubmit} className={className}>\n      <InputGroup>\n        <InputLeadingItems disablePointerEvents>\n          <IconSearch color=\"subText\" size={size === 'xs' ? 'xs' : 'sm'} />\n        </InputLeadingItems>\n        <StyledInput\n          {...inputProps}\n          ref={inputRef}\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          value={query}\n          onChange={onQueryChange}\n          width={width}\n          size={size}\n        />\n        <InputTrailingItems>\n          {trailing}\n          {!!query && (\n            <SearchBarTrailingButton\n              size=\"zero\"\n              borderless\n              onClick={clearSearch}\n              icon={<IconClose size=\"xs\" />}\n              aria-label={t('Clear')}\n            />\n          )}\n        </InputTrailingItems>\n      </InputGroup>\n    </FormWrap>\n  );\n}\n\nconst FormWrap = styled('form')`\n  display: block;\n  position: relative;\n`;\n\nconst StyledInput = styled(Input)`\n  ${p => p.width && `width: ${p.width};`}\n`;\n\nexport const SearchBarTrailingButton = styled(Button)`\n  color: ${p => p.theme.subText};\n  padding: ${space(0.5)};\n`;\n\nexport default SearchBar;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport {Role} from 'sentry/components/acl/role';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport FileSize from 'sentry/components/fileSize';\nimport Link from 'sentry/components/links/link';\nimport TimeSince from 'sentry/components/timeSince';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconClock, IconDelete, IconDownload} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {DebugFile} from 'sentry/types/debugFiles';\n\ntype Props = {\n  downloadRole: string;\n  downloadUrl: string;\n  mapping: DebugFile;\n  onDelete: (id: string) => void;\n  orgSlug: string;\n};\n\nconst ProjectProguardRow = ({\n  mapping,\n  onDelete,\n  downloadUrl,\n  downloadRole,\n  orgSlug,\n}: Props) => {\n  const {id, debugId, uuid, size, dateCreated} = mapping;\n\n  const handleDeleteClick = () => {\n    onDelete(id);\n  };\n\n  return (\n    <Fragment>\n      <NameColumn>\n        <Name>{debugId || uuid || `(${t('empty')})`}</Name>\n        <TimeWrapper>\n          <IconClock size=\"sm\" />\n          <TimeSince date={dateCreated} />\n        </TimeWrapper>\n      </NameColumn>\n      <SizeColumn>\n        <FileSize bytes={size} />\n      </SizeColumn>\n      <ActionsColumn>\n        <ButtonBar gap={0.5}>\n          <Role role={downloadRole}>\n            {({hasRole}) => (\n              <Tooltip\n                title={tct(\n                  'Mappings can only be downloaded by users with organization [downloadRole] role[orHigher]. This can be changed in [settingsLink:Debug Files Access] settings.',\n                  {\n                    downloadRole,\n                    orHigher: downloadRole !== 'owner' ? ` ${t('or higher')}` : '',\n                    settingsLink: <Link to={`/settings/${orgSlug}/#debugFilesRole`} />,\n                  }\n                )}\n                disabled={hasRole}\n                isHoverable\n              >\n                <Button\n                  size=\"sm\"\n                  icon={<IconDownload size=\"sm\" />}\n                  disabled={!hasRole}\n                  href={downloadUrl}\n                  title={hasRole ? t('Download Mapping') : undefined}\n                  aria-label={t('Download Mapping')}\n                />\n              </Tooltip>\n            )}\n          </Role>\n\n          <Access access={['project:releases']}>\n            {({hasAccess}) => (\n              <Tooltip\n                disabled={hasAccess}\n                title={t('You do not have permission to delete mappings.')}\n              >\n                <Confirm\n                  message={t('Are you sure you want to remove this mapping?')}\n                  onConfirm={handleDeleteClick}\n                  disabled={!hasAccess}\n                >\n                  <Button\n                    size=\"sm\"\n                    icon={<IconDelete size=\"sm\" />}\n                    title={hasAccess ? t('Remove Mapping') : undefined}\n                    aria-label={t('Remove Mapping')}\n                    disabled={!hasAccess}\n                  />\n                </Confirm>\n              </Tooltip>\n            )}\n          </Access>\n        </ButtonBar>\n      </ActionsColumn>\n    </Fragment>\n  );\n};\n\nconst NameColumn = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n`;\n\nconst SizeColumn = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  text-align: right;\n  align-items: center;\n`;\n\nconst ActionsColumn = styled(SizeColumn)``;\n\nconst Name = styled('div')`\n  padding-right: ${space(4)};\n  overflow-wrap: break-word;\n  word-break: break-all;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  gap: ${space(0.5)};\n  grid-template-columns: min-content 1fr;\n  font-size: ${p => p.theme.fontSizeMedium};\n  align-items: center;\n  color: ${p => p.theme.subText};\n  margin-top: ${space(1)};\n`;\n\nexport default ProjectProguardRow;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Pagination from 'sentry/components/pagination';\nimport {PanelTable} from 'sentry/components/panels';\nimport SearchBar from 'sentry/components/searchBar';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {DebugFile} from 'sentry/types/debugFiles';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nimport ProjectProguardRow from './projectProguardRow';\n\ntype Props = RouteComponentProps<{projectId: string}, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncView['state'] & {\n  mappings: DebugFile[];\n};\n\nclass ProjectProguard extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId} = this.props.params;\n\n    return routeTitleGen(t('ProGuard Mappings'), projectId, false);\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      mappings: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, params, location} = this.props;\n    const {projectId} = params;\n\n    const endpoints: ReturnType<AsyncView['getEndpoints']> = [\n      [\n        'mappings',\n        `/projects/${organization.slug}/${projectId}/files/dsyms/`,\n        {query: {query: location.query.query, file_formats: 'proguard'}},\n      ],\n    ];\n\n    return endpoints;\n  }\n\n  handleDelete = (id: string) => {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n\n    this.setState({\n      loading: true,\n    });\n\n    this.api.request(\n      `/projects/${organization.slug}/${projectId}/files/dsyms/?id=${encodeURIComponent(\n        id\n      )}`,\n      {\n        method: 'DELETE',\n        complete: () => this.fetchData(),\n      }\n    );\n  };\n\n  handleSearch = (query: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, query},\n    });\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return typeof query === 'string' ? query : undefined;\n  }\n\n  getEmptyMessage() {\n    if (this.getQuery()) {\n      return t('There are no mappings that match your search.');\n    }\n\n    return t('There are no mappings for this project.');\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderMappings() {\n    const {mappings} = this.state;\n    const {organization, params} = this.props;\n    const {projectId} = params;\n\n    if (!mappings?.length) {\n      return null;\n    }\n\n    return mappings.map(mapping => {\n      const downloadUrl = `${this.api.baseUrl}/projects/${\n        organization.slug\n      }/${projectId}/files/dsyms/?id=${encodeURIComponent(mapping.id)}`;\n\n      return (\n        <ProjectProguardRow\n          mapping={mapping}\n          downloadUrl={downloadUrl}\n          onDelete={this.handleDelete}\n          downloadRole={organization.debugFilesRole}\n          key={mapping.id}\n          orgSlug={organization.slug}\n        />\n      );\n    });\n  }\n\n  renderBody() {\n    const {loading, mappings, mappingsPageLinks} = this.state;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={t('ProGuard Mappings')}\n          action={\n            <SearchBar\n              placeholder={t('Filter mappings')}\n              onSearch={this.handleSearch}\n              query={this.getQuery()}\n              width=\"280px\"\n            />\n          }\n        />\n\n        <TextBlock>\n          {tct(\n            `ProGuard mapping files are used to convert minified classes, methods and field names into a human readable format. To learn more about proguard mapping files, [link: read the docs].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/android/proguard/\" />\n              ),\n            }\n          )}\n        </TextBlock>\n\n        <StyledPanelTable\n          headers={[\n            t('Mapping'),\n            <SizeColumn key=\"size\">{t('File Size')}</SizeColumn>,\n            '',\n          ]}\n          emptyMessage={this.getEmptyMessage()}\n          isEmpty={mappings?.length === 0}\n          isLoading={loading}\n        >\n          {this.renderMappings()}\n        </StyledPanelTable>\n        <Pagination pageLinks={mappingsPageLinks} />\n      </Fragment>\n    );\n  }\n}\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: minmax(220px, 1fr) max-content 120px;\n`;\n\nconst SizeColumn = styled('div')`\n  text-align: right;\n`;\n\nexport default ProjectProguard;\n","import {Component} from 'react';\n\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport ProjectProguard from './projectProguard';\n\nclass ProjectProguardContainer extends Component<ProjectProguard['props']> {\n  render() {\n    return <ProjectProguard {...this.props} />;\n  }\n}\n\nexport default withOrganization(ProjectProguardContainer);\n"],"names":["withOrganizationRole","withOrganization","role","organization","children","user","ConfigStore","hasRole","useMemo","isActiveSuperuser","Array","isArray","orgRoleList","roleIds","map","r","id","includes","orgRole","requiredIndex","indexOf","checkUserRole","isRenderFunc","SearchBar","query","queryProp","defaultQuery","onChange","onSearch","width","size","className","trailing","inputProps","inputRef","useRef","setQuery","useState","useEffect","onQueryChange","useCallback","e","value","target","onSubmit","preventDefault","current","blur","clearSearch","FormWrap","disablePointerEvents","color","StyledInput","ref","type","name","autoComplete","SearchBarTrailingButton","borderless","onClick","icon","t","Input","p","Button","theme","subText","space","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","ProjectProguardRow","mapping","onDelete","downloadUrl","downloadRole","debugId","uuid","dateCreated","handleDeleteClick","Fragment","NameColumn","Name","TimeWrapper","date","SizeColumn","bytes","ActionsColumn","gap","tct","orHigher","settingsLink","to","disabled","isHoverable","href","undefined","access","hasAccess","message","onConfirm","fontSizeMedium","ProjectProguard","props","projectId","params","setState","loading","api","request","slug","encodeURIComponent","method","complete","fetchData","location","router","push","cursor","routeTitleGen","getDefaultState","super","mappings","getEndpoints","file_formats","getQuery","getEmptyMessage","renderLoading","renderBody","renderMappings","state","length","baseUrl","handleDelete","debugFilesRole","mappingsPageLinks","action","placeholder","handleSearch","link","StyledPanelTable","headers","emptyMessage","isEmpty","isLoading","pageLinks","PanelTable","ProjectProguardContainer","Component"],"sourceRoot":""}