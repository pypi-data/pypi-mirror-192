{"version":3,"file":"chunks/app_views_acceptProjectTransfer_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/narrowLayout.tsx","webpack:///./app/views/acceptProjectTransfer/index.tsx","webpack:///./app/views/asyncView.tsx"],"sourcesContent":["import {useEffect} from 'react';\nimport styled from '@emotion/styled';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {IconSentry} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport useApi from 'sentry/utils/useApi';\n\ntype Props = {\n  children: React.ReactNode;\n  maxWidth?: string;\n  showLogout?: boolean;\n};\n\nfunction NarrowLayout({maxWidth, showLogout, children}: Props) {\n  const api = useApi();\n\n  useEffect(() => {\n    document.body.classList.add('narrow');\n\n    return () => document.body.classList.remove('narrow');\n  }, []);\n\n  async function handleLogout() {\n    await logout(api);\n    window.location.assign('/auth/login');\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"pattern-bg\" />\n      <div className=\"container\" style={{maxWidth}}>\n        <div className=\"box box-modal\">\n          <div className=\"box-header\">\n            <a href=\"/\">\n              <IconSentry size=\"lg\" />\n            </a>\n            {showLogout && (\n              <a className=\"logout pull-right\" onClick={handleLogout}>\n                <Logout>{t('Sign out')}</Logout>\n              </a>\n            )}\n          </div>\n          <div className=\"box-content with-padding\">{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst Logout = styled('span')`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nexport default NarrowLayout;\n","import {RouteComponentProps} from 'react-router';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport SelectField from 'sentry/components/forms/fields/selectField';\nimport Form from 'sentry/components/forms/form';\nimport NarrowLayout from 'sentry/components/narrowLayout';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\ntype Props = RouteComponentProps<{}, {}>;\n\ntype TransferDetails = {\n  organizations: Organization[];\n  project: Project;\n};\n\ntype State = {\n  transferDetails: TransferDetails | null;\n} & AsyncView['state'];\n\nclass AcceptProjectTransfer extends AsyncView<Props, State> {\n  disableErrorReport = false;\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const query = this.props.location.query;\n    return [['transferDetails', '/accept-transfer/', {query}]];\n  }\n\n  getTitle() {\n    return t('Accept Project Transfer');\n  }\n\n  handleSubmit = formData => {\n    this.api.request('/accept-transfer/', {\n      method: 'POST',\n      data: {\n        data: this.props.location.query.data,\n        organization: formData.organization,\n      },\n      success: () => {\n        const orgSlug = formData.organization;\n\n        this.props.router.push(normalizeUrl(`/organizations/${orgSlug}/projects/`));\n        addSuccessMessage(t('Project successfully transferred'));\n      },\n      error: error => {\n        const errorMsg =\n          error && error.responseJSON && typeof error.responseJSON.detail === 'string'\n            ? error.responseJSON.detail\n            : '';\n\n        addErrorMessage(\n          t('Unable to transfer project') + errorMsg ? `: ${errorMsg}` : ''\n        );\n      },\n    });\n  };\n\n  renderError(error) {\n    let disableLog = false;\n    // Check if there is an error message with `transferDetails` endpoint\n    // If so, show as toast and ignore, otherwise log to sentry\n    if (error && error.responseJSON && typeof error.responseJSON.detail === 'string') {\n      addErrorMessage(error.responseJSON.detail);\n      disableLog = true;\n    }\n\n    return super.renderError(error, disableLog);\n  }\n\n  renderBody() {\n    const {transferDetails} = this.state;\n    const options = transferDetails?.organizations.map(org => ({\n      label: org.slug,\n      value: org.slug,\n    }));\n    const organization = options?.[0]?.value;\n\n    return (\n      <NarrowLayout>\n        <SettingsPageHeader title={t('Approve Transfer Project Request')} />\n        <p>\n          {tct(\n            'Projects must be transferred to a specific [organization]. You can grant specific teams access to the project later under the [projectSettings]. (Note that granting access to at least one team is necessary for the project to appear in all parts of the UI.)',\n            {\n              organization: <strong>{t('Organization')}</strong>,\n              projectSettings: <strong>{t('Project Settings')}</strong>,\n            }\n          )}\n        </p>\n        {transferDetails && (\n          <p>\n            {tct(\n              'Please select which [organization] you want for the project [project].',\n              {\n                organization: <strong>{t('Organization')}</strong>,\n                project: transferDetails.project.slug,\n              }\n            )}\n          </p>\n        )}\n        <Form\n          onSubmit={this.handleSubmit}\n          submitLabel={t('Transfer Project')}\n          submitPriority=\"danger\"\n          initialData={organization ? {organization} : undefined}\n        >\n          <SelectField\n            options={options}\n            label={t('Organization')}\n            name=\"organization\"\n            style={{borderBottom: 'none'}}\n          />\n        </Form>\n      </NarrowLayout>\n    );\n  }\n}\n\nexport default AcceptProjectTransfer;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n"],"names":["NarrowLayout","maxWidth","showLogout","children","api","useApi","useEffect","document","body","classList","add","remove","className","style","href","size","onClick","async","logout","window","location","assign","Logout","t","p","theme","fontSizeLarge","AcceptProjectTransfer","AsyncView","formData","this","request","method","data","props","query","organization","success","orgSlug","router","push","normalizeUrl","addSuccessMessage","error","errorMsg","responseJSON","detail","addErrorMessage","getEndpoints","getTitle","renderError","disableLog","super","renderBody","transferDetails","state","options","organizations","map","org","label","slug","value","title","tct","projectSettings","project","onSubmit","handleSubmit","submitLabel","submitPriority","initialData","undefined","name","borderBottom","AsyncComponent","render","renderComponent"],"sourceRoot":""}