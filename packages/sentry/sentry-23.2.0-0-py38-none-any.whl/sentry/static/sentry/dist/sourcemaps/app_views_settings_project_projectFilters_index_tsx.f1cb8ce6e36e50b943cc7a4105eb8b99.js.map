{"version":3,"file":"chunks/app_views_settings_project_projectFilters_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/data/forms/inboundFilters.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/project/projectFilters/groupTombstones.tsx","webpack:///./app/views/settings/project/projectFilters/projectFiltersChart.tsx","webpack:///./app/views/settings/project/projectFilters/projectFiltersSettings.tsx","webpack:///./app/views/settings/project/projectFilters/index.tsx"],"sourcesContent":["import {Fragment} from 'react';\n\nimport {Field, JsonFormObject} from 'sentry/components/forms/types';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t, tct} from 'sentry/locale';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/:orgId/projects/:projectId/filters/';\n\nconst newLineHelpText = t('Separate multiple entries with a newline.');\nconst globHelpText = tct('Allows [link:glob pattern matching].', {\n  link: <ExternalLink href=\"https://en.wikipedia.org/wiki/Glob_(programming)\" />,\n});\n\nconst getOptionsData = (data: object) => ({options: data});\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: t('Custom Filters'),\n    fields: [\n      {\n        name: 'filters:blacklisted_ips',\n        type: 'string',\n        multiline: true,\n        autosize: true,\n        rows: 1,\n        maxRows: 10,\n\n        placeholder: 'e.g. 127.0.0.1 or 10.0.0.0/8',\n        label: t('IP Addresses'),\n        help: (\n          <Fragment>\n            {t('Filter events from these IP addresses. ')}\n            {newLineHelpText}\n          </Fragment>\n        ),\n        getData: getOptionsData,\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n\n// These require a feature flag\nexport const customFilterFields: Field[] = [\n  {\n    name: 'filters:releases',\n    type: 'string',\n    multiline: true,\n    autosize: true,\n    maxRows: 10,\n    rows: 1,\n\n    placeholder: 'e.g. 1.* or [!3].[0-9].*',\n    label: t('Releases'),\n    help: (\n      <Fragment>\n        {t('Filter events from these releases. ')}\n        {newLineHelpText} {globHelpText}\n      </Fragment>\n    ),\n    getData: getOptionsData,\n  },\n\n  {\n    name: 'filters:error_messages',\n    type: 'string',\n    multiline: true,\n    autosize: true,\n    maxRows: 10,\n    rows: 1,\n\n    placeholder: 'e.g. TypeError* or *: integer division or modulo by zero',\n    label: t('Error Message'),\n    help: (\n      <Fragment>\n        {t('Filter events by error messages. ')}\n        {newLineHelpText} {globHelpText}\n      </Fragment>\n    ),\n    getData: getOptionsData,\n  },\n];\n","import Access from 'sentry/components/acl/access';\nimport {Alert} from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert data-test-id=\"project-permission-alert\" type=\"warning\" {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport Access from 'sentry/components/acl/access';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Avatar from 'sentry/components/avatar';\nimport {Button} from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport EventOrGroupHeader from 'sentry/components/eventOrGroupHeader';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel, PanelItem} from 'sentry/components/panels';\nimport {IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {GroupTombstone} from 'sentry/types';\n\ntype RowProps = {\n  data: GroupTombstone;\n  disabled: boolean;\n  onUndiscard: (id: string) => void;\n};\n\nfunction GroupTombstoneRow({data, disabled, onUndiscard}: RowProps) {\n  const actor = data.actor;\n\n  return (\n    <PanelItem center>\n      <StyledBox>\n        <EventOrGroupHeader\n          includeLink={false}\n          hideIcons\n          className=\"truncate\"\n          size=\"normal\"\n          data={data}\n          source=\"group-tombstome\"\n        />\n      </StyledBox>\n      <AvatarContainer>\n        {actor && (\n          <Avatar\n            user={actor}\n            hasTooltip\n            tooltip={t('Discarded by %s', actor.name || actor.email)}\n          />\n        )}\n      </AvatarContainer>\n      <ActionContainer>\n        <Confirm\n          message={t(\n            'Undiscarding this issue means that incoming events that match this will no longer be discarded. New incoming events will count toward your event quota and will display on your issues dashboard. Are you sure you wish to continue?'\n          )}\n          onConfirm={() => onUndiscard(data.id)}\n          disabled={disabled}\n        >\n          <Button\n            aria-label={t('Undiscard')}\n            title={\n              disabled\n                ? t('You do not have permission to perform this action')\n                : t('Undiscard')\n            }\n            size=\"xs\"\n            icon={<IconDelete size=\"xs\" />}\n            disabled={disabled}\n          />\n        </Confirm>\n      </ActionContainer>\n    </PanelItem>\n  );\n}\n\ntype Props = AsyncComponent['props'] & {\n  orgId: string;\n  projectId: string;\n};\n\ntype State = {\n  tombstones: GroupTombstone[];\n  tombstonesPageLinks: null | string;\n} & AsyncComponent['state'];\n\nclass GroupTombstones extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId} = this.props;\n    return [\n      ['tombstones', `/projects/${orgId}/${projectId}/tombstones/`, {}, {paginate: true}],\n    ];\n  }\n\n  handleUndiscard = (tombstoneId: GroupTombstone['id']) => {\n    const {orgId, projectId} = this.props;\n    const path = `/projects/${orgId}/${projectId}/tombstones/${tombstoneId}/`;\n    this.api\n      .requestPromise(path, {\n        method: 'DELETE',\n      })\n      .then(() => {\n        addSuccessMessage(t('Events similar to these will no longer be filtered'));\n        this.fetchData();\n      })\n      .catch(() => {\n        addErrorMessage(t('We were unable to undiscard this issue'));\n        this.fetchData();\n      });\n  };\n\n  renderEmpty() {\n    return (\n      <Panel>\n        <EmptyMessage>{t('You have no discarded issues')}</EmptyMessage>\n      </Panel>\n    );\n  }\n\n  renderBody() {\n    const {tombstones, tombstonesPageLinks} = this.state;\n\n    return tombstones.length ? (\n      <Access access={['project:write']}>\n        {({hasAccess}) => (\n          <Fragment>\n            <Panel>\n              {tombstones.map(data => (\n                <GroupTombstoneRow\n                  key={data.id}\n                  data={data}\n                  disabled={!hasAccess}\n                  onUndiscard={this.handleUndiscard}\n                />\n              ))}\n            </Panel>\n            {tombstonesPageLinks && <Pagination pageLinks={tombstonesPageLinks} />}\n          </Fragment>\n        )}\n      </Access>\n    ) : (\n      this.renderEmpty()\n    );\n  }\n}\n\nconst StyledBox = styled('div')`\n  flex: 1;\n  align-items: center;\n  min-width: 0; /* keep child content from stretching flex item */\n`;\n\nconst AvatarContainer = styled('div')`\n  margin: 0 ${space(3)};\n  flex-shrink: 1;\n  align-items: center;\n`;\n\nconst ActionContainer = styled('div')`\n  flex-shrink: 1;\n  align-items: center;\n`;\n\nexport default GroupTombstones;\n","import {Component} from 'react';\n\nimport {Client} from 'sentry/api';\nimport MiniBarChart from 'sentry/components/charts/miniBarChart';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport LoadingError from 'sentry/components/loadingError';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport theme from 'sentry/utils/theme';\nimport withApi from 'sentry/utils/withApi';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  project: Project;\n};\n\ntype State = {\n  blankStats: boolean;\n  error: boolean;\n  formattedData: Series[];\n  loading: boolean;\n  statsError: boolean;\n};\n\ntype RawStats = Record<string, [timestamp: number, value: number][]>;\n\nconst STAT_OPS = {\n  'browser-extensions': {title: t('Browser Extension'), color: theme.gray200},\n  cors: {title: 'CORS', color: theme.yellow300},\n  'error-message': {title: t('Error Message'), color: theme.purple300},\n  'discarded-hash': {title: t('Discarded Issue'), color: theme.gray200},\n  'invalid-csp': {title: t('Invalid CSP'), color: theme.blue300},\n  'ip-address': {title: t('IP Address'), color: theme.red200},\n  'legacy-browsers': {title: t('Legacy Browser'), color: theme.gray200},\n  localhost: {title: t('Localhost'), color: theme.blue300},\n  'release-version': {title: t('Release'), color: theme.purple200},\n  'web-crawlers': {title: t('Web Crawler'), color: theme.red300},\n};\n\nclass ProjectFiltersChart extends Component<Props, State> {\n  state: State = {\n    loading: true,\n    error: false,\n    statsError: false,\n    formattedData: [],\n    blankStats: true,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.project !== this.props.project) {\n      this.fetchData();\n    }\n  }\n\n  formatData(rawData: RawStats) {\n    const seriesWithData: Set<string> = new Set();\n    const transformed = Object.keys(STAT_OPS).map(stat => ({\n      data: rawData[stat].map(([timestamp, value]) => {\n        if (value > 0) {\n          seriesWithData.add(STAT_OPS[stat].title);\n          this.setState({blankStats: false});\n        }\n        return {name: timestamp * 1000, value};\n      }),\n      seriesName: STAT_OPS[stat].title,\n      color: STAT_OPS[stat].color,\n    }));\n\n    return transformed.filter((series: Series) => seriesWithData.has(series.seriesName));\n  }\n\n  getFilterStats() {\n    const statOptions = Object.keys(STAT_OPS);\n    const {organization, project} = this.props;\n\n    const until = Math.floor(new Date().getTime() / 1000);\n    const since = until - 3600 * 24 * 30;\n\n    const statEndpoint = `/projects/${organization.slug}/${project.slug}/stats/`;\n    const query = {\n      since,\n      until,\n      resolution: '1d',\n    };\n    const requests = statOptions.map(stat =>\n      this.props.api.requestPromise(statEndpoint, {\n        query: Object.assign({stat}, query),\n      })\n    );\n    Promise.all(requests)\n      .then(results => {\n        const rawStatsData: RawStats = {};\n        for (let i = 0; i < statOptions.length; i++) {\n          rawStatsData[statOptions[i]] = results[i];\n        }\n\n        this.setState({\n          formattedData: this.formatData(rawStatsData),\n          error: false,\n          loading: false,\n        });\n      })\n      .catch(() => {\n        this.setState({error: true, loading: false});\n      });\n  }\n\n  fetchData = () => {\n    this.getFilterStats();\n  };\n\n  render() {\n    const {loading, error, formattedData} = this.state;\n    const isLoading = loading || !formattedData;\n    const hasError = !isLoading && error;\n    const hasLoaded = !isLoading && !error;\n    const colors = formattedData\n      ? formattedData.map(series => series.color || theme.gray200)\n      : undefined;\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Errors filtered in the last 30 days (by day)')}</PanelHeader>\n\n        <PanelBody withPadding>\n          {isLoading && <Placeholder height=\"100px\" />}\n          {hasError && <LoadingError onRetry={this.fetchData} />}\n          {hasLoaded && !this.state.blankStats && (\n            <MiniBarChart\n              series={formattedData}\n              colors={colors}\n              height={100}\n              isGroupedByDate\n              stacked\n              labelYAxisExtents\n            />\n          )}\n          {hasLoaded && this.state.blankStats && (\n            <EmptyMessage\n              title={t('Nothing filtered in the last 30 days.')}\n              description={t(\n                'Issues filtered as a result of your settings below will be shown here.'\n              )}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport {ProjectFiltersChart};\n\nexport default withApi(ProjectFiltersChart);\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport iconAndroid from 'sentry-logos/logo-android.svg';\nimport iconIe from 'sentry-logos/logo-ie.svg';\nimport iconOpera from 'sentry-logos/logo-opera.svg';\nimport iconSafari from 'sentry-logos/logo-safari.svg';\n\nimport Access from 'sentry/components/acl/access';\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport FieldFromConfig from 'sentry/components/forms/fieldFromConfig';\nimport Form, {FormProps} from 'sentry/components/forms/form';\nimport FormField from 'sentry/components/forms/formField';\nimport JsonForm from 'sentry/components/forms/jsonForm';\nimport {\n  Panel,\n  PanelAlert,\n  PanelBody,\n  PanelHeader,\n  PanelItem,\n} from 'sentry/components/panels';\nimport Switch from 'sentry/components/switchButton';\nimport filterGroups, {customFilterFields} from 'sentry/data/forms/inboundFilters';\nimport {t} from 'sentry/locale';\nimport HookStore from 'sentry/stores/hookStore';\nimport ProjectsStore from 'sentry/stores/projectsStore';\nimport {space} from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\n\nconst LEGACY_BROWSER_SUBFILTERS = {\n  ie_pre_9: {\n    icon: iconIe,\n    helpText: 'Version 8 and lower',\n    title: 'Internet Explorer',\n  },\n  ie9: {\n    icon: iconIe,\n    helpText: 'Version 9',\n    title: 'Internet Explorer',\n  },\n  ie10: {\n    icon: iconIe,\n    helpText: 'Version 10',\n    title: 'Internet Explorer',\n  },\n  ie11: {\n    icon: iconIe,\n    helpText: 'Version 11',\n    title: 'Internet Explorer',\n  },\n  safari_pre_6: {\n    icon: iconSafari,\n    helpText: 'Version 5 and lower',\n    title: 'Safari',\n  },\n  opera_pre_15: {\n    icon: iconOpera,\n    helpText: 'Version 14 and lower',\n    title: 'Opera',\n  },\n  opera_mini_pre_8: {\n    icon: iconOpera,\n    helpText: 'Version 8 and lower',\n    title: 'Opera Mini',\n  },\n  android_pre_4: {\n    icon: iconAndroid,\n    helpText: 'Version 3 and lower',\n    title: 'Android',\n  },\n};\n\nconst LEGACY_BROWSER_KEYS = Object.keys(LEGACY_BROWSER_SUBFILTERS);\n\ntype FormFieldProps = React.ComponentProps<typeof FormField>;\n\ntype RowProps = {\n  data: {\n    active: string[] | boolean;\n  };\n  onToggle: (\n    data: RowProps['data'],\n    filters: RowState['subfilters'],\n    event: React.MouseEvent\n  ) => void;\n  disabled?: boolean;\n};\n\ntype RowState = {\n  error: boolean | Error;\n  loading: boolean;\n  subfilters: Set<string>;\n};\n\nclass LegacyBrowserFilterRow extends Component<RowProps, RowState> {\n  constructor(props) {\n    super(props);\n    let initialSubfilters;\n    if (props.data.active === true) {\n      initialSubfilters = new Set(LEGACY_BROWSER_KEYS);\n    } else if (props.data.active === false) {\n      initialSubfilters = new Set();\n    } else {\n      initialSubfilters = new Set(props.data.active);\n    }\n\n    this.state = {\n      loading: false,\n      error: false,\n      subfilters: initialSubfilters,\n    };\n  }\n\n  handleToggleSubfilters = (subfilter, e) => {\n    let {subfilters} = this.state;\n\n    if (subfilter === true) {\n      subfilters = new Set(LEGACY_BROWSER_KEYS);\n    } else if (subfilter === false) {\n      subfilters = new Set();\n    } else if (subfilters.has(subfilter)) {\n      subfilters.delete(subfilter);\n    } else {\n      subfilters.add(subfilter);\n    }\n\n    this.setState(\n      {\n        subfilters: new Set(subfilters),\n      },\n      () => {\n        this.props.onToggle(this.props.data, subfilters, e);\n      }\n    );\n  };\n\n  render() {\n    const {disabled} = this.props;\n    return (\n      <div>\n        {!disabled && (\n          <BulkFilter>\n            <BulkFilterLabel>{t('Filter')}:</BulkFilterLabel>\n            <ButtonBar gap={1}>\n              <Button\n                priority=\"link\"\n                borderless\n                onClick={this.handleToggleSubfilters.bind(this, true)}\n              >\n                {t('All')}\n              </Button>\n              <Button\n                priority=\"link\"\n                borderless\n                onClick={this.handleToggleSubfilters.bind(this, false)}\n              >\n                {t('None')}\n              </Button>\n            </ButtonBar>\n          </BulkFilter>\n        )}\n\n        <FilterGrid>\n          {LEGACY_BROWSER_KEYS.map(key => {\n            const subfilter = LEGACY_BROWSER_SUBFILTERS[key];\n            return (\n              <FilterGridItem key={key}>\n                <FilterGridIcon src={subfilter.icon} />\n                <div>\n                  <FilterTitle>{subfilter.title}</FilterTitle>\n                  <FilterDescription>{subfilter.helpText}</FilterDescription>\n                </div>\n                <Switch\n                  aria-label={`${subfilter.title} ${subfilter.helpText}`}\n                  isActive={this.state.subfilters.has(key)}\n                  isDisabled={disabled}\n                  css={{flexShrink: 0, marginLeft: 6}}\n                  toggle={this.handleToggleSubfilters.bind(this, key)}\n                  size=\"lg\"\n                />\n              </FilterGridItem>\n            );\n          })}\n        </FilterGrid>\n      </div>\n    );\n  }\n}\n\ntype Props = {\n  features: Set<string>;\n  organization: Organization;\n  params: {\n    projectId: string;\n  };\n  project: Project;\n};\n\ntype State = {\n  hooksDisabled: ReturnType<(typeof HookStore)['get']>;\n} & AsyncComponent['state'];\n\nclass ProjectFiltersSettings extends AsyncComponent<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      hooksDisabled: HookStore.get('feature-disabled:custom-inbound-filters'),\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n    return [['filterList', `/projects/${organization.slug}/${projectId}/filters/`]];\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (prevProps.project.slug !== this.props.project.slug) {\n      this.reloadData();\n    }\n    super.componentDidUpdate(prevProps, prevState);\n  }\n\n  handleLegacyChange = (\n    onChange: FormFieldProps['onChange'],\n    onBlur: FormFieldProps['onBlur'],\n    _filter,\n    subfilters: RowState['subfilters'],\n    e: React.MouseEvent\n  ) => {\n    onChange?.(subfilters, e);\n    onBlur?.(subfilters, e);\n  };\n\n  handleSubmit = (response: Project) => {\n    // This will update our project context\n    ProjectsStore.onUpdateSuccess(response);\n  };\n\n  renderDisabledCustomFilters = p => (\n    <FeatureDisabled\n      featureName={t('Custom Inbound Filters')}\n      features={p.features}\n      alert={PanelAlert}\n      message={t(\n        'Release and Error Message filtering are not enabled on your Sentry installation'\n      )}\n    />\n  );\n\n  renderCustomFilters = (disabled: boolean) => () =>\n    (\n      <Feature\n        features={['projects:custom-inbound-filters']}\n        hookName=\"feature-disabled:custom-inbound-filters\"\n        project={this.props.project}\n        renderDisabled={({children, ...props}) => {\n          if (typeof children === 'function') {\n            return children({...props, renderDisabled: this.renderDisabledCustomFilters});\n          }\n          return null;\n        }}\n      >\n        {({hasFeature, organization, renderDisabled, ...featureProps}) => (\n          <Fragment>\n            {!hasFeature &&\n              typeof renderDisabled === 'function' &&\n              // XXX: children is set to null as we're doing tricksy things\n              // in the renderDisabled prop a few lines higher.\n              renderDisabled({organization, hasFeature, children: null, ...featureProps})}\n\n            {customFilterFields.map(field => (\n              <FieldFromConfig\n                key={field.name}\n                field={field}\n                disabled={disabled || !hasFeature}\n              />\n            ))}\n\n            {hasFeature && this.props.project.options?.['filters:error_messages'] && (\n              <PanelAlert type=\"warning\" data-test-id=\"error-message-disclaimer\">\n                {t(\n                  \"Minidumps, errors in the minified production build of React, and Internet Explorer's i18n errors cannot be filtered by message.\"\n                )}\n              </PanelAlert>\n            )}\n          </Fragment>\n        )}\n      </Feature>\n    );\n\n  renderBody() {\n    const {features, organization, params, project} = this.props;\n    const {projectId} = params;\n\n    const projectEndpoint = `/projects/${organization.slug}/${projectId}/`;\n    const filtersEndpoint = `${projectEndpoint}filters/`;\n\n    return (\n      <Access access={['project:write']}>\n        {({hasAccess}) => (\n          <Fragment>\n            <Panel>\n              <PanelHeader>{t('Filters')}</PanelHeader>\n              <PanelBody>\n                {this.state.filterList.map(filter => {\n                  const fieldProps = {\n                    name: filter.id,\n                    label: filter.name,\n                    help: filter.description,\n                    disabled: !hasAccess,\n                  };\n\n                  // Note by default, forms generate data in the format of:\n                  // { [fieldName]: [value] }\n                  // Endpoints for these filters expect data to be:\n                  // { 'active': [value] }\n                  return (\n                    <PanelItem key={filter.id} noPadding>\n                      <NestedForm\n                        apiMethod=\"PUT\"\n                        apiEndpoint={`${filtersEndpoint}${filter.id}/`}\n                        initialData={{[filter.id]: filter.active}}\n                        saveOnBlur\n                      >\n                        {filter.id !== 'legacy-browsers' ? (\n                          <FieldFromConfig\n                            key={filter.id}\n                            getData={data => ({active: data[filter.id]})}\n                            field={{\n                              type: 'boolean',\n                              ...fieldProps,\n                            }}\n                          />\n                        ) : (\n                          <FormField\n                            inline={false}\n                            {...fieldProps}\n                            getData={data => ({subfilters: [...data[filter.id]]})}\n                          >\n                            {({onChange, onBlur}) => (\n                              <LegacyBrowserFilterRow\n                                key={filter.id}\n                                data={filter}\n                                disabled={!hasAccess}\n                                onToggle={this.handleLegacyChange.bind(\n                                  this,\n                                  onChange,\n                                  onBlur\n                                )}\n                              />\n                            )}\n                          </FormField>\n                        )}\n                      </NestedForm>\n                    </PanelItem>\n                  );\n                })}\n              </PanelBody>\n            </Panel>\n\n            <Form\n              apiMethod=\"PUT\"\n              apiEndpoint={projectEndpoint}\n              initialData={project.options}\n              saveOnBlur\n              onSubmitSuccess={this.handleSubmit}\n            >\n              <JsonForm\n                features={features}\n                forms={filterGroups}\n                disabled={!hasAccess}\n                renderFooter={this.renderCustomFilters(!hasAccess)}\n              />\n            </Form>\n          </Fragment>\n        )}\n      </Access>\n    );\n  }\n}\n\nexport default ProjectFiltersSettings;\n\n// TODO(ts): Understand why styled is not correctly inheriting props here\nconst NestedForm = styled(Form)<FormProps>`\n  flex: 1;\n`;\n\nconst FilterGrid = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${space(1.5)};\n  margin-top: ${space(2)};\n`;\n\nconst FilterGridItem = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr max-content;\n  gap: ${space(1)};\n  align-items: center;\n  background: ${p => p.theme.backgroundSecondary};\n  border-radius: ${p => p.theme.borderRadius};\n  padding: ${space(1.5)};\n`;\n\nconst FilterGridIcon = styled('img')`\n  width: 38px;\n  height: 38px;\n`;\n\nconst FilterTitle = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  font-weight: bold;\n  white-space: nowrap;\n`;\n\nconst FilterDescription = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeSmall};\n  white-space: nowrap;\n`;\n\nconst BulkFilter = styled('div')`\n  display: flex;\n  align-items: center;\n  gap: ${space(0.5)};\n`;\n\nconst BulkFilterLabel = styled('span')`\n  font-weight: bold;\n  margin-right: ${space(0.75)};\n`;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport Link from 'sentry/components/links/link';\nimport NavTabs from 'sentry/components/navTabs';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\nimport GroupTombstones from 'sentry/views/settings/project/projectFilters/groupTombstones';\nimport ProjectFiltersChart from 'sentry/views/settings/project/projectFilters/projectFiltersChart';\nimport ProjectFiltersSettings from 'sentry/views/settings/project/projectFilters/projectFiltersSettings';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & RouteComponentProps<{filterType: string; projectId: string}, {}>;\n\nfunction ProjectFilters(props: Props) {\n  const {organization, project, params, location} = props;\n  const {projectId, filterType} = params;\n  if (!project) {\n    return null;\n  }\n\n  const features = new Set(project.features);\n\n  return (\n    <Fragment>\n      <SentryDocumentTitle title={t('Inbound Filters')} projectSlug={projectId} />\n      <SettingsPageHeader title={t('Inbound Data Filters')} />\n      <PermissionAlert />\n\n      <TextBlock>\n        {t(\n          'Filters allow you to prevent Sentry from storing events in certain situations. Filtered events are tracked separately from rate limits, and do not apply to any project quotas.'\n        )}\n      </TextBlock>\n\n      <div>\n        <ProjectFiltersChart project={project} organization={organization} />\n\n        {features.has('discard-groups') && (\n          <NavTabs underlined style={{paddingTop: '30px'}}>\n            <li className={filterType === 'data-filters' ? 'active' : ''}>\n              <Link to={recreateRoute('data-filters/', {...props, stepBack: -1})}>\n                {t('Data Filters')}\n              </Link>\n            </li>\n            <li className={filterType === 'discarded-groups' ? 'active' : ''}>\n              <Link to={recreateRoute('discarded-groups/', {...props, stepBack: -1})}>\n                {t('Discarded Issues')}\n              </Link>\n            </li>\n          </NavTabs>\n        )}\n\n        {filterType === 'discarded-groups' ? (\n          <GroupTombstones\n            orgId={organization.slug}\n            projectId={project.slug}\n            location={location}\n          />\n        ) : (\n          <ProjectFiltersSettings\n            organization={organization}\n            project={project}\n            params={params}\n            features={features}\n          />\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default ProjectFilters;\n"],"names":["route","newLineHelpText","t","globHelpText","tct","link","href","getOptionsData","data","options","title","fields","name","type","multiline","autosize","rows","maxRows","placeholder","label","help","Fragment","getData","customFilterFields","PermissionAlert","access","props","hasAccess","GroupTombstoneRow","disabled","onUndiscard","actor","center","StyledBox","includeLink","hideIcons","className","size","source","AvatarContainer","user","hasTooltip","tooltip","email","ActionContainer","message","onConfirm","id","icon","GroupTombstones","AsyncComponent","tombstoneId","orgId","projectId","this","path","api","requestPromise","method","then","addSuccessMessage","fetchData","catch","addErrorMessage","getEndpoints","paginate","renderEmpty","renderBody","tombstones","tombstonesPageLinks","state","length","map","handleUndiscard","pageLinks","space","STAT_OPS","color","theme","cors","localhost","ProjectFiltersChart","Component","loading","error","statsError","formattedData","blankStats","getFilterStats","componentDidMount","componentDidUpdate","prevProps","project","formatData","rawData","seriesWithData","Set","transformed","Object","keys","stat","timestamp","value","add","setState","seriesName","filter","series","has","statOptions","organization","until","Math","floor","Date","getTime","since","statEndpoint","slug","query","resolution","requests","assign","Promise","all","results","rawStatsData","i","render","isLoading","hasError","hasLoaded","colors","undefined","withPadding","height","onRetry","isGroupedByDate","stacked","labelYAxisExtents","description","withApi","LEGACY_BROWSER_SUBFILTERS","ie_pre_9","iconIe","helpText","ie9","ie10","ie11","safari_pre_6","iconSafari","opera_pre_15","iconOpera","opera_mini_pre_8","android_pre_4","iconAndroid","LEGACY_BROWSER_KEYS","LegacyBrowserFilterRow","constructor","initialSubfilters","super","subfilter","e","subfilters","delete","onToggle","active","BulkFilter","BulkFilterLabel","gap","priority","borderless","onClick","handleToggleSubfilters","bind","FilterGrid","key","FilterGridItem","FilterGridIcon","src","FilterTitle","FilterDescription","isActive","isDisabled","css","toggle","ProjectFiltersSettings","onChange","onBlur","_filter","response","ProjectsStore","p","featureName","features","alert","PanelAlert","hookName","renderDisabled","children","renderDisabledCustomFilters","hasFeature","featureProps","field","getDefaultState","hooksDisabled","HookStore","params","prevState","reloadData","projectEndpoint","filtersEndpoint","filterList","fieldProps","noPadding","NestedForm","apiMethod","apiEndpoint","initialData","saveOnBlur","inline","handleLegacyChange","onSubmitSuccess","handleSubmit","forms","filterGroups","renderFooter","renderCustomFilters","Form","backgroundSecondary","borderRadius","fontSizeMedium","subText","fontSizeSmall","ProjectFilters","location","filterType","projectSlug","underlined","style","paddingTop","to","recreateRoute","stepBack"],"sourceRoot":""}