{"version":3,"file":"chunks/app_utils_discover_charts_tsx-app_views_profiling_content_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/onboardingPanel.tsx","webpack:///./app/utils/discover/charts.tsx","webpack:///./app/utils/profiling/routes.tsx","webpack:///./app/views/profiling/landing/profilingSlowestTransactionsPanel.tsx","webpack:///./app/views/profiling/profilingOnboardingPanel.tsx","webpack:///./app/views/profiling/content.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {Panel} from 'sentry/components/panels';\nimport {space} from 'sentry/styles/space';\n\ninterface Props extends React.ComponentProps<typeof Panel> {\n  children: React.ReactNode;\n  image?: React.ReactNode;\n}\n\nfunction OnboardingPanel({image, children, ...props}: Props) {\n  return (\n    <Panel {...props}>\n      <Container>\n        {image ? <IlloBox>{image}</IlloBox> : null}\n        <StyledBox centered={!image}>{children}</StyledBox>\n      </Container>\n    </Panel>\n  );\n}\n\nconst Container = styled('div')`\n  padding: ${space(3)};\n  position: relative;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n    min-height: 300px;\n    max-width: 1000px;\n    margin: 0 auto;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    min-height: 350px;\n  }\n`;\n\nconst StyledBox = styled('div')<{centered?: boolean}>`\n  z-index: 1;\n\n  ${p => (p.centered ? 'text-align: center;' : '')}\n  ${p => (p.centered ? 'max-width: 600px;' : '')}\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    flex: 2;\n  }\n`;\n\nconst IlloBox = styled(StyledBox)`\n  position: relative;\n  min-height: 100px;\n  max-width: 300px;\n  margin: ${space(2)} auto;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    flex: 1;\n    margin: ${space(3)};\n    max-width: auto;\n  }\n`;\n\nexport default OnboardingPanel;\n","import {LegendComponentOption} from 'echarts';\n\nimport {t} from 'sentry/locale';\nimport {Series} from 'sentry/types/echarts';\nimport {defined, formatBytesBase2} from 'sentry/utils';\nimport {AggregationOutputType} from 'sentry/utils/discover/fields';\nimport {\n  DAY,\n  formatAbbreviatedNumber,\n  formatPercentage,\n  getDuration,\n  HOUR,\n  MINUTE,\n  SECOND,\n  WEEK,\n} from 'sentry/utils/formatters';\n\n/**\n * Formatter for chart tooltips that handle a variety of discover and metrics result values.\n * If the result is metric values, the value can be of type number or null\n */\nexport function tooltipFormatter(\n  value: number | null,\n  outputType: AggregationOutputType = 'number'\n): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  return tooltipFormatterUsingAggregateOutputType(value, outputType);\n}\n\n/**\n * Formatter for chart tooltips that takes the aggregate output type directly\n */\nexport function tooltipFormatterUsingAggregateOutputType(\n  value: number | null,\n  type: string\n): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  switch (type) {\n    case 'integer':\n    case 'number':\n      return value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 2);\n    case 'duration':\n      return getDuration(value / 1000, 2, true);\n    case 'size':\n      return formatBytesBase2(value);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Formatter for chart axis labels that handle a variety of discover result values\n * This function is *very similar* to tooltipFormatter but outputs data with less precision.\n */\nexport function axisLabelFormatter(\n  value: number,\n  outputType: AggregationOutputType,\n  abbreviation: boolean = false,\n  durationUnit?: number\n): string {\n  return axisLabelFormatterUsingAggregateOutputType(\n    value,\n    outputType,\n    abbreviation,\n    durationUnit\n  );\n}\n\n/**\n * Formatter for chart axis labels that takes the aggregate output type directly\n */\nexport function axisLabelFormatterUsingAggregateOutputType(\n  value: number,\n  type: string,\n  abbreviation: boolean = false,\n  durationUnit?: number\n): string {\n  switch (type) {\n    case 'integer':\n    case 'number':\n      return abbreviation ? formatAbbreviatedNumber(value) : value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 0);\n    case 'duration':\n      return axisDuration(value, durationUnit);\n    case 'size':\n      return formatBytesBase2(value, 0);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Specialized duration formatting for axis labels.\n * In that context we are ok sacrificing accuracy for more\n * consistent sizing.\n *\n * @param value Number of milliseconds to format.\n */\nexport function axisDuration(value: number, durationUnit?: number): string {\n  durationUnit ??= categorizeDuration(value);\n  if (value === 0) {\n    return '0';\n  }\n  switch (durationUnit) {\n    case WEEK: {\n      const label = (value / WEEK).toFixed(0);\n      return t('%swk', label);\n    }\n    case DAY: {\n      const label = (value / DAY).toFixed(0);\n      return t('%sd', label);\n    }\n    case HOUR: {\n      const label = (value / HOUR).toFixed(0);\n      return t('%shr', label);\n    }\n    case MINUTE: {\n      const label = (value / MINUTE).toFixed(0);\n      return t('%smin', label);\n    }\n    case SECOND: {\n      const label = (value / SECOND).toFixed(0);\n      return t('%ss', label);\n    }\n    default:\n      const label = value.toFixed(0);\n      return t('%sms', label);\n  }\n}\n\n/**\n * Given an array of series and an eCharts legend object,\n * finds the range of y values (min and max) based on which series is selected in the legend\n * Assumes series[0] > series[1] > ...\n * @param series Array of eCharts series\n * @param legend eCharts legend object\n * @returns\n */\nexport function findRangeOfMultiSeries(series: Series[], legend?: LegendComponentOption) {\n  let range: {max: number; min: number} | undefined;\n  if (series[0]?.data) {\n    let minSeries = series[0];\n    let maxSeries;\n    series.forEach(({seriesName, data}, idx) => {\n      if (legend?.selected?.[seriesName] !== false && data.length) {\n        minSeries = series[idx];\n        maxSeries ??= series[idx];\n      }\n    });\n    if (maxSeries?.data) {\n      const max = Math.max(\n        ...maxSeries.data.map(({value}) => value).filter(value => !!value)\n      );\n      const min = Math.min(\n        ...minSeries.data.map(({value}) => value).filter(value => !!value)\n      );\n      range = {max, min};\n    }\n  }\n  return range;\n}\n\n/**\n * Given a eCharts series and legend, returns the unit to be used on the yAxis for a duration chart\n * @param series eCharts series array\n * @param legend eCharts legend object\n * @returns\n */\nexport function getDurationUnit(\n  series: Series[],\n  legend?: LegendComponentOption\n): number {\n  let durationUnit = 0;\n  const range = findRangeOfMultiSeries(series, legend);\n  if (range) {\n    const avg = (range.max + range.min) / 2;\n    durationUnit = categorizeDuration((range.max - range.min) / 5); // avg of 5 yAxis ticks per chart\n\n    const numOfDigits = (avg / durationUnit).toFixed(0).length;\n    if (numOfDigits > 6) {\n      durationUnit = categorizeDuration(avg);\n    }\n  }\n  return durationUnit;\n}\n\n/**\n * Categorizes the duration by Second, Minute, Hour, etc\n * Ex) categorizeDuration(1200) = MINUTE\n * @param value Duration in ms\n */\nexport function categorizeDuration(value): number {\n  if (value >= WEEK) {\n    return WEEK;\n  }\n  if (value >= DAY) {\n    return DAY;\n  }\n  if (value >= HOUR) {\n    return HOUR;\n  }\n  if (value >= MINUTE) {\n    return MINUTE;\n  }\n  if (value >= SECOND) {\n    return SECOND;\n  }\n  return 1;\n}\n","import {Location, LocationDescriptor, Path} from 'history';\n\nimport {Organization, Project} from 'sentry/types';\nimport {Trace} from 'sentry/types/profiling/core';\n\nexport function generateProfilingRoute({orgSlug}: {orgSlug: Organization['slug']}): Path {\n  return `/organizations/${orgSlug}/profiling/`;\n}\n\nexport function generateProfileSummaryRoute({\n  orgSlug,\n  projectSlug,\n}: {\n  orgSlug: Organization['slug'];\n  projectSlug: Project['slug'];\n}): Path {\n  return `/organizations/${orgSlug}/profiling/summary/${projectSlug}/`;\n}\n\nexport function generateProfileFlamechartRoute({\n  orgSlug,\n  projectSlug,\n  profileId,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n}): string {\n  return `/organizations/${orgSlug}/profiling/profile/${projectSlug}/${profileId}/flamechart/`;\n}\n\nexport function generateProfileDetailsRoute({\n  orgSlug,\n  projectSlug,\n  profileId,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n}): string {\n  return `/organizations/${orgSlug}/profiling/profile/${projectSlug}/${profileId}/details/`;\n}\n\nexport function generateProfilingRouteWithQuery({\n  orgSlug,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfilingRoute({orgSlug});\n  return {\n    pathname,\n    query: {\n      ...query,\n    },\n  };\n}\n\nexport function generateProfileSummaryRouteWithQuery({\n  orgSlug,\n  projectSlug,\n  transaction,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  projectSlug: Project['slug'];\n  transaction: string;\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileSummaryRoute({orgSlug, projectSlug});\n  return {\n    pathname,\n    query: {\n      ...query,\n      transaction,\n    },\n  };\n}\n\nexport function generateProfileFlamechartRouteWithQuery({\n  orgSlug,\n  projectSlug,\n  profileId,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileFlamechartRoute({\n    orgSlug,\n    projectSlug,\n    profileId,\n  });\n  return {\n    pathname,\n    query: {\n      ...query,\n    },\n  };\n}\n\nexport function generateProfileFlamechartRouteWithHighlightFrame({\n  orgSlug,\n  projectSlug,\n  profileId,\n  frameName,\n  framePackage,\n  query,\n}: {\n  frameName: string;\n  framePackage: string;\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n  query?: Location['query'];\n}): LocationDescriptor {\n  return generateProfileFlamechartRouteWithQuery({\n    orgSlug,\n    projectSlug,\n    profileId,\n    query: {\n      ...query,\n      frameName,\n      framePackage,\n    },\n  });\n}\n\nexport function generateProfileDetailsRouteWithQuery({\n  orgSlug,\n  projectSlug,\n  profileId,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileDetailsRoute({orgSlug, projectSlug, profileId});\n  return {\n    pathname,\n    query: {\n      ...query,\n    },\n  };\n}\n","import {useMemo, useState} from 'react';\nimport styled from '@emotion/styled';\nimport {PlatformIcon} from 'platformicons';\n\nimport {Button} from 'sentry/components/button';\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport Link from 'sentry/components/links/link';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel} from 'sentry/components/panels';\nimport PerformanceDuration from 'sentry/components/performanceDuration';\nimport {Flex} from 'sentry/components/profiling/flex';\nimport {\n  FunctionsMiniGrid,\n  FunctionsMiniGridEmptyState,\n  FunctionsMiniGridLoading,\n} from 'sentry/components/profiling/functionsMiniGrid';\nimport {TextTruncateOverflow} from 'sentry/components/profiling/textTruncateOverflow';\nimport {IconChevron} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {\n  EventsResultsDataRow,\n  useProfileEvents,\n} from 'sentry/utils/profiling/hooks/useProfileEvents';\nimport {useProfilingTransactionQuickSummary} from 'sentry/utils/profiling/hooks/useProfilingTransactionQuickSummary';\nimport {generateProfileSummaryRouteWithQuery} from 'sentry/utils/profiling/routes';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport useProjects from 'sentry/utils/useProjects';\n\nconst fields = ['transaction', 'project.id', 'last_seen()', 'p95()', 'count()'] as const;\ntype SlowestTransactionsFields = (typeof fields)[number];\n\nexport function ProfilingSlowestTransactionsPanel() {\n  const profilingTransactionsQuery = useProfileEvents({\n    fields,\n    sort: {\n      key: 'p95()',\n      order: 'desc',\n    },\n    limit: 3,\n    query: 'count():>3',\n    referrer: 'api.profiling.landing-slowest-transaction-panel',\n  });\n\n  const [openPanel, setOpenPanel] = useState<null | string>(null);\n\n  const profilingTransactions = useMemo(\n    () => profilingTransactionsQuery.data?.[0].data ?? [],\n    [profilingTransactionsQuery.data]\n  );\n\n  const transactionNames = useMemo(\n    () => profilingTransactions.map(txn => txn.transaction),\n    [profilingTransactions]\n  );\n\n  if (transactionNames.length > 0 && !transactionNames.includes(openPanel)) {\n    const firstTransaction = transactionNames[0];\n    setOpenPanel(firstTransaction as string);\n  }\n\n  const {isLoading} = profilingTransactionsQuery;\n  const hasProfilingTransactions =\n    !isLoading && profilingTransactions && profilingTransactions.length > 0;\n\n  return (\n    <FlexPanel>\n      <Flex column h=\"100%\">\n        <Flex column p={space(1.5)}>\n          <PanelHeading>{t('Slowest Transactions')}</PanelHeading>\n          <PanelSubheading>\n            {t('Slowest transactions that could use some optimization.')}\n          </PanelSubheading>\n        </Flex>\n\n        {(isLoading || !hasProfilingTransactions) && (\n          <Flex column align=\"center\" justify=\"center\" h=\"100%\">\n            {isLoading ? (\n              <LoadingIndicator />\n            ) : (\n              !hasProfilingTransactions && (\n                <Flex.Item>\n                  <EmptyStateWarning>\n                    <p>{t('No results found')}</p>\n                    <EmptyStateDescription>\n                      {t(\n                        'Transactions may not be listed due to the filters above or a low number of profiles.'\n                      )}\n                    </EmptyStateDescription>\n                  </EmptyStateWarning>\n                </Flex.Item>\n              )\n            )}\n          </Flex>\n        )}\n\n        {profilingTransactions?.map(transaction => {\n          return (\n            <SlowestTransactionPanelItem\n              key={transaction.transaction}\n              transaction={transaction}\n              open={transaction.transaction === openPanel}\n              onOpen={() => setOpenPanel(transaction.transaction as string)}\n            />\n          );\n        })}\n      </Flex>\n    </FlexPanel>\n  );\n}\ninterface SlowestTransactionPanelItemProps {\n  onOpen: () => void;\n  open: boolean;\n  transaction: EventsResultsDataRow<SlowestTransactionsFields>;\n}\n\nfunction SlowestTransactionPanelItem({\n  transaction,\n  open,\n  onOpen,\n}: SlowestTransactionPanelItemProps) {\n  const organization = useOrganization();\n  const projects = useProjects();\n  const transactionProject = useMemo(\n    () => projects.projects.find(p => p.id === String(transaction['project.id'])),\n    [projects.projects, transaction]\n  );\n\n  if (!transactionProject) {\n    throw Error('Cannot find project for slowest transaction');\n  }\n\n  return (\n    <PanelItem key={transaction.transaction}>\n      <Flex justify=\"space-between\" gap={space(1)}>\n        <PlatformIcon platform={transactionProject?.platform} />\n        <Flex.Item grow={1}>\n          <Link\n            to={generateProfileSummaryRouteWithQuery({\n              orgSlug: organization.slug,\n              projectSlug: transactionProject?.slug!,\n              transaction: transaction.transaction as string,\n            })}\n            onClick={() => {\n              trackAdvancedAnalyticsEvent('profiling_views.go_to_transaction', {\n                source: 'slowest_transaction_panel',\n                organization,\n              });\n            }}\n          >\n            <TextTruncateOverflow>\n              {transaction.transaction as string}\n            </TextTruncateOverflow>\n          </Link>\n        </Flex.Item>\n\n        <PerformanceDuration nanoseconds={transaction['p95()'] as number} abbreviation />\n        <Button borderless size=\"zero\" onClick={onOpen}>\n          <IconChevron direction={open ? 'up' : 'down'} size=\"xs\" />\n        </Button>\n      </Flex>\n      <PanelItemBody\n        style={{\n          height: open ? 160 : 0,\n        }}\n      >\n        {open && transactionProject && (\n          <PanelItemFunctionsMiniGrid\n            transaction={String(transaction.transaction)}\n            organization={organization}\n            project={transactionProject}\n          />\n        )}\n      </PanelItemBody>\n    </PanelItem>\n  );\n}\n\ninterface PanelItemFunctionsMiniGridProps {\n  organization: Organization;\n  project: Project;\n  transaction: string;\n}\n\nfunction PanelItemFunctionsMiniGrid(props: PanelItemFunctionsMiniGridProps) {\n  const {transaction, project, organization} = props;\n  const {functionsQuery, functions} = useProfilingTransactionQuickSummary({\n    transaction,\n    project,\n    referrer: 'api.profiling.landing-slowest-transaction-panel',\n    skipLatestProfile: true,\n    skipSlowestProfile: true,\n  });\n\n  if (functionsQuery.isLoading) {\n    return <FunctionsMiniGridLoading />;\n  }\n\n  if (!functions || (functions && functions.length === 0)) {\n    return <FunctionsMiniGridEmptyState />;\n  }\n\n  return (\n    <PanelItemBodyInner>\n      <FunctionsMiniGrid\n        functions={functions}\n        organization={organization}\n        project={project}\n        onLinkClick={() =>\n          trackAdvancedAnalyticsEvent('profiling_views.go_to_flamegraph', {\n            organization,\n            source: 'slowest_transaction_panel',\n          })\n        }\n      />\n    </PanelItemBodyInner>\n  );\n}\n\nconst FlexPanel = styled(Panel)`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PanelHeading = styled('span')`\n  font-size: ${p => p.theme.text.cardTitle.fontSize};\n  font-weight: ${p => p.theme.text.cardTitle.fontWeight};\n  line-height: ${p => p.theme.text.cardTitle.lineHeight};\n`;\n\nconst PanelSubheading = styled('span')`\n  color: ${p => p.theme.subText};\n`;\n\nconst PanelItem = styled('div')`\n  padding: ${space(1)} ${space(1.5)};\n  border-top: 1px solid ${p => p.theme.border};\n`;\nconst PanelItemBody = styled('div')`\n  transition: height 0.1s ease;\n  width: 100%;\n  overflow: hidden;\n`;\n\n// TODO: simple layout stuff like this should come from a primitive component and we should really stop this `styled` nonsense\nconst PanelItemBodyInner = styled('div')`\n  padding-top: ${space(1.5)};\n`;\n\nconst EmptyStateDescription = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n","import styled from '@emotion/styled';\n\nimport emptyStateImg from 'sentry-images/spot/performance-empty-state.svg';\n\nimport ButtonBar from 'sentry/components/buttonBar';\nimport OnboardingPanel from 'sentry/components/onboardingPanel';\nimport {t} from 'sentry/locale';\n\ninterface ProfilingOnboardingPanelProps {\n  children: React.ReactNode;\n}\n\nexport function ProfilingOnboardingPanel(props: ProfilingOnboardingPanelProps) {\n  return (\n    <OnboardingPanel image={<HeroImage src={emptyStateImg} />}>\n      <h3>{t('Function level insights')}</h3>\n      <p>\n        {t(\n          'Discover slow-to-execute or resource intensive functions within your application'\n        )}\n      </p>\n      <ButtonList gap={1}>{props.children}</ButtonList>\n    </OnboardingPanel>\n  );\n}\n\nconst HeroImage = styled('img')`\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    user-select: none;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    width: 220px;\n    margin-top: auto;\n    margin-bottom: auto;\n    transform: translateX(-50%);\n    left: 50%;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    transform: translateX(-30%);\n    width: 380px;\n    min-width: 380px;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    transform: translateX(-30%);\n    width: 420px;\n    min-width: 420px;\n  }\n`;\n\nconst ButtonList = styled(ButtonBar)`\n  grid-template-columns: repeat(auto-fit, minmax(130px, max-content));\n`;\n","import {Fragment, useCallback, useEffect, useMemo} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {Alert} from 'sentry/components/alert';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport {PageHeadingQuestionTooltip} from 'sentry/components/pageHeadingQuestionTooltip';\nimport Pagination from 'sentry/components/pagination';\nimport {ProfileEventsTable} from 'sentry/components/profiling/profileEventsTable';\nimport ProjectPageFilter from 'sentry/components/projectPageFilter';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {SidebarPanelKey} from 'sentry/components/sidebar/types';\nimport SmartSearchBar, {SmartSearchBarProps} from 'sentry/components/smartSearchBar';\nimport {MAX_QUERY_LENGTH} from 'sentry/constants';\nimport {ALL_ACCESS_PROJECTS} from 'sentry/constants/pageFilters';\nimport {t} from 'sentry/locale';\nimport SidebarPanelStore from 'sentry/stores/sidebarPanelStore';\nimport {space} from 'sentry/styles/space';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {\n  formatError,\n  formatSort,\n  useProfileEvents,\n} from 'sentry/utils/profiling/hooks/useProfileEvents';\nimport {useProfileFilters} from 'sentry/utils/profiling/hooks/useProfileFilters';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport usePageFilters from 'sentry/utils/usePageFilters';\nimport useProjects from 'sentry/utils/useProjects';\n\nimport {ProfileCharts} from './landing/profileCharts';\nimport {ProfilingSlowestTransactionsPanel} from './landing/profilingSlowestTransactionsPanel';\nimport {ProfilingOnboardingPanel} from './profilingOnboardingPanel';\n\ninterface ProfilingContentProps {\n  location: Location;\n}\n\nfunction ProfilingContent({location}: ProfilingContentProps) {\n  const organization = useOrganization();\n  const {selection} = usePageFilters();\n  const cursor = decodeScalar(location.query.cursor);\n  const query = decodeScalar(location.query.query, '');\n\n  const sort = formatSort<FieldType>(decodeScalar(location.query.sort), FIELDS, {\n    key: 'p99()',\n    order: 'desc',\n  });\n\n  const profileFilters = useProfileFilters({query: '', selection});\n  const {projects} = useProjects();\n\n  const transactions = useProfileEvents<FieldType>({\n    cursor,\n    fields: FIELDS,\n    query,\n    sort,\n    referrer: 'api.profiling.landing-table',\n  });\n\n  const transactionsError =\n    transactions.status === 'error' ? formatError(transactions.error) : null;\n\n  useEffect(() => {\n    trackAdvancedAnalyticsEvent('profiling_views.landing', {\n      organization,\n    });\n  }, [organization]);\n\n  const handleSearch: SmartSearchBarProps['onSearch'] = useCallback(\n    (searchQuery: string) => {\n      browserHistory.push({\n        ...location,\n        query: {\n          ...location.query,\n          cursor: undefined,\n          query: searchQuery || undefined,\n        },\n      });\n    },\n    [location]\n  );\n\n  // Open the modal on demand\n  const onSetupProfilingClick = useCallback(() => {\n    trackAdvancedAnalyticsEvent('profiling_views.onboarding', {\n      organization,\n    });\n    SidebarPanelStore.activatePanel(SidebarPanelKey.ProfilingOnboarding);\n  }, [organization]);\n\n  const shouldShowProfilingOnboardingPanel = useMemo((): boolean => {\n    // if it's My Projects or All projects, only show onboarding if we can't\n    // find any projects with profiles\n    if (\n      selection.projects.length === 0 ||\n      selection.projects[0] === ALL_ACCESS_PROJECTS\n    ) {\n      return projects.every(project => !project.hasProfiles);\n    }\n\n    // otherwise, only show onboarding if we can't find any projects with profiles\n    // from those that were selected\n    const projectsWithProfiles = new Set(\n      projects.filter(project => project.hasProfiles).map(project => project.id)\n    );\n    return selection.projects.every(\n      project => !projectsWithProfiles.has(String(project))\n    );\n  }, [selection.projects, projects]);\n\n  const isNewProfilingDashboardEnabled = organization.features.includes(\n    'profiling-dashboard-redesign'\n  );\n\n  return (\n    <SentryDocumentTitle title={t('Profiling')} orgSlug={organization.slug}>\n      <PageFiltersContainer>\n        <Layout.Page>\n          <Layout.Header>\n            <Layout.HeaderContent>\n              <Layout.Title>\n                {t('Profiling')}\n                <PageHeadingQuestionTooltip\n                  docsUrl=\"https://docs.sentry.io/product/profiling/\"\n                  title={t(\n                    'A view of how your application performs in a variety of environments, based off of the performance profiles collected from real user devices in production.'\n                  )}\n                />\n                <FeatureBadge type=\"beta\" />\n              </Layout.Title>\n            </Layout.HeaderContent>\n            <Layout.HeaderActions>\n              <ButtonBar gap={1}>\n                <Button size=\"sm\" onClick={onSetupProfilingClick}>\n                  {t('Set Up Profiling')}\n                </Button>\n                <Button\n                  size=\"sm\"\n                  priority=\"primary\"\n                  href=\"https://discord.gg/zrMjKA4Vnz\"\n                  external\n                  onClick={() => {\n                    trackAdvancedAnalyticsEvent('profiling_views.visit_discord_channel', {\n                      organization,\n                    });\n                  }}\n                >\n                  {t('Join Discord')}\n                </Button>\n              </ButtonBar>\n            </Layout.HeaderActions>\n          </Layout.Header>\n          <Layout.Body>\n            <Layout.Main fullWidth>\n              {transactionsError && (\n                <Alert type=\"error\" showIcon>\n                  {transactionsError}\n                </Alert>\n              )}\n              <ActionBar>\n                <PageFilterBar condensed>\n                  <ProjectPageFilter />\n                  <EnvironmentPageFilter />\n                  <DatePageFilter alignDropdown=\"left\" />\n                </PageFilterBar>\n                <SmartSearchBar\n                  organization={organization}\n                  hasRecentSearches\n                  searchSource=\"profile_landing\"\n                  supportedTags={profileFilters}\n                  query={query}\n                  onSearch={handleSearch}\n                  maxQueryLength={MAX_QUERY_LENGTH}\n                />\n              </ActionBar>\n              {shouldShowProfilingOnboardingPanel ? (\n                <ProfilingOnboardingPanel>\n                  <Button onClick={onSetupProfilingClick} priority=\"primary\">\n                    {t('Set Up Profiling')}\n                  </Button>\n                  <Button href=\"https://docs.sentry.io/product/profiling/\" external>\n                    {t('Read Docs')}\n                  </Button>\n                </ProfilingOnboardingPanel>\n              ) : (\n                <Fragment>\n                  {isNewProfilingDashboardEnabled ? (\n                    <PanelsGrid>\n                      <ProfilingSlowestTransactionsPanel />\n                      <ProfileCharts\n                        query={query}\n                        selection={selection}\n                        hideCount={isNewProfilingDashboardEnabled}\n                      />\n                    </PanelsGrid>\n                  ) : (\n                    <ProfileCharts\n                      query={query}\n                      selection={selection}\n                      hideCount={isNewProfilingDashboardEnabled}\n                    />\n                  )}\n                  <ProfileEventsTable\n                    columns={FIELDS.slice()}\n                    data={transactions.status === 'success' ? transactions.data[0] : null}\n                    error={\n                      transactions.status === 'error'\n                        ? t('Unable to load profiles')\n                        : null\n                    }\n                    isLoading={transactions.status === 'loading'}\n                    sort={sort}\n                    sortableColumns={new Set(FIELDS)}\n                  />\n                  <Pagination\n                    pageLinks={\n                      transactions.status === 'success'\n                        ? transactions.data?.[2]?.getResponseHeader('Link') ?? null\n                        : null\n                    }\n                  />\n                </Fragment>\n              )}\n            </Layout.Main>\n          </Layout.Body>\n        </Layout.Page>\n      </PageFiltersContainer>\n    </SentryDocumentTitle>\n  );\n}\n\nconst FIELDS = [\n  'transaction',\n  'project.id',\n  'last_seen()',\n  'p75()',\n  'p95()',\n  'p99()',\n  'count()',\n] as const;\n\ntype FieldType = (typeof FIELDS)[number];\n\nconst ActionBar = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  grid-template-columns: min-content auto;\n  margin-bottom: ${space(2)};\n`;\n\n// TODO: another simple primitive that can easily be <Grid columns={2} />\nconst PanelsGrid = styled('div')`\n  display: grid;\n  grid-template-columns: minmax(0, 1fr) 1fr;\n  gap: ${space(2)};\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: minmax(0, 1fr);\n  }\n`;\n\nexport default ProfilingContent;\n"],"names":["OnboardingPanel","image","children","props","Container","IlloBox","StyledBox","centered","space","p","theme","breakpoints","small","medium","tooltipFormatter","value","outputType","defined","tooltipFormatterUsingAggregateOutputType","type","toLocaleString","formatPercentage","getDuration","formatBytesBase2","toString","axisLabelFormatter","abbreviation","durationUnit","axisLabelFormatterUsingAggregateOutputType","formatAbbreviatedNumber","axisDuration","categorizeDuration","WEEK","label","toFixed","t","DAY","HOUR","MINUTE","SECOND","getDurationUnit","series","legend","range","data","maxSeries","minSeries","forEach","idx","seriesName","selected","length","max","Math","map","filter","min","findRangeOfMultiSeries","avg","generateProfileFlamechartRoute","orgSlug","projectSlug","profileId","generateProfilingRouteWithQuery","query","pathname","generateProfilingRoute","generateProfileSummaryRouteWithQuery","transaction","generateProfileSummaryRoute","generateProfileFlamechartRouteWithQuery","generateProfileFlamechartRouteWithHighlightFrame","frameName","framePackage","generateProfileDetailsRouteWithQuery","generateProfileDetailsRoute","fields","ProfilingSlowestTransactionsPanel","profilingTransactionsQuery","useProfileEvents","sort","key","order","limit","referrer","openPanel","setOpenPanel","useState","profilingTransactions","useMemo","transactionNames","txn","includes","firstTransaction","isLoading","hasProfilingTransactions","FlexPanel","column","h","PanelHeading","PanelSubheading","align","justify","EmptyStateDescription","SlowestTransactionPanelItem","open","onOpen","organization","useOrganization","projects","useProjects","transactionProject","find","id","String","Error","PanelItem","gap","platform","grow","to","slug","onClick","trackAdvancedAnalyticsEvent","source","nanoseconds","borderless","size","direction","PanelItemBody","style","height","PanelItemFunctionsMiniGrid","project","functionsQuery","functions","useProfilingTransactionQuickSummary","skipLatestProfile","skipSlowestProfile","PanelItemBodyInner","onLinkClick","Panel","text","cardTitle","fontSize","fontWeight","lineHeight","subText","border","fontSizeMedium","ProfilingOnboardingPanel","HeroImage","src","emptyStateImg","ButtonList","large","xlarge","ButtonBar","ProfilingContent","location","selection","usePageFilters","cursor","decodeScalar","formatSort","FIELDS","profileFilters","useProfileFilters","transactions","transactionsError","status","formatError","error","useEffect","handleSearch","useCallback","searchQuery","browserHistory","undefined","onSetupProfilingClick","SidebarPanelStore","SidebarPanelKey","shouldShowProfilingOnboardingPanel","ALL_ACCESS_PROJECTS","every","hasProfiles","projectsWithProfiles","Set","has","isNewProfilingDashboardEnabled","features","title","docsUrl","priority","href","external","fullWidth","showIcon","ActionBar","condensed","alignDropdown","hasRecentSearches","searchSource","supportedTags","onSearch","maxQueryLength","MAX_QUERY_LENGTH","Fragment","PanelsGrid","hideCount","columns","slice","sortableColumns","pageLinks","getResponseHeader"],"sourceRoot":""}