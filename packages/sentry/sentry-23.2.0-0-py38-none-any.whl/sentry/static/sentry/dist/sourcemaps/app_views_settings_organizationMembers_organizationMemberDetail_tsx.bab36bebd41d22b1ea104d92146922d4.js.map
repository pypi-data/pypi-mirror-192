{"version":3,"file":"chunks/app_views_settings_organizationMembers_organizationMemberDetail_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/isMemberDisabledFromLimit.tsx","webpack:///./app/views/settings/organizationMembers/inviteMember/orgRoleSelect.tsx","webpack:///./app/views/settings/organizationMembers/organizationMemberDetail.tsx"],"sourcesContent":["import {Member} from 'sentry/types';\n\n// check to see if a member has been disabled because of the member limit\nexport default function isMemberDisabledFromLimit(member?: Member | null) {\n  return member?.flags['member-limit:restricted'] ?? false;\n}\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {\n  Panel,\n  PanelAlert,\n  PanelBody,\n  PanelHeader,\n  PanelItem,\n} from 'sentry/components/panels';\nimport Radio from 'sentry/components/radio';\nimport {t, tct} from 'sentry/locale';\nimport {OrgRole} from 'sentry/types';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nconst Label = styled('label')`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  margin-bottom: 0;\n`;\n\ntype Props = {\n  disabled: boolean;\n  enforceAllowed: boolean;\n  enforceIdpRoleRestricted: boolean;\n  enforceRetired: boolean;\n  isCurrentUser: boolean;\n  roleList: OrgRole[];\n  roleSelected: string;\n  setSelected: (id: string) => void;\n};\n\nclass OrganizationRoleSelect extends Component<Props> {\n  render() {\n    const {\n      disabled,\n      enforceRetired,\n      enforceAllowed,\n      isCurrentUser,\n      roleList,\n      enforceIdpRoleRestricted,\n      roleSelected,\n      setSelected,\n    } = this.props;\n\n    return (\n      <Panel>\n        <PanelHeader>\n          <div>{t('Organization Role')}</div>\n        </PanelHeader>\n        {enforceIdpRoleRestricted && (\n          <PanelAlert>\n            {tct(\n              \"[person] organization-level role is managed through your organization's identity provider.\",\n              {person: isCurrentUser ? 'Your' : \"This member's\"}\n            )}\n          </PanelAlert>\n        )}\n\n        <PanelBody>\n          {roleList.map(role => {\n            const {desc, name, id, allowed, isRetired: roleRetired} = role;\n\n            const isRetired = enforceRetired && roleRetired;\n            const isDisabled =\n              disabled ||\n              isRetired ||\n              (enforceAllowed && !allowed) ||\n              enforceIdpRoleRestricted;\n\n            return (\n              <PanelItem\n                key={id}\n                onClick={() => !isDisabled && setSelected(id)}\n                css={!isDisabled ? {} : {color: 'grey', cursor: 'default'}}\n              >\n                <Label>\n                  <Radio id={id} value={name} checked={id === roleSelected} readOnly />\n                  <div style={{flex: 1, padding: '0 16px'}}>\n                    {name}\n                    <TextBlock noMargin>\n                      <div className=\"help-block\">{desc}</div>\n                    </TextBlock>\n                  </div>\n                </Label>\n              </PanelItem>\n            );\n          })}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport default OrganizationRoleSelect;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\nimport isEqual from 'lodash/isEqual';\n\nimport {removeAuthenticator} from 'sentry/actionCreators/account';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {resendMemberInvite, updateMember} from 'sentry/actionCreators/members';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport DateTime from 'sentry/components/dateTime';\nimport NotFound from 'sentry/components/errors/notFound';\nimport FieldGroup from 'sentry/components/forms/fieldGroup';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconRefresh} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport configStore from 'sentry/stores/configStore';\nimport {space} from 'sentry/styles/space';\nimport {Member, Organization} from 'sentry/types';\nimport isMemberDisabledFromLimit from 'sentry/utils/isMemberDisabledFromLimit';\nimport Teams from 'sentry/utils/teams';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TeamSelect from 'sentry/views/settings/components/teamSelect';\n\nimport OrganizationRoleSelect from './inviteMember/orgRoleSelect';\n\nconst MULTIPLE_ORGS = t('Cannot be reset since user is in more than one organization');\nconst NOT_ENROLLED = t('Not enrolled in two-factor authentication');\nconst NO_PERMISSION = t('You do not have permission to perform this action');\nconst TWO_FACTOR_REQUIRED = t(\n  'Cannot be reset since two-factor is required for this organization'\n);\n\ntype RouteParams = {\n  memberId: string;\n};\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<RouteParams, {}>;\n\ntype State = {\n  member: Member | null;\n  orgRole: Member['orgRole'];\n  teamRoles: Member['teamRoles'];\n} & AsyncView['state'];\n\nconst DisabledMemberTooltip = HookOrDefault({\n  hookName: 'component:disabled-member-tooltip',\n  defaultComponent: ({children}) => <Fragment>{children}</Fragment>,\n});\n\nclass OrganizationMemberDetail extends AsyncView<Props, State> {\n  get hasTeamRoles() {\n    const {organization} = this.props;\n    return organization.features.includes('team-roles');\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      member: null,\n      orgRole: '',\n      teamRoles: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, params} = this.props;\n    return [\n      ['member', `/organizations/${organization.slug}/members/${params.memberId}/`],\n    ];\n  }\n\n  onRequestSuccess({data, stateKey}: {data: Member; stateKey: string}) {\n    if (stateKey === 'member') {\n      const {orgRole, teamRoles} = data;\n      this.setState({orgRole, teamRoles});\n    }\n  }\n\n  handleSave = async () => {\n    const {organization, params} = this.props;\n    const {orgRole, teamRoles} = this.state;\n\n    addLoadingMessage(t('Saving...'));\n    this.setState({busy: true});\n\n    try {\n      const updatedMember = await updateMember(this.api, {\n        orgId: organization.slug,\n        memberId: params.memberId,\n        data: {orgRole, teamRoles} as any,\n      });\n      this.setState({member: updatedMember, busy: false});\n      addSuccessMessage(t('Saved'));\n    } catch (resp) {\n      const errorMessage =\n        (resp && resp.responseJSON && resp.responseJSON.detail) || t('Could not save...');\n      this.setState({busy: false});\n      addErrorMessage(errorMessage);\n    }\n  };\n\n  handleInvite = async (regenerate: boolean) => {\n    const {organization, params} = this.props;\n\n    addLoadingMessage(t('Sending invite...'));\n\n    this.setState({busy: true});\n\n    try {\n      const data = await resendMemberInvite(this.api, {\n        orgId: organization.slug,\n        memberId: params.memberId,\n        regenerate,\n      });\n\n      addSuccessMessage(t('Sent invite!'));\n\n      if (regenerate) {\n        this.setState(state => ({member: {...state.member, ...data}}));\n      }\n    } catch (_err) {\n      addErrorMessage(t('Could not send invite'));\n    }\n\n    this.setState({busy: false});\n  };\n\n  handle2faReset = async () => {\n    const {organization, router} = this.props;\n    const {user} = this.state.member!;\n\n    const requests = user.authenticators.map(auth =>\n      removeAuthenticator(this.api, user.id, auth.id)\n    );\n\n    try {\n      await Promise.all(requests);\n      router.push(normalizeUrl(`/settings/${organization.slug}/members/`));\n      addSuccessMessage(t('All authenticators have been removed'));\n    } catch (err) {\n      addErrorMessage(t('Error removing authenticators'));\n      Sentry.captureException(err);\n    }\n  };\n\n  onAddTeam = (teamSlug: string) => {\n    const teamRoles = [...this.state.teamRoles];\n    const i = teamRoles.findIndex(r => r.teamSlug === teamSlug);\n    if (i !== -1) {\n      return;\n    }\n\n    teamRoles.push({teamSlug, role: null});\n    this.setState({teamRoles});\n  };\n\n  onRemoveTeam = (teamSlug: string) => {\n    const teamRoles = this.state.teamRoles.filter(r => r.teamSlug !== teamSlug);\n    this.setState({teamRoles});\n  };\n\n  onChangeOrgRole = orgRole => this.setState({orgRole});\n\n  onChangeTeamRole = (teamSlug: string, role: string) => {\n    if (!this.hasTeamRoles) {\n      return;\n    }\n\n    const teamRoles = [...this.state.teamRoles];\n    const i = teamRoles.findIndex(r => r.teamSlug === teamSlug);\n    if (i === -1) {\n      return;\n    }\n\n    teamRoles[i] = {...teamRoles[i], role};\n    this.setState({teamRoles});\n  };\n\n  showResetButton = () => {\n    const {organization} = this.props;\n    const {member} = this.state;\n    const {user} = member!;\n\n    if (!user || !user.authenticators || organization.require2FA) {\n      return false;\n    }\n    const hasAuth = user.authenticators.length >= 1;\n    return hasAuth && user.canReset2fa;\n  };\n\n  getTooltip = (): string => {\n    const {organization} = this.props;\n    const {member} = this.state;\n    const {user} = member!;\n\n    if (!user) {\n      return '';\n    }\n\n    if (!user.authenticators) {\n      return NO_PERMISSION;\n    }\n    if (!user.authenticators.length) {\n      return NOT_ENROLLED;\n    }\n    if (!user.canReset2fa) {\n      return MULTIPLE_ORGS;\n    }\n    if (organization.require2FA) {\n      return TWO_FACTOR_REQUIRED;\n    }\n\n    return '';\n  };\n\n  get memberDeactivated() {\n    return isMemberDisabledFromLimit(this.state.member);\n  }\n\n  get hasFormChanged() {\n    const {member, orgRole, teamRoles} = this.state;\n    if (!member) {\n      return false;\n    }\n\n    if (orgRole !== member.orgRole || !isEqual(teamRoles, member?.teamRoles)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  renderMemberStatus(member: Member) {\n    if (this.memberDeactivated) {\n      return (\n        <em>\n          <DisabledMemberTooltip>{t('Deactivated')}</DisabledMemberTooltip>\n        </em>\n      );\n    }\n    if (member.expired) {\n      return <em>{t('Invitation Expired')}</em>;\n    }\n    if (member.pending) {\n      return <em>{t('Invitation Pending')}</em>;\n    }\n    return t('Active');\n  }\n\n  renderBody() {\n    const {organization} = this.props;\n    const {member, orgRole, teamRoles} = this.state;\n\n    if (!member) {\n      return <NotFound />;\n    }\n\n    const {access, features, orgRoleList} = organization;\n    const canEdit = access.includes('org:write') && !this.memberDeactivated;\n    const hasTeamRoles = features.includes('team-roles');\n\n    const {email, expired, pending, invite_link: inviteLink} = member;\n    const canResend = !expired;\n    const showAuth = !pending;\n    const currentUser = configStore.get('user');\n    const isCurrentUser = currentUser.email === email;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={\n            <Fragment>\n              <div>{member.name}</div>\n              <ExtraHeaderText>{t('Member Settings')}</ExtraHeaderText>\n            </Fragment>\n          }\n        />\n\n        <Panel>\n          <PanelHeader>{t('Basics')}</PanelHeader>\n\n          <PanelBody>\n            <PanelItem>\n              <Details>\n                <div>\n                  <DetailLabel>{t('Email')}</DetailLabel>\n                  <div>\n                    <ExternalLink href={`mailto:${email}`}>{email}</ExternalLink>\n                  </div>\n                </div>\n                <div>\n                  <DetailLabel>{t('Status')}</DetailLabel>\n                  <div data-test-id=\"member-status\">\n                    {this.renderMemberStatus(member)}\n                  </div>\n                </div>\n                <div>\n                  <DetailLabel>{t('Added')}</DetailLabel>\n                  <div>\n                    <DateTime dateOnly date={member.dateCreated} />\n                  </div>\n                </div>\n              </Details>\n            </PanelItem>\n            <PanelItem>\n              {inviteLink && (\n                <InviteSection>\n                  <InviteField>\n                    <DetailLabel>{t('Invite Link')}</DetailLabel>\n                    <TextCopyInput>{inviteLink}</TextCopyInput>\n                    <p className=\"help-block\">\n                      {t(\n                        'This invite link can be used by anyone who knows it. Keep it secure!'\n                      )}\n                    </p>\n                  </InviteField>\n                  <ButtonBar gap={1}>\n                    {canResend && (\n                      <Button\n                        data-test-id=\"resend-invite\"\n                        onClick={() => this.handleInvite(false)}\n                      >\n                        {t('Resend Invite')}\n                      </Button>\n                    )}\n                    <Button\n                      onClick={() => this.handleInvite(true)}\n                      title={t(\n                        'Generate New Invite. This will invalidate the previous invite link!'\n                      )}\n                      priority=\"danger\"\n                      aria-label={t('Generate New Invite')}\n                      icon={<IconRefresh size=\"sm\" />}\n                    />\n                  </ButtonBar>\n                </InviteSection>\n              )}\n            </PanelItem>\n          </PanelBody>\n        </Panel>\n\n        {showAuth && (\n          <Panel>\n            <PanelHeader>{t('Authentication')}</PanelHeader>\n            <PanelBody>\n              <FieldGroup\n                alignRight\n                flexibleControlStateSize\n                label={t('Reset two-factor authentication')}\n                help={t(\n                  'Resetting two-factor authentication will remove all two-factor authentication methods for this member.'\n                )}\n              >\n                <Tooltip disabled={this.showResetButton()} title={this.getTooltip()}>\n                  <Confirm\n                    disabled={!this.showResetButton()}\n                    message={tct(\n                      'Are you sure you want to disable all two-factor authentication methods for [name]?',\n                      {name: member.name ? member.name : 'this member'}\n                    )}\n                    onConfirm={this.handle2faReset}\n                  >\n                    <Button priority=\"danger\">\n                      {t('Reset two-factor authentication')}\n                    </Button>\n                  </Confirm>\n                </Tooltip>\n              </FieldGroup>\n            </PanelBody>\n          </Panel>\n        )}\n\n        <OrganizationRoleSelect\n          enforceAllowed={false}\n          enforceIdpRoleRestricted={member.flags['idp:role-restricted']}\n          enforceRetired={hasTeamRoles}\n          isCurrentUser={isCurrentUser}\n          disabled={!canEdit}\n          roleList={orgRoleList}\n          roleSelected={orgRole}\n          setSelected={this.onChangeOrgRole}\n        />\n\n        <Teams slugs={member.teams}>\n          {({initiallyLoaded}) => (\n            <TeamSelect\n              enforceIdpProvisioned\n              disabled={!canEdit}\n              organization={organization}\n              selectedOrgRole={orgRole}\n              selectedTeamRoles={teamRoles}\n              onChangeTeamRole={this.onChangeTeamRole}\n              onAddTeam={this.onAddTeam}\n              onRemoveTeam={this.onRemoveTeam}\n              loadingTeams={!initiallyLoaded}\n            />\n          )}\n        </Teams>\n\n        <Footer>\n          <Button\n            priority=\"primary\"\n            busy={this.state.busy}\n            onClick={this.handleSave}\n            disabled={!canEdit || !this.hasFormChanged}\n          >\n            {t('Save Member')}\n          </Button>\n        </Footer>\n      </Fragment>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationMemberDetail);\n\nconst ExtraHeaderText = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-weight: normal;\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nconst Details = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: 2fr 1fr 1fr;\n  gap: ${space(2)};\n  width: 100%;\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-auto-flow: row;\n    grid-template-columns: auto;\n  }\n`;\n\nconst DetailLabel = styled('div')`\n  font-weight: bold;\n  margin-bottom: ${space(0.5)};\n  color: ${p => p.theme.textColor};\n`;\n\nconst InviteField = styled('div')`\n  flex-grow: 1;\n`;\n\nconst InviteSection = styled('div')`\n  flex-grow: 1;\n  display: flex;\n  gap: ${space(1)};\n`;\n\nconst Footer = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n`;\n"],"names":["isMemberDisabledFromLimit","member","flags","Label","OrganizationRoleSelect","Component","render","disabled","enforceRetired","enforceAllowed","isCurrentUser","roleList","enforceIdpRoleRestricted","roleSelected","setSelected","this","props","t","tct","person","map","role","desc","name","id","allowed","isRetired","roleRetired","isDisabled","onClick","css","color","cursor","value","checked","readOnly","style","flex","padding","noMargin","className","MULTIPLE_ORGS","NOT_ENROLLED","NO_PERMISSION","TWO_FACTOR_REQUIRED","DisabledMemberTooltip","HookOrDefault","hookName","defaultComponent","children","Fragment","OrganizationMemberDetail","AsyncView","async","organization","params","orgRole","teamRoles","state","addLoadingMessage","setState","busy","updatedMember","updateMember","api","orgId","slug","memberId","data","addSuccessMessage","resp","errorMessage","responseJSON","detail","addErrorMessage","resendMemberInvite","regenerate","_err","router","user","requests","authenticators","auth","removeAuthenticator","Promise","all","push","normalizeUrl","err","Sentry","teamSlug","findIndex","r","filter","hasTeamRoles","i","require2FA","length","canReset2fa","features","includes","getDefaultState","super","getEndpoints","onRequestSuccess","stateKey","memberDeactivated","hasFormChanged","isEqual","renderMemberStatus","expired","pending","renderBody","access","orgRoleList","canEdit","email","invite_link","inviteLink","canResend","showAuth","configStore","title","ExtraHeaderText","Details","DetailLabel","href","dateOnly","date","dateCreated","InviteSection","InviteField","gap","handleInvite","priority","icon","size","alignRight","flexibleControlStateSize","label","help","showResetButton","getTooltip","message","onConfirm","handle2faReset","onChangeOrgRole","slugs","teams","initiallyLoaded","enforceIdpProvisioned","selectedOrgRole","selectedTeamRoles","onChangeTeamRole","onAddTeam","onRemoveTeam","loadingTeams","Footer","handleSave","withOrganization","p","theme","gray300","fontSizeLarge","space","breakpoints","small","textColor"],"sourceRoot":""}