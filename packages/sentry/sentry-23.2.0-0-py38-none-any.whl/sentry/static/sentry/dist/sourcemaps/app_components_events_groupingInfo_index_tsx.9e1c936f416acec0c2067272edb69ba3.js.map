{"version":3,"file":"chunks/app_components_events_groupingInfo_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/groupingInfo/groupingConfigSelect.tsx","webpack:///./app/components/events/groupingInfo/utils.tsx","webpack:///./app/components/events/groupingInfo/groupingComponentChildren.tsx","webpack:///./app/components/events/groupingInfo/groupingComponentFrames.tsx","webpack:///./app/components/events/groupingInfo/groupingComponentStacktrace.tsx","webpack:///./app/components/events/groupingInfo/groupingComponent.tsx","webpack:///./app/components/events/groupingInfo/groupingVariant.tsx","webpack:///./app/components/events/groupingInfo/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport DropdownAutoComplete from 'sentry/components/dropdownAutoComplete';\nimport DropdownButton from 'sentry/components/dropdownButton';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport {EventGroupingConfig} from 'sentry/types';\n\nimport {GroupingConfigItem} from '.';\n\ntype Props = AsyncComponent['props'] & {\n  configId: string;\n  eventConfigId: string;\n  onSelect: (selection: any) => void;\n};\n\ntype State = AsyncComponent['state'] & {\n  configs: EventGroupingConfig[];\n};\n\nclass GroupingConfigSelect extends AsyncComponent<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      configs: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    return [['configs', '/grouping-configs/']];\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody() {\n    const {configId, eventConfigId, onSelect} = this.props;\n    const {configs} = this.state;\n\n    const options = configs.map(({id, hidden}) => ({\n      value: id,\n      label: (\n        <GroupingConfigItem isHidden={hidden} isActive={id === eventConfigId}>\n          {id}\n        </GroupingConfigItem>\n      ),\n    }));\n\n    return (\n      <DropdownAutoComplete onSelect={onSelect} items={options}>\n        {({isOpen}) => (\n          <Tooltip title={t('Click here to experiment with other grouping configs')}>\n            <StyledDropdownButton isOpen={isOpen} size=\"sm\">\n              <GroupingConfigItem isActive={eventConfigId === configId}>\n                {configId}\n              </GroupingConfigItem>\n            </StyledDropdownButton>\n          </Tooltip>\n        )}\n      </DropdownAutoComplete>\n    );\n  }\n}\n\nconst StyledDropdownButton = styled(DropdownButton)`\n  font-weight: inherit;\n`;\n\nexport default GroupingConfigSelect;\n","import isObject from 'lodash/isObject';\n\nimport {EventGroupComponent} from 'sentry/types';\n\nexport function hasNonContributingComponent(component: EventGroupComponent | undefined) {\n  if (component === undefined) {\n    return false;\n  }\n\n  if (!component.contributes) {\n    return true;\n  }\n\n  for (const value of component.values) {\n    if (isObject(value) && hasNonContributingComponent(value)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function shouldInlineComponentValue(component: EventGroupComponent) {\n  return (component.values as EventGroupComponent[]).every(value => !isObject(value));\n}\n\nexport function groupingComponentFilter(\n  value: EventGroupComponent | string,\n  showNonContributing: boolean\n) {\n  if (isObject(value)) {\n    // no point rendering such nodes at all, we never show them\n    if (!value.contributes && !value.hint && value.values.length === 0) {\n      return false;\n    }\n    // non contributing values are otherwise optional\n    if (!showNonContributing && !value.contributes) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import {Fragment} from 'react';\nimport isObject from 'lodash/isObject';\n\nimport {EventGroupComponent} from 'sentry/types';\n\nimport GroupingComponent, {\n  GroupingComponentListItem,\n  GroupingValue,\n} from './groupingComponent';\nimport {groupingComponentFilter} from './utils';\n\ntype Props = {\n  component: EventGroupComponent;\n  showNonContributing: boolean;\n};\n\nconst GroupingComponentChildren = ({component, showNonContributing}: Props) => {\n  return (\n    <Fragment>\n      {(component.values as EventGroupComponent[])\n        .filter(value => groupingComponentFilter(value, showNonContributing))\n        .map((value, idx) => (\n          <GroupingComponentListItem key={idx}>\n            {isObject(value) ? (\n              <GroupingComponent\n                component={value}\n                showNonContributing={showNonContributing}\n              />\n            ) : (\n              <GroupingValue valueType={component.name || component.id}>\n                {typeof value === 'string' || typeof value === 'number'\n                  ? value\n                  : JSON.stringify(value, null, 2)}\n              </GroupingValue>\n            )}\n          </GroupingComponentListItem>\n        ))}\n    </Fragment>\n  );\n};\n\nexport default GroupingComponentChildren;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport {IconAdd, IconSubtract} from 'sentry/icons';\nimport {tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\nimport {GroupingComponentListItem} from './groupingComponent';\n\ntype DefaultProps = {\n  maxVisibleItems: number;\n};\n\ntype Props = DefaultProps & {\n  items: React.ReactNode[];\n};\n\ntype State = {\n  collapsed: boolean;\n};\n\nclass GroupingComponentFrames extends Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    maxVisibleItems: 2,\n  };\n\n  state: State = {\n    collapsed: true,\n  };\n\n  render() {\n    const {items, maxVisibleItems} = this.props;\n    const {collapsed} = this.state;\n    const isCollapsible = items.length > maxVisibleItems;\n\n    return (\n      <Fragment>\n        {items.map((item, index) => {\n          if (!collapsed || index < maxVisibleItems) {\n            return (\n              <GroupingComponentListItem isCollapsible={isCollapsible} key={index}>\n                {item}\n              </GroupingComponentListItem>\n            );\n          }\n\n          if (index === maxVisibleItems) {\n            return (\n              <GroupingComponentListItem key={index}>\n                <ToggleCollapse\n                  size=\"sm\"\n                  priority=\"link\"\n                  icon={<IconAdd legacySize=\"8px\" />}\n                  onClick={() => this.setState({collapsed: false})}\n                >\n                  {tct('show [numberOfFrames] similar', {\n                    numberOfFrames: items.length - maxVisibleItems,\n                  })}\n                </ToggleCollapse>\n              </GroupingComponentListItem>\n            );\n          }\n\n          return null;\n        })}\n\n        {!collapsed && items.length > maxVisibleItems && (\n          <GroupingComponentListItem>\n            <ToggleCollapse\n              size=\"sm\"\n              priority=\"link\"\n              icon={<IconSubtract legacySize=\"8px\" />}\n              onClick={() => this.setState({collapsed: true})}\n            >\n              {tct('collapse [numberOfFrames] similar', {\n                numberOfFrames: items.length - maxVisibleItems,\n              })}\n            </ToggleCollapse>\n          </GroupingComponentListItem>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst ToggleCollapse = styled(Button)`\n  margin: ${space(0.5)} 0;\n  color: ${p => p.theme.linkColor};\n`;\n\nexport default GroupingComponentFrames;\n","import {Fragment} from 'react';\n\nimport {EventGroupComponent} from 'sentry/types';\n\nimport GroupingComponent from './groupingComponent';\nimport GroupingComponentFrames from './groupingComponentFrames';\nimport {groupingComponentFilter} from './utils';\n\ntype FrameGroup = {\n  data: EventGroupComponent[];\n  key: string;\n};\n\ntype Props = {\n  component: EventGroupComponent;\n  showNonContributing: boolean;\n};\n\nconst GroupingComponentStacktrace = ({component, showNonContributing}: Props) => {\n  const getFrameGroups = () => {\n    const frameGroups: FrameGroup[] = [];\n\n    (component.values as EventGroupComponent[])\n      .filter(value => groupingComponentFilter(value, showNonContributing))\n      .forEach(value => {\n        const key = (value.values as EventGroupComponent[])\n          .filter(v => groupingComponentFilter(v, showNonContributing))\n          .map(v => v.id)\n          .sort((a, b) => a.localeCompare(b))\n          .join('');\n\n        const lastGroup = frameGroups[frameGroups.length - 1];\n\n        if (lastGroup?.key === key) {\n          lastGroup.data.push(value);\n        } else {\n          frameGroups.push({key, data: [value]});\n        }\n      });\n\n    return frameGroups;\n  };\n\n  return (\n    <Fragment>\n      {getFrameGroups().map((group, index) => (\n        <GroupingComponentFrames\n          key={index}\n          items={group.data.map((v, idx) => (\n            <GroupingComponent\n              key={idx}\n              component={v}\n              showNonContributing={showNonContributing}\n            />\n          ))}\n        />\n      ))}\n    </Fragment>\n  );\n};\n\nexport default GroupingComponentStacktrace;\n","import styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\nimport {EventGroupComponent} from 'sentry/types';\n\nimport GroupingComponentChildren from './groupingComponentChildren';\nimport GroupingComponentStacktrace from './groupingComponentStacktrace';\nimport {shouldInlineComponentValue} from './utils';\n\ntype Props = {\n  component: EventGroupComponent;\n  showNonContributing: boolean;\n};\n\nconst GroupingComponent = ({component, showNonContributing}: Props) => {\n  const shouldInlineValue = shouldInlineComponentValue(component);\n\n  const GroupingComponentListItems =\n    component.id === 'stacktrace'\n      ? GroupingComponentStacktrace\n      : GroupingComponentChildren;\n\n  return (\n    <GroupingComponentWrapper isContributing={component.contributes}>\n      <span>\n        {component.name || component.id}\n        {component.hint && <GroupingHint>{` (${component.hint})`}</GroupingHint>}\n      </span>\n\n      <GroupingComponentList isInline={shouldInlineValue}>\n        <GroupingComponentListItems\n          component={component}\n          showNonContributing={showNonContributing}\n        />\n      </GroupingComponentList>\n    </GroupingComponentWrapper>\n  );\n};\n\nconst GroupingComponentList = styled('ul')<{isInline: boolean}>`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  &,\n  & > li {\n    display: ${p => (p.isInline ? 'inline' : 'block')};\n  }\n`;\n\nexport const GroupingComponentListItem = styled('li')<{isCollapsible?: boolean}>`\n  padding: 0;\n  margin: ${space(0.25)} 0 ${space(0.25)} ${space(1.5)};\n\n  ${p =>\n    p.isCollapsible &&\n    `\n    border-left: 1px solid ${p.theme.innerBorder};\n    margin: 0 0 -${space(0.25)} ${space(1)};\n    padding-left: ${space(0.5)};\n  `}\n`;\n\nexport const GroupingValue = styled('code')<{valueType: string}>`\n  display: inline-block;\n  margin: ${space(0.25)} ${space(0.5)} ${space(0.25)} 0;\n  font-size: ${p => p.theme.fontSizeSmall};\n  padding: 0 ${space(0.25)};\n  background: rgba(112, 163, 214, 0.1);\n  color: ${p => p.theme.textColor};\n\n  ${({valueType}) =>\n    (valueType === 'function' || valueType === 'symbol') &&\n    `\n    font-weight: bold;\n    color: ${p => p.theme.textColor};\n  `}\n`;\n\nconst GroupingComponentWrapper = styled('div')<{isContributing: boolean}>`\n  color: ${p => (p.isContributing ? null : p.theme.textColor)};\n\n  ${GroupingValue}, button {\n    opacity: 1;\n  }\n`;\n\nconst GroupingHint = styled('small')`\n  font-size: 0.8em;\n`;\n\nexport default GroupingComponent;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\nimport capitalize from 'lodash/capitalize';\n\nimport KeyValueList from 'sentry/components/events/interfaces/keyValueList';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {SegmentedControl} from 'sentry/components/segmentedControl';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconCheckmark, IconClose} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {\n  EventGroupComponent,\n  EventGroupVariant,\n  EventGroupVariantType,\n} from 'sentry/types';\n\nimport GroupingComponent from './groupingComponent';\nimport {hasNonContributingComponent} from './utils';\n\ntype Props = {\n  showGroupingConfig: boolean;\n  variant: EventGroupVariant;\n};\n\ntype State = {\n  showNonContributing: boolean;\n};\n\ntype VariantData = [string, React.ReactNode][];\n\nfunction addFingerprintInfo(data: VariantData, variant: EventGroupVariant) {\n  if ('matched_rule' in variant) {\n    data.push([\n      t('Fingerprint rule'),\n      <TextWithQuestionTooltip key=\"type\">\n        {variant.matched_rule}\n        <QuestionTooltip\n          size=\"xs\"\n          position=\"top\"\n          title={t('The server-side fingerprinting rule that produced the fingerprint.')}\n        />\n      </TextWithQuestionTooltip>,\n    ]);\n  }\n  if ('values' in variant) {\n    data.push([t('Fingerprint values'), variant.values]);\n  }\n  if ('client_values' in variant) {\n    data.push([\n      t('Client fingerprint values'),\n      <TextWithQuestionTooltip key=\"type\">\n        {variant.client_values}\n        <QuestionTooltip\n          size=\"xs\"\n          position=\"top\"\n          title={t(\n            'The client sent a fingerprint that was overridden by a server-side fingerprinting rule.'\n          )}\n        />\n      </TextWithQuestionTooltip>,\n    ]);\n  }\n}\n\nclass GroupVariant extends Component<Props, State> {\n  state: State = {\n    showNonContributing: false,\n  };\n\n  getVariantData(): [VariantData, EventGroupComponent | undefined] {\n    const {variant, showGroupingConfig} = this.props;\n    const data: VariantData = [];\n    let component: EventGroupComponent | undefined;\n\n    if (!this.state.showNonContributing && variant.hash === null) {\n      return [data, component];\n    }\n\n    if (variant.hash !== null) {\n      data.push([\n        t('Hash'),\n        <TextWithQuestionTooltip key=\"hash\">\n          <Hash>{variant.hash}</Hash>\n          <QuestionTooltip\n            size=\"xs\"\n            position=\"top\"\n            title={t('Events with the same hash are grouped together')}\n          />\n        </TextWithQuestionTooltip>,\n      ]);\n    }\n\n    if (variant.hashMismatch) {\n      data.push([\n        t('Hash mismatch'),\n        t('hashing algorithm produced a hash that does not match the event'),\n      ]);\n    }\n\n    switch (variant.type) {\n      case EventGroupVariantType.COMPONENT:\n        component = variant.component;\n        data.push([\n          t('Type'),\n          <TextWithQuestionTooltip key=\"type\">\n            {variant.type}\n            <QuestionTooltip\n              size=\"xs\"\n              position=\"top\"\n              title={t(\n                'Uses a complex grouping algorithm taking event data into account'\n              )}\n            />\n          </TextWithQuestionTooltip>,\n        ]);\n        if (showGroupingConfig && variant.config?.id) {\n          data.push([t('Grouping Config'), variant.config.id]);\n        }\n        break;\n      case EventGroupVariantType.CUSTOM_FINGERPRINT:\n        data.push([\n          t('Type'),\n          <TextWithQuestionTooltip key=\"type\">\n            {variant.type}\n            <QuestionTooltip\n              size=\"xs\"\n              position=\"top\"\n              title={t('Overrides the default grouping by a custom fingerprinting rule')}\n            />\n          </TextWithQuestionTooltip>,\n        ]);\n        addFingerprintInfo(data, variant);\n        break;\n      case EventGroupVariantType.SALTED_COMPONENT:\n        component = variant.component;\n        data.push([\n          t('Type'),\n          <TextWithQuestionTooltip key=\"type\">\n            {variant.type}\n            <QuestionTooltip\n              size=\"xs\"\n              position=\"top\"\n              title={t(\n                'Uses a complex grouping algorithm taking event data and a fingerprint into account'\n              )}\n            />\n          </TextWithQuestionTooltip>,\n        ]);\n        addFingerprintInfo(data, variant);\n        if (showGroupingConfig && variant.config?.id) {\n          data.push([t('Grouping Config'), variant.config.id]);\n        }\n        break;\n      case EventGroupVariantType.PERFORMANCE_PROBLEM:\n        data.push([\n          t('Type'),\n          <TextWithQuestionTooltip key=\"type\">\n            {variant.type}\n            <QuestionTooltip\n              size=\"xs\"\n              position=\"top\"\n              title={t(\n                'Uses the evidence from performance issue detection to generate a fingerprint.'\n              )}\n            />\n          </TextWithQuestionTooltip>,\n        ]);\n\n        data.push(['Performance Issue Type', variant.key]);\n        data.push(['Span Operation', variant.evidence.op]);\n        data.push(['Parent Span Hashes', variant.evidence.parent_span_hashes]);\n        data.push(['Source Span Hashes', variant.evidence.cause_span_hashes]);\n        data.push([\n          'Offender Span Hashes',\n          [...new Set(variant.evidence.offender_span_hashes)],\n        ]);\n        break;\n      default:\n        break;\n    }\n\n    if (component) {\n      data.push([\n        t('Grouping'),\n        <GroupingTree key={component.id}>\n          <GroupingComponent\n            component={component}\n            showNonContributing={this.state.showNonContributing}\n          />\n        </GroupingTree>,\n      ]);\n    }\n\n    return [data, component];\n  }\n\n  renderTitle() {\n    const {variant} = this.props;\n    const isContributing = variant.hash !== null;\n\n    let title: string;\n    if (isContributing) {\n      title = t('Contributing variant');\n    } else {\n      const hint = 'component' in variant ? variant.component?.hint : undefined;\n      if (hint) {\n        title = t('Non-contributing variant: %s', hint);\n      } else {\n        title = t('Non-contributing variant');\n      }\n    }\n\n    return (\n      <Tooltip title={title}>\n        <VariantTitle>\n          <ContributionIcon isContributing={isContributing} />\n          {t('By')}{' '}\n          {variant.description\n            ?.split(' ')\n            .map(i => capitalize(i))\n            .join(' ') ?? t('Nothing')}\n        </VariantTitle>\n      </Tooltip>\n    );\n  }\n\n  renderContributionToggle() {\n    const {showNonContributing} = this.state;\n\n    return (\n      <SegmentedControl\n        aria-label={t('Filter by contribution')}\n        size=\"xs\"\n        value={showNonContributing ? 'all' : 'relevant'}\n        onChange={key => this.setState({showNonContributing: key === 'all'})}\n      >\n        <SegmentedControl.Item key=\"relevant\">\n          {t('Contributing values')}\n        </SegmentedControl.Item>\n        <SegmentedControl.Item key=\"all\">{t('All values')}</SegmentedControl.Item>\n      </SegmentedControl>\n    );\n  }\n\n  render() {\n    const [data, component] = this.getVariantData();\n\n    return (\n      <VariantWrapper>\n        <Header>\n          {this.renderTitle()}\n          {hasNonContributingComponent(component) && this.renderContributionToggle()}\n        </Header>\n\n        <KeyValueList\n          data={data.map(d => ({\n            key: d[0],\n            subject: d[0],\n            value: d[1],\n          }))}\n          isContextData\n          shouldSort={false}\n        />\n      </VariantWrapper>\n    );\n  }\n}\n\nconst VariantWrapper = styled('div')`\n  margin-bottom: ${space(4)};\n`;\n\nconst Header = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${space(2)};\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    display: block;\n  }\n`;\n\nconst VariantTitle = styled('h5')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin: 0;\n  display: flex;\n  align-items: center;\n`;\n\nconst ContributionIcon = styled(({isContributing, ...p}) =>\n  isContributing ? (\n    <IconCheckmark size=\"sm\" isCircled color=\"successText\" {...p} />\n  ) : (\n    <IconClose size=\"sm\" isCircled color=\"dangerText\" {...p} />\n  )\n)`\n  margin-right: ${space(1)};\n`;\n\nconst GroupingTree = styled('div')`\n  color: ${p => p.theme.textColor};\n`;\n\nconst TextWithQuestionTooltip = styled('div')`\n  display: grid;\n  align-items: center;\n  grid-template-columns: auto 1fr;\n  gap: ${space(0.5)};\n`;\n\nconst Hash = styled('span')`\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    ${p => p.theme.overflowEllipsis};\n    width: 210px;\n  }\n`;\n\nexport default GroupVariant;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {Button} from 'sentry/components/button';\nimport {EventDataSection} from 'sentry/components/events/eventDataSection';\nimport {FeatureFeedback} from 'sentry/components/featureFeedback';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {EventGroupInfo, Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport {groupingFeedbackTypes} from 'sentry/views/issueDetails/grouping/grouping';\n\nimport GroupingConfigSelect from './groupingConfigSelect';\nimport GroupVariant from './groupingVariant';\n\ntype Props = AsyncComponent['props'] & {\n  event: Event;\n  organization: Organization;\n  projectSlug: string;\n  showGroupingConfig: boolean;\n};\n\ntype State = AsyncComponent['state'] & {\n  configOverride: string | null;\n  groupInfo: EventGroupInfo;\n  isOpen: boolean;\n};\n\nclass GroupingInfo extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, event, projectSlug} = this.props;\n\n    let path = `/projects/${organization.slug}/${projectSlug}/events/${event.id}/grouping-info/`;\n    if (this.state?.configOverride) {\n      path = `${path}?config=${this.state.configOverride}`;\n    }\n\n    return [['groupInfo', path]];\n  }\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      isOpen: false,\n      configOverride: null,\n    };\n  }\n\n  toggle = () => {\n    this.setState(state => ({\n      isOpen: !state.isOpen,\n      configOverride: state.isOpen ? null : state.configOverride,\n    }));\n  };\n\n  handleConfigSelect = selection => {\n    this.setState({configOverride: selection.value}, () => this.reloadData());\n  };\n\n  renderGroupInfoSummary() {\n    const {groupInfo} = this.state;\n\n    if (!groupInfo) {\n      return null;\n    }\n\n    const groupedBy = Object.values(groupInfo)\n      .filter(variant => variant.hash !== null && variant.description !== null)\n      .map(variant => variant.description)\n      .sort((a, b) => a!.toLowerCase().localeCompare(b!.toLowerCase()))\n      .join(', ');\n\n    return (\n      <p data-test-id=\"loaded-grouping-info\">\n        <strong>{t('Grouped by:')}</strong> {groupedBy || t('nothing')}\n      </p>\n    );\n  }\n\n  renderGroupConfigSelect() {\n    const {configOverride} = this.state;\n    const {event} = this.props;\n\n    if (!event.groupingConfig) {\n      return null;\n    }\n\n    const configId = configOverride ?? event.groupingConfig?.id;\n\n    return (\n      <GroupingConfigSelect\n        eventConfigId={event.groupingConfig.id}\n        configId={configId}\n        onSelect={this.handleConfigSelect}\n      />\n    );\n  }\n\n  renderGroupInfo() {\n    const {groupInfo, loading} = this.state;\n    const {showGroupingConfig} = this.props;\n\n    const variants = groupInfo\n      ? Object.values(groupInfo).sort((a, b) =>\n          a.hash && !b.hash\n            ? -1\n            : a.description\n                ?.toLowerCase()\n                .localeCompare(b.description?.toLowerCase() ?? '') ?? 1\n        )\n      : [];\n\n    return (\n      <Fragment>\n        <ConfigHeader>\n          <div>{showGroupingConfig && this.renderGroupConfigSelect()}</div>\n          <FeatureFeedback\n            featureName=\"grouping\"\n            feedbackTypes={groupingFeedbackTypes}\n            buttonProps={{size: 'sm'}}\n          />\n        </ConfigHeader>\n\n        {loading ? (\n          <LoadingIndicator />\n        ) : (\n          variants.map((variant, index) => (\n            <Fragment key={variant.key}>\n              <GroupVariant variant={variant} showGroupingConfig={showGroupingConfig} />\n              {index < variants.length - 1 && <VariantDivider />}\n            </Fragment>\n          ))\n        )}\n      </Fragment>\n    );\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody() {\n    const {isOpen} = this.state;\n\n    return (\n      <EventDataSection\n        type=\"grouping-info\"\n        title={t('Event Grouping Information')}\n        actions={\n          <ToggleButton onClick={this.toggle} priority=\"link\">\n            {isOpen ? t('Hide Details') : t('Show Details')}\n          </ToggleButton>\n        }\n      >\n        {isOpen ? this.renderGroupInfo() : this.renderGroupInfoSummary()}\n      </EventDataSection>\n    );\n  }\n}\n\nconst ConfigHeader = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: ${space(1)};\n  margin-bottom: ${space(2)};\n`;\n\nconst ToggleButton = styled(Button)`\n  font-weight: 700;\n  color: ${p => p.theme.subText};\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nexport const GroupingConfigItem = styled('span')<{\n  isActive?: boolean;\n  isHidden?: boolean;\n}>`\n  font-family: ${p => p.theme.text.familyMono};\n  opacity: ${p => (p.isHidden ? 0.5 : null)};\n  font-weight: ${p => (p.isActive ? 'bold' : null)};\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst VariantDivider = styled('hr')`\n  padding-top: ${space(1)};\n  border-top: 1px solid ${p => p.theme.border};\n`;\n\nexport const EventGroupingInfo = withOrganization(GroupingInfo);\n"],"names":["GroupingConfigSelect","AsyncComponent","getDefaultState","super","configs","getEndpoints","renderLoading","this","renderBody","configId","eventConfigId","onSelect","props","state","options","map","id","hidden","value","label","GroupingConfigItem","isHidden","isActive","items","isOpen","title","t","StyledDropdownButton","size","DropdownButton","hasNonContributingComponent","component","undefined","contributes","values","isObject","groupingComponentFilter","showNonContributing","hint","length","GroupingComponentChildren","Fragment","filter","idx","GroupingComponentListItem","GroupingValue","valueType","name","JSON","stringify","GroupingComponentFrames","Component","collapsed","render","maxVisibleItems","isCollapsible","item","index","ToggleCollapse","priority","icon","legacySize","onClick","setState","tct","numberOfFrames","Button","space","p","theme","linkColor","GroupingComponentStacktrace","frameGroups","forEach","key","v","sort","a","b","localeCompare","join","lastGroup","data","push","getFrameGroups","group","GroupingComponent","shouldInlineValue","every","shouldInlineComponentValue","GroupingComponentListItems","GroupingComponentWrapper","isContributing","GroupingHint","GroupingComponentList","isInline","innerBorder","fontSizeSmall","textColor","addFingerprintInfo","variant","TextWithQuestionTooltip","matched_rule","position","client_values","GroupVariant","getVariantData","showGroupingConfig","hash","Hash","hashMismatch","type","EventGroupVariantType","config","evidence","op","parent_span_hashes","cause_span_hashes","Set","offender_span_hashes","GroupingTree","renderTitle","VariantTitle","ContributionIcon","description","split","i","capitalize","renderContributionToggle","onChange","VariantWrapper","Header","d","subject","isContextData","shouldSort","breakpoints","small","fontSizeMedium","isCircled","color","overflowEllipsis","GroupingInfo","configOverride","selection","reloadData","organization","event","projectSlug","path","slug","renderGroupInfoSummary","groupInfo","groupedBy","Object","toLowerCase","renderGroupConfigSelect","groupingConfig","handleConfigSelect","renderGroupInfo","loading","variants","ConfigHeader","featureName","feedbackTypes","groupingFeedbackTypes","buttonProps","VariantDivider","actions","ToggleButton","toggle","subText","text","familyMono","border","EventGroupingInfo","withOrganization"],"sourceRoot":""}