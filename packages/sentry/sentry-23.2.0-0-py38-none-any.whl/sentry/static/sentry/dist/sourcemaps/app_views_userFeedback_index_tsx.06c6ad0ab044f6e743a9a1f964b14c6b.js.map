{"version":3,"file":"chunks/app_views_userFeedback_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/errorLevel.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/components/issues/compactIssue.tsx","webpack:///./app/views/userFeedback/utils.tsx","webpack:///./app/views/userFeedback/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {Level} from 'sentry/types';\n\nconst DEFAULT_SIZE = '13px';\n\ntype Props = {\n  level?: Level;\n  size?: string;\n};\n\nconst ErrorLevel = styled('span')<Props>`\n  padding: 0;\n  position: relative;\n  width: ${p => p.size || DEFAULT_SIZE};\n  height: ${p => p.size || DEFAULT_SIZE};\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n  background-color: ${p => (p.level ? p.theme.level[p.level] : p.theme.level.error)};\n`;\n\nexport default ErrorLevel;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {bulkUpdate} from 'sentry/actionCreators/group';\nimport {addLoadingMessage, clearIndicators} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport EventOrGroupTitle from 'sentry/components/eventOrGroupTitle';\nimport ErrorLevel from 'sentry/components/events/errorLevel';\nimport Link from 'sentry/components/links/link';\nimport {PanelItem} from 'sentry/components/panels';\nimport {IconChat, IconMute, IconStar} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport GroupStore from 'sentry/stores/groupStore';\nimport {space} from 'sentry/styles/space';\nimport {BaseGroup, Organization} from 'sentry/types';\nimport {getMessage} from 'sentry/utils/events';\nimport {Aliases} from 'sentry/utils/theme';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype HeaderProps = {\n  data: BaseGroup;\n  organization: Organization;\n  eventId?: string;\n};\n\nfunction CompactIssueHeader({data, organization, eventId}: HeaderProps) {\n  const basePath = `/organizations/${organization.slug}/issues/`;\n\n  const issueLink = eventId\n    ? `${basePath}${data.id}/events/${eventId}/?referrer=compact-issue`\n    : `${basePath}${data.id}/?referrer=compact-issue`;\n\n  const commentColor: keyof Aliases =\n    data.subscriptionDetails && data.subscriptionDetails.reason === 'mentioned'\n      ? 'success'\n      : 'textColor';\n\n  return (\n    <Fragment>\n      <IssueHeaderMetaWrapper>\n        <StyledErrorLevel size=\"12px\" level={data.level} title={data.level} />\n        <h3 className=\"truncate\">\n          <IconLink to={issueLink || ''}>\n            {data.status === 'ignored' && <IconMute size=\"xs\" />}\n            {data.isBookmarked && <IconStar isSolid size=\"xs\" />}\n            <EventOrGroupTitle data={data} />\n          </IconLink>\n        </h3>\n      </IssueHeaderMetaWrapper>\n      <div className=\"event-extra\">\n        <span className=\"project-name\">\n          <strong>{data.project.slug}</strong>\n        </span>\n        {data.numComments !== 0 && (\n          <span>\n            <IconLink to={`${basePath}${data.id}/activity/`} className=\"comments\">\n              <IconChat size=\"xs\" color={commentColor} />\n              <span className=\"tag-count\">{data.numComments}</span>\n            </IconLink>\n          </span>\n        )}\n        <span className=\"culprit\">{getMessage(data)}</span>\n      </div>\n    </Fragment>\n  );\n}\n\ntype GroupTypes = ReturnType<typeof GroupStore.get>;\n\n/**\n * Type assertion to disambiguate GroupTypes\n *\n * The GroupCollapseRelease type isn't compatible with BaseGroup\n */\nfunction isGroup(maybe: GroupTypes): maybe is BaseGroup {\n  return (maybe as BaseGroup).status !== undefined;\n}\n\ntype Props = {\n  api: Client;\n  id: string;\n  organization: Organization;\n  data?: BaseGroup;\n  eventId?: string;\n};\n\ntype State = {\n  issue?: GroupTypes;\n};\n\nclass CompactIssue extends Component<Props, State> {\n  state: State = {\n    issue: this.props.data || GroupStore.get(this.props.id),\n  };\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.id !== this.props.id) {\n      this.setState({\n        issue: GroupStore.get(this.props.id),\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  listener = GroupStore.listen(\n    (itemIds: Set<string>) => this.onGroupChange(itemIds),\n    undefined\n  );\n\n  onGroupChange(itemIds: Set<string>) {\n    if (!itemIds.has(this.props.id)) {\n      return;\n    }\n    const id = this.props.id;\n    const issue = GroupStore.get(id);\n    this.setState({\n      issue,\n    });\n  }\n\n  onUpdate(data: Record<string, string>) {\n    const issue = this.state.issue;\n    if (!issue) {\n      return;\n    }\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    bulkUpdate(\n      this.props.api,\n      {\n        orgId: this.props.organization.slug,\n        projectId: issue.project.slug,\n        itemIds: [issue.id],\n        data,\n      },\n      {\n        complete: () => {\n          clearIndicators();\n        },\n      }\n    );\n  }\n\n  render() {\n    const issue = this.state.issue;\n    const {organization} = this.props;\n    if (!isGroup(issue)) {\n      return null;\n    }\n\n    let className = 'issue';\n    if (issue.isBookmarked) {\n      className += ' isBookmarked';\n    }\n    if (issue.hasSeen) {\n      className += ' hasSeen';\n    }\n    if (issue.status === 'resolved') {\n      className += ' isResolved';\n    }\n    if (issue.status === 'ignored') {\n      className += ' isIgnored';\n    }\n\n    return (\n      <IssueRow className={className}>\n        <CompactIssueHeader\n          data={issue}\n          organization={organization}\n          eventId={this.props.eventId}\n        />\n        {this.props.children}\n      </IssueRow>\n    );\n  }\n}\n\nexport default withApi(withOrganization(CompactIssue));\n\nconst IssueHeaderMetaWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledErrorLevel = styled(ErrorLevel)`\n  display: block;\n  margin-right: ${space(1)};\n`;\n\nconst IconLink = styled(Link)`\n  & > svg {\n    margin-right: ${space(0.5)};\n  }\n`;\n\nconst IssueRow = styled(PanelItem)`\n  padding-top: ${space(1.5)};\n  padding-bottom: ${space(0.75)};\n  flex-direction: column;\n`;\n","import pick from 'lodash/pick';\nimport * as qs from 'query-string';\n\nimport {URL_PARAM} from 'sentry/constants/pageFilters';\n\nconst DEFAULT_STATUS = 'unresolved';\n\n/**\n * Get query for API given the current location.search string\n */\nexport function getQuery(search: string) {\n  const query = qs.parse(search);\n\n  const status = typeof query.status !== 'undefined' ? query.status : DEFAULT_STATUS;\n\n  const queryParams = {\n    status,\n    ...pick(query, ['cursor', ...Object.values(URL_PARAM)]),\n  };\n\n  return queryParams;\n}\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {withProfiler} from '@sentry/react';\nimport omit from 'lodash/omit';\n\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport {EventUserFeedback} from 'sentry/components/events/userFeedback';\nimport CompactIssue from 'sentry/components/issues/compactIssue';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport {PageHeadingQuestionTooltip} from 'sentry/components/pageHeadingQuestionTooltip';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel} from 'sentry/components/panels';\nimport ProjectPageFilter from 'sentry/components/projectPageFilter';\nimport {SegmentedControl} from 'sentry/components/segmentedControl';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, UserReport} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport {UserFeedbackEmpty} from './userFeedbackEmpty';\nimport {getQuery} from './utils';\n\ntype State = AsyncView['state'] & {\n  reportList: UserReport[];\n};\n\ntype Props = RouteComponentProps<{}, {}> & {\n  organization: Organization;\n};\n\nclass OrganizationUserFeedback extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {\n      organization,\n      location: {search},\n    } = this.props;\n\n    return [\n      [\n        'reportList',\n        `/organizations/${organization.slug}/user-feedback/`,\n        {\n          query: getQuery(search),\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    return `${t('User Feedback')} - ${this.props.organization.slug}`;\n  }\n\n  get projectIds() {\n    const {project} = this.props.location.query;\n\n    return Array.isArray(project)\n      ? project\n      : typeof project === 'string'\n      ? [project]\n      : [];\n  }\n\n  renderResults() {\n    const {organization} = this.props;\n\n    return (\n      <Panel className=\"issue-list\" data-test-id=\"user-feedback-list\">\n        {this.state.reportList.map(item => {\n          const issue = item.issue;\n          return (\n            <CompactIssue key={item.id} id={issue.id} data={issue} eventId={item.eventID}>\n              <StyledEventUserFeedback\n                report={item}\n                orgId={organization.slug}\n                issueId={issue.id}\n              />\n            </CompactIssue>\n          );\n        })}\n      </Panel>\n    );\n  }\n\n  renderEmpty() {\n    return <UserFeedbackEmpty projectIds={this.projectIds} />;\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderStreamBody() {\n    const {loading, reportList} = this.state;\n\n    if (loading) {\n      return (\n        <Panel>\n          <LoadingIndicator />\n        </Panel>\n      );\n    }\n\n    if (!reportList.length) {\n      return this.renderEmpty();\n    }\n\n    return this.renderResults();\n  }\n\n  renderBody() {\n    const {organization, router} = this.props;\n    const {location} = this.props;\n    const {pathname, search, query} = location;\n    const {status} = getQuery(search);\n    const {reportListPageLinks} = this.state;\n\n    const unresolvedQuery = omit(query, 'status');\n    const allIssuesQuery = {...query, status: ''};\n\n    return (\n      <PageFiltersContainer>\n        <NoProjectMessage organization={organization}>\n          <Layout.Header>\n            <Layout.HeaderContent>\n              <Layout.Title>\n                {t('User Feedback')}\n                <PageHeadingQuestionTooltip\n                  docsUrl=\"https://docs.sentry.io/product/user-feedback/\"\n                  title={t(\n                    'Feedback submitted by users who experienced an error while using your application, including their name, email address, and any additional comments.'\n                  )}\n                />\n              </Layout.Title>\n            </Layout.HeaderContent>\n          </Layout.Header>\n          <Layout.Body data-test-id=\"user-feedback\">\n            <Layout.Main fullWidth>\n              <Filters>\n                <PageFilterBar>\n                  <ProjectPageFilter />\n                  <EnvironmentPageFilter />\n                  <DatePageFilter alignDropdown=\"right\" />\n                </PageFilterBar>\n                <SegmentedControl\n                  aria-label={t('Issue Status')}\n                  value={!Array.isArray(status) ? status || '' : ''}\n                  onChange={key =>\n                    router.replace({\n                      pathname,\n                      query: key === 'unresolved' ? unresolvedQuery : allIssuesQuery,\n                    })\n                  }\n                >\n                  <SegmentedControl.Item key=\"unresolved\">\n                    {t('Unresolved')}\n                  </SegmentedControl.Item>\n                  <SegmentedControl.Item key=\"\">{t('All Issues')}</SegmentedControl.Item>\n                </SegmentedControl>\n              </Filters>\n              {this.renderStreamBody()}\n              <Pagination pageLinks={reportListPageLinks} />\n            </Layout.Main>\n          </Layout.Body>\n        </NoProjectMessage>\n      </PageFiltersContainer>\n    );\n  }\n}\n\nexport default withOrganization(withProfiler(OrganizationUserFeedback));\n\nconst Filters = styled('div')`\n  display: grid;\n  grid-template-columns: minmax(0, max-content) max-content;\n  justify-content: start;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    grid-template-columns: minmax(0, 1fr) max-content;\n  }\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: minmax(0, 1fr);\n  }\n`;\n\nconst StyledEventUserFeedback = styled(EventUserFeedback)`\n  margin: ${space(2)} 0;\n`;\n"],"names":["DEFAULT_SIZE","p","size","level","theme","error","AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","CompactIssueHeader","data","organization","eventId","basePath","slug","issueLink","id","commentColor","subscriptionDetails","reason","Fragment","IssueHeaderMetaWrapper","StyledErrorLevel","className","IconLink","to","status","isBookmarked","isSolid","project","numComments","color","getMessage","CompactIssue","Component","issue","props","GroupStore","itemIds","onGroupChange","undefined","componentWillReceiveProps","nextProps","setState","componentWillUnmount","listener","has","onUpdate","state","addLoadingMessage","t","bulkUpdate","api","orgId","projectId","complete","clearIndicators","hasSeen","IssueRow","children","withApi","withOrganization","ErrorLevel","space","Link","PanelItem","getQuery","search","query","qs","pick","Object","values","URL_PARAM","OrganizationUserFeedback","getEndpoints","location","projectIds","Array","isArray","renderResults","reportList","map","item","eventID","StyledEventUserFeedback","report","issueId","renderEmpty","renderLoading","renderBody","renderStreamBody","loading","length","router","pathname","reportListPageLinks","unresolvedQuery","omit","allIssuesQuery","docsUrl","fullWidth","Filters","alignDropdown","value","onChange","key","replace","pageLinks","withProfiler","breakpoints","medium","small","EventUserFeedback"],"sourceRoot":""}