{"version":3,"file":"chunks/app_views_settings_organizationDeveloperSettings_subscriptionBox_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"oQAAO,MAAMA,EAAgB,CAAC,QAAS,QAAS,WAEnCC,EAAe,CAC1BC,MAAO,uCACPC,MAAO,UACPC,QAAS,4BAGEC,EAAkB,CAC7BH,MAAO,QACPC,MAAO,QACPC,QAAS,Q,knBCgBX,SAASE,EAAgB,GAQf,IARe,QACvBC,EAAO,wBACPC,EAAuB,MACvBC,EAAK,SACLC,EAAQ,aACRC,EAAY,SACZC,EAAQ,gBACRC,GAAkB,GACZ,EACN,MAAM,SAACC,GAAYH,EAEnB,IAAII,EAAWP,GAA2BK,EACtCG,GAAUC,EAAAA,EAAAA,GACZ,uDACAZ,EAAAA,GAAgBO,IAclB,MAXiB,UAAbA,GAAyBE,EAASI,SAAS,8BAC7CH,GAAW,EACXC,GAAUC,EAAAA,EAAAA,GACR,+EAIAJ,IACFG,GAAUC,EAAAA,EAAAA,GAAE,yEAIZ,QAAC,IAAO,CAACF,UAAWA,EAAUI,MAAOH,EAAQ,UAC3C,QAACI,EAAoB,CAACL,SAAUA,EAAS,WACvC,QAACM,EAAgB,YACf,QAACC,EAAiB,WACfV,EACAH,IAAS,QAAC,IAAY,CAACc,KAAK,YAE/B,QAACC,EAAuB,UAAEvB,EAAAA,GAAaW,SAEzC,QAAC,IAAQ,CAEP,aAAYA,EACZG,SAAUA,EACVU,GAAIb,EACJc,MAAOd,EACPL,QAASA,EACTG,SAAUiB,GAAOjB,EAASE,EAAUe,EAAIC,OAAOrB,UANzC,GAAEK,IAAWL,SAV0BK,EAqBvD,CAlDSN,EAAe,8BAoDxB,SAAeuB,EAAAA,EAAAA,GAAiBvB,GAE1Bc,GAAuB,OAAO,MAAK,qBAAZ,CAAa,0DAG1BU,GAAKA,EAAEC,MAAMC,qBAAmB,aACnCF,GAAMA,EAAEf,SAAW,GAAM,GAAE,mBACrBe,GAAKA,EAAEC,MAAME,cAAY,YAChCC,EAAAA,EAAAA,GAAM,KAAI,aACTA,EAAAA,EAAAA,GAAM,KAAI,2BAIjBb,GAAmB,OAAO,MAAK,qBAAZ,CAAa,gFAMhCG,GAA0B,OAAO,MAAK,qBAAZ,CAAa,cAC9BM,GAAKA,EAAEC,MAAMI,gBAAc,yBAE/BL,GAAKA,EAAEC,MAAMK,SAAO,KAGzBd,GAAoB,OAAO,MAAK,qBAAZ,CAAa,cACxBQ,GAAKA,EAAEC,MAAMM,eAAa,yBAE9BP,GAAKA,EAAEC,MAAMO,WAAS,sCAEdJ,EAAAA,EAAAA,GAAM,KAAK,I","sources":["webpack:///./app/views/settings/organizationDeveloperSettings/constants.tsx","webpack:///./app/views/settings/organizationDeveloperSettings/subscriptionBox.tsx"],"sourcesContent":["export const EVENT_CHOICES = ['issue', 'error', 'comment'] as const;\n\nexport const DESCRIPTIONS = {\n  issue: 'created, resolved, assigned, ignored',\n  error: 'created',\n  comment: 'created, edited, deleted',\n} as const;\n\nexport const PERMISSIONS_MAP = {\n  issue: 'Event',\n  error: 'Event',\n  comment: 'Event',\n} as const;\n","import styled from '@emotion/styled';\n\nimport Checkbox from 'sentry/components/checkbox';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport {\n  DESCRIPTIONS,\n  EVENT_CHOICES,\n  PERMISSIONS_MAP,\n} from 'sentry/views/settings/organizationDeveloperSettings/constants';\n\ntype Resource = (typeof EVENT_CHOICES)[number];\n\ntype Props = {\n  checked: boolean;\n  disabledFromPermissions: boolean;\n  isNew: boolean;\n  onChange: (resource: Resource, checked: boolean) => void;\n  organization: Organization;\n  resource: Resource;\n  webhookDisabled?: boolean;\n};\n\nfunction SubscriptionBox({\n  checked,\n  disabledFromPermissions,\n  isNew,\n  onChange,\n  organization,\n  resource,\n  webhookDisabled = false,\n}: Props) {\n  const {features} = organization;\n\n  let disabled = disabledFromPermissions || webhookDisabled;\n  let message = t(\n    \"Must have at least 'Read' permissions enabled for %s\",\n    PERMISSIONS_MAP[resource]\n  );\n\n  if (resource === 'error' && !features.includes('integrations-event-hooks')) {\n    disabled = true;\n    message = t(\n      'Your organization does not have access to the error subscription resource.'\n    );\n  }\n\n  if (webhookDisabled) {\n    message = t('Cannot enable webhook subscription without specifying a webhook url');\n  }\n\n  return (\n    <Tooltip disabled={!disabled} title={message} key={resource}>\n      <SubscriptionGridItem disabled={disabled}>\n        <SubscriptionInfo>\n          <SubscriptionTitle>\n            {resource}\n            {isNew && <FeatureBadge type=\"new\" />}\n          </SubscriptionTitle>\n          <SubscriptionDescription>{DESCRIPTIONS[resource]}</SubscriptionDescription>\n        </SubscriptionInfo>\n        <Checkbox\n          key={`${resource}${checked}`}\n          aria-label={resource}\n          disabled={disabled}\n          id={resource}\n          value={resource}\n          checked={checked}\n          onChange={evt => onChange(resource, evt.target.checked)}\n        />\n      </SubscriptionGridItem>\n    </Tooltip>\n  );\n}\n\nexport default withOrganization(SubscriptionBox);\n\nconst SubscriptionGridItem = styled('div')<{disabled: boolean}>`\n  display: flex;\n  justify-content: space-between;\n  background: ${p => p.theme.backgroundSecondary};\n  opacity: ${p => (p.disabled ? 0.3 : 1)};\n  border-radius: ${p => p.theme.borderRadius};\n  margin: ${space(1.5)};\n  padding: ${space(1.5)};\n  box-sizing: border-box;\n`;\n\nconst SubscriptionInfo = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-self: center;\n`;\n\nconst SubscriptionDescription = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  line-height: 1;\n  color: ${p => p.theme.gray300};\n`;\n\nconst SubscriptionTitle = styled('div')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  line-height: 1;\n  color: ${p => p.theme.textColor};\n  white-space: nowrap;\n  margin-bottom: ${space(0.75)};\n`;\n"],"names":["EVENT_CHOICES","DESCRIPTIONS","issue","error","comment","PERMISSIONS_MAP","SubscriptionBox","checked","disabledFromPermissions","isNew","onChange","organization","resource","webhookDisabled","features","disabled","message","t","includes","title","SubscriptionGridItem","SubscriptionInfo","SubscriptionTitle","type","SubscriptionDescription","id","value","evt","target","withOrganization","p","theme","backgroundSecondary","borderRadius","space","fontSizeMedium","gray300","fontSizeLarge","textColor"],"sourceRoot":""}