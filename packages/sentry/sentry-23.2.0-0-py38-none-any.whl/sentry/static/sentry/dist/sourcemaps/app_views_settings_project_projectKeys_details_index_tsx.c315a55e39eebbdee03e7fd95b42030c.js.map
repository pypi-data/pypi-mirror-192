{"version":3,"file":"chunks/app_views_settings_project_projectKeys_details_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/project/projectKeys/details/keyRateLimitsForm.tsx","webpack:///./app/views/settings/project/projectKeys/details/keySettings.tsx","webpack:///./app/views/settings/project/projectKeys/details/keyStats.tsx","webpack:///./app/views/settings/project/projectKeys/details/index.tsx","webpack:///./app/views/settings/project/projectKeys/projectKeyCredentials.tsx"],"sourcesContent":["import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import Access from 'sentry/components/acl/access';\nimport {Alert} from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert data-test-id=\"project-permission-alert\" type=\"warning\" {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport sortBy from 'lodash/sortBy';\n\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport RangeSlider from 'sentry/components/forms/controls/rangeSlider';\nimport Form from 'sentry/components/forms/form';\nimport FormField from 'sentry/components/forms/formField';\nimport InputControl from 'sentry/components/input';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t, tct, tn} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {getExactDuration} from 'sentry/utils/formatters';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\nconst PREDEFINED_RATE_LIMIT_VALUES = [\n  0, 60, 300, 900, 3600, 7200, 14400, 21600, 43200, 86400,\n];\n\ntype RateLimitValue = {\n  count: number;\n  window: number;\n};\n\ntype Props = {\n  data: ProjectKey;\n  disabled: boolean;\n  organization: Organization;\n} & Pick<\n  RouteComponentProps<\n    {\n      keyId: string;\n      projectId: string;\n    },\n    {}\n  >,\n  'params'\n>;\n\nfunction KeyRateLimitsForm({data, disabled, organization, params}: Props) {\n  function handleChangeWindow(\n    onChange: (value: RateLimitValue, event: React.ChangeEvent<HTMLInputElement>) => void,\n    onBlur: (value: RateLimitValue, event: React.ChangeEvent<HTMLInputElement>) => void,\n    currentValueObj: RateLimitValue,\n    value: number,\n    event: React.ChangeEvent<HTMLInputElement>\n  ) {\n    const valueObj = {...currentValueObj, window: value};\n\n    onChange(valueObj, event);\n    onBlur(valueObj, event);\n  }\n\n  function handleChangeCount(\n    callback: (value: RateLimitValue, event: React.ChangeEvent<HTMLInputElement>) => void,\n    value: RateLimitValue,\n    event: React.ChangeEvent<HTMLInputElement>\n  ) {\n    const valueObj = {\n      ...value,\n      count: Number(event.target.value),\n    };\n\n    callback(valueObj, event);\n  }\n\n  function getAllowedRateLimitValues(currentRateLimit?: number) {\n    const {rateLimit} = data;\n    const {window} = rateLimit ?? {};\n\n    // The slider should display other values if they are set via the API, but still offer to select only the predefined values\n    if (defined(window)) {\n      // If the API returns a value not found in the predefined values and the user selects another value through the UI,\n      // he will no longer be able to reselect the \"custom\" value in the slider\n      if (currentRateLimit !== window) {\n        return PREDEFINED_RATE_LIMIT_VALUES;\n      }\n\n      // If the API returns a value not found in the predefined values, that value will be added to the slider\n      if (!PREDEFINED_RATE_LIMIT_VALUES.includes(window)) {\n        return sortBy([...PREDEFINED_RATE_LIMIT_VALUES, window]);\n      }\n    }\n\n    return PREDEFINED_RATE_LIMIT_VALUES;\n  }\n\n  const {keyId, projectId} = params;\n  const apiEndpoint = `/projects/${organization.slug}/${projectId}/keys/${keyId}/`;\n\n  const disabledAlert = ({features}) => (\n    <FeatureDisabled\n      alert={PanelAlert}\n      features={features}\n      featureName={t('Key Rate Limits')}\n    />\n  );\n\n  return (\n    <Form saveOnBlur apiEndpoint={apiEndpoint} apiMethod=\"PUT\" initialData={data}>\n      <Feature\n        features={['projects:rate-limits']}\n        hookName=\"feature-disabled:rate-limits\"\n        renderDisabled={({children, ...props}) =>\n          typeof children === 'function' &&\n          children({...props, renderDisabled: disabledAlert})\n        }\n      >\n        {({hasFeature, features, project, renderDisabled}) => (\n          <Panel>\n            <PanelHeader>{t('Rate Limits')}</PanelHeader>\n\n            <PanelBody>\n              <PanelAlert type=\"info\" showIcon>\n                {t(\n                  `Rate limits provide a flexible way to manage your error\n                    volume. If you have a noisy project or environment you\n                    can configure a rate limit for this key to reduce the\n                    number of errors processed. To manage your transaction\n                    volume, we recommend adjusting your sample rate in your\n                    SDK configuration.`\n                )}\n              </PanelAlert>\n              {!hasFeature &&\n                typeof renderDisabled === 'function' &&\n                renderDisabled({\n                  organization,\n                  project,\n                  features,\n                  hasFeature,\n                  children: null,\n                })}\n              <FormField\n                name=\"rateLimit\"\n                label={t('Rate Limit')}\n                disabled={disabled || !hasFeature}\n                validate={({form}) => {\n                  // TODO(TS): is validate actually doing anything because it's an unexpected prop\n                  const isValid =\n                    form &&\n                    form.rateLimit &&\n                    typeof form.rateLimit.count !== 'undefined' &&\n                    typeof form.rateLimit.window !== 'undefined';\n\n                  if (isValid) {\n                    return [];\n                  }\n\n                  return [['rateLimit', t('Fill in both fields first')]];\n                }}\n                formatMessageValue={({count, window}: RateLimitValue) =>\n                  tct('[errors] in [timeWindow]', {\n                    errors: tn('%s error ', '%s errors ', count),\n                    timeWindow:\n                      window === 0 ? t('no time window') : getExactDuration(window),\n                  })\n                }\n                help={t(\n                  'Apply a rate limit to this credential to cap the amount of errors accepted during a time window.'\n                )}\n                inline={false}\n              >\n                {({onChange, onBlur, value}) => {\n                  const window = typeof value === 'object' ? value.window : undefined;\n                  return (\n                    <RateLimitRow>\n                      <InputControl\n                        type=\"number\"\n                        name=\"rateLimit.count\"\n                        min={0}\n                        value={typeof value === 'object' ? value.count : undefined}\n                        placeholder={t('Count')}\n                        disabled={disabled || !hasFeature}\n                        onChange={event => handleChangeCount(onChange, value, event)}\n                        onBlur={event => handleChangeCount(onBlur, value, event)}\n                      />\n                      <EventsIn>{t('event(s) in')}</EventsIn>\n                      <RangeSlider\n                        name=\"rateLimit.window\"\n                        allowedValues={getAllowedRateLimitValues(window)}\n                        value={window}\n                        placeholder={t('Window')}\n                        formatLabel={rangeValue => {\n                          if (typeof rangeValue === 'number') {\n                            if (rangeValue === 0) {\n                              return t('None');\n                            }\n                            return getExactDuration(rangeValue);\n                          }\n                          return undefined;\n                        }}\n                        disabled={disabled || !hasFeature}\n                        onChange={(rangeValue, event) =>\n                          handleChangeWindow(\n                            onChange,\n                            onBlur,\n                            value,\n                            Number(rangeValue),\n                            event\n                          )\n                        }\n                      />\n                    </RateLimitRow>\n                  );\n                }}\n              </FormField>\n            </PanelBody>\n          </Panel>\n        )}\n      </Feature>\n    </Form>\n  );\n}\n\nexport default KeyRateLimitsForm;\n\nconst RateLimitRow = styled('div')`\n  display: grid;\n  grid-template-columns: 2fr 1fr 2fr;\n  align-items: center;\n  gap: ${space(1)};\n`;\n\nconst EventsIn = styled('small')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  text-align: center;\n  white-space: nowrap;\n`;\n","import {Component, Fragment} from 'react';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Access from 'sentry/components/acl/access';\nimport {Button} from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport DateTime from 'sentry/components/dateTime';\nimport FieldGroup from 'sentry/components/forms/fieldGroup';\nimport BooleanField from 'sentry/components/forms/fields/booleanField';\nimport SelectField from 'sentry/components/forms/fields/selectField';\nimport TextField from 'sentry/components/forms/fields/textField';\nimport Form from 'sentry/components/forms/form';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {t, tct} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport KeyRateLimitsForm from 'sentry/views/settings/project/projectKeys/details/keyRateLimitsForm';\nimport ProjectKeyCredentials from 'sentry/views/settings/project/projectKeys/projectKeyCredentials';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  api: Client;\n  data: ProjectKey;\n  onRemove: () => void;\n  organization: Organization;\n  params: {\n    keyId: string;\n    projectId: string;\n  };\n};\n\ntype State = {\n  error: boolean;\n  loading: boolean;\n};\n\nclass KeySettings extends Component<Props, State> {\n  state: State = {\n    loading: false,\n    error: false,\n  };\n\n  handleRemove = async () => {\n    if (this.state.loading) {\n      return;\n    }\n\n    addLoadingMessage(t('Revoking key\\u2026'));\n    const {api, organization, onRemove, params} = this.props;\n    const {keyId, projectId} = params;\n\n    try {\n      await api.requestPromise(\n        `/projects/${organization.slug}/${projectId}/keys/${keyId}/`,\n        {\n          method: 'DELETE',\n        }\n      );\n\n      onRemove();\n      addSuccessMessage(t('Revoked key'));\n    } catch (_err) {\n      this.setState({\n        error: true,\n        loading: false,\n      });\n      addErrorMessage(t('Unable to revoke key'));\n    }\n  };\n\n  render() {\n    const {keyId, projectId} = this.props.params;\n    const {data, organization} = this.props;\n    const apiEndpoint = `/projects/${organization.slug}/${projectId}/keys/${keyId}/`;\n    const loaderLink = getDynamicText({\n      value: data.dsn.cdn,\n      fixed: '__JS_SDK_LOADER_URL__',\n    });\n\n    return (\n      <Access access={['project:write']}>\n        {({hasAccess}) => (\n          <Fragment>\n            <Form\n              saveOnBlur\n              allowUndo\n              apiEndpoint={apiEndpoint}\n              apiMethod=\"PUT\"\n              initialData={data}\n            >\n              <Panel>\n                <PanelHeader>{t('Details')}</PanelHeader>\n\n                <PanelBody>\n                  <TextField\n                    name=\"name\"\n                    label={t('Name')}\n                    disabled={!hasAccess}\n                    required={false}\n                    maxLength={64}\n                  />\n                  <BooleanField\n                    name=\"isActive\"\n                    label={t('Enabled')}\n                    required={false}\n                    disabled={!hasAccess}\n                    help=\"Accept events from this key? This may be used to temporarily suspend a key.\"\n                  />\n                  <FieldGroup label={t('Created')}>\n                    <div className=\"controls\">\n                      <DateTime date={data.dateCreated} />\n                    </div>\n                  </FieldGroup>\n                </PanelBody>\n              </Panel>\n            </Form>\n\n            <KeyRateLimitsForm\n              organization={organization}\n              params={this.props.params}\n              data={data}\n              disabled={!hasAccess}\n            />\n\n            <Form saveOnBlur apiEndpoint={apiEndpoint} apiMethod=\"PUT\" initialData={data}>\n              <Panel>\n                <PanelHeader>{t('JavaScript Loader')}</PanelHeader>\n                <PanelBody>\n                  <FieldGroup\n                    help={tct(\n                      'Copy this script into your website to setup your JavaScript SDK without any additional configuration. [link]',\n                      {\n                        link: (\n                          <ExternalLink href=\"https://docs.sentry.io/platforms/javascript/install/lazy-load-sentry/\">\n                            What does the script provide?\n                          </ExternalLink>\n                        ),\n                      }\n                    )}\n                    inline={false}\n                    flexibleControlStateSize\n                  >\n                    <TextCopyInput>\n                      {`<script src='${loaderLink}' crossorigin=\"anonymous\"></script>`}\n                    </TextCopyInput>\n                  </FieldGroup>\n                  <SelectField\n                    name=\"browserSdkVersion\"\n                    options={\n                      data.browserSdk\n                        ? data.browserSdk.choices.map(([value, label]) => ({\n                            value,\n                            label,\n                          }))\n                        : []\n                    }\n                    placeholder={t('4.x')}\n                    allowClear={false}\n                    disabled={!hasAccess}\n                    help={t(\n                      'Select the version of the SDK that should be loaded. Note that it can take a few minutes until this change is live.'\n                    )}\n                  />\n                </PanelBody>\n              </Panel>\n            </Form>\n\n            <Panel>\n              <PanelHeader>{t('Credentials')}</PanelHeader>\n              <PanelBody>\n                <PanelAlert type=\"info\" showIcon>\n                  {t(\n                    'Your credentials are coupled to a public and secret key. Different clients will require different credentials, so make sure you check the documentation before plugging things in.'\n                  )}\n                </PanelAlert>\n\n                <ProjectKeyCredentials\n                  projectId={`${data.projectId}`}\n                  data={data}\n                  showPublicKey\n                  showSecretKey\n                  showProjectId\n                />\n              </PanelBody>\n            </Panel>\n\n            <Access access={['project:admin']}>\n              <Panel>\n                <PanelHeader>{t('Revoke Key')}</PanelHeader>\n                <PanelBody>\n                  <FieldGroup\n                    label={t('Revoke Key')}\n                    help={t(\n                      'Revoking this key will immediately remove and suspend the credentials. This action is irreversible.'\n                    )}\n                  >\n                    <div>\n                      <Confirm\n                        priority=\"danger\"\n                        message={t(\n                          'Are you sure you want to revoke this key? This will immediately remove and suspend the credentials.'\n                        )}\n                        onConfirm={this.handleRemove}\n                        confirmText={t('Revoke Key')}\n                      >\n                        <Button priority=\"danger\">{t('Revoke Key')}</Button>\n                      </Confirm>\n                    </div>\n                  </FieldGroup>\n                </PanelBody>\n              </Panel>\n            </Access>\n          </Fragment>\n        )}\n      </Access>\n    );\n  }\n}\n\nexport default KeySettings;\n","import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {Client} from 'sentry/api';\nimport MiniBarChart from 'sentry/components/charts/miniBarChart';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport LoadingError from 'sentry/components/loadingError';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport theme from 'sentry/utils/theme';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n} & Pick<\n  RouteComponentProps<\n    {\n      keyId: string;\n      projectId: string;\n    },\n    {}\n  >,\n  'params'\n>;\n\ntype State = {\n  emptyStats: boolean;\n  error: boolean;\n  loading: boolean;\n  series: Series[];\n  since: number;\n  until: number;\n};\n\nconst getInitialState = (): State => {\n  const until = Math.floor(new Date().getTime() / 1000);\n  return {\n    since: until - 3600 * 24 * 30,\n    until,\n    loading: true,\n    error: false,\n    series: [],\n    emptyStats: false,\n  };\n};\n\nclass KeyStats extends Component<Props, State> {\n  state = getInitialState();\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = () => {\n    const {organization} = this.props;\n    const {keyId, projectId} = this.props.params;\n    this.props.api.request(\n      `/projects/${organization.slug}/${projectId}/keys/${keyId}/stats/`,\n      {\n        query: {\n          since: this.state.since,\n          until: this.state.until,\n          resolution: '1d',\n        },\n        success: data => {\n          let emptyStats = true;\n          const dropped: Series['data'] = [];\n          const accepted: Series['data'] = [];\n          data.forEach(p => {\n            if (p.total) {\n              emptyStats = false;\n            }\n            dropped.push({name: p.ts * 1000, value: p.dropped});\n            accepted.push({name: p.ts * 1000, value: p.accepted});\n          });\n          const series = [\n            {\n              seriesName: t('Accepted'),\n              data: accepted,\n            },\n            {\n              seriesName: t('Rate Limited'),\n              data: dropped,\n            },\n          ];\n          this.setState({\n            series,\n            emptyStats,\n            error: false,\n            loading: false,\n          });\n        },\n        error: () => {\n          this.setState({error: true, loading: false});\n        },\n      }\n    );\n  };\n\n  render() {\n    if (this.state.error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Key usage in the last 30 days (by day)')}</PanelHeader>\n        <PanelBody withPadding>\n          {this.state.loading ? (\n            <Placeholder height=\"150px\" />\n          ) : !this.state.emptyStats ? (\n            <MiniBarChart\n              isGroupedByDate\n              series={this.state.series}\n              height={150}\n              colors={[theme.gray200, theme.red300]}\n              stacked\n              labelYAxisExtents\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing recorded in the last 30 days.')}\n              description={t('Total events captured using these credentials.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport default KeyStats;\n","import {browserHistory, RouteComponentProps} from 'react-router';\n\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\nimport KeySettings from 'sentry/views/settings/project/projectKeys/details/keySettings';\nimport KeyStats from 'sentry/views/settings/project/projectKeys/details/keyStats';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<\n  {\n    keyId: string;\n    projectId: string;\n  },\n  {}\n>;\n\ntype State = {\n  data: ProjectKey;\n} & AsyncView['state'];\n\nexport default class ProjectKeyDetails extends AsyncView<Props, State> {\n  getTitle() {\n    return t('Key Details');\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization} = this.props;\n    const {keyId, projectId} = this.props.params;\n    return [['data', `/projects/${organization.slug}/${projectId}/keys/${keyId}/`]];\n  }\n\n  handleRemove = () => {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n    browserHistory.push(\n      normalizeUrl(`/settings/${organization.slug}/projects/${projectId}/keys/`)\n    );\n  };\n\n  renderBody() {\n    const {organization, params} = this.props;\n    const {data} = this.state;\n\n    return (\n      <div data-test-id=\"key-details\">\n        <SettingsPageHeader title={t('Key Details')} />\n        <PermissionAlert />\n\n        <KeyStats api={this.api} organization={organization} params={params} />\n\n        <KeySettings\n          api={this.api}\n          data={data}\n          onRemove={this.handleRemove}\n          organization={organization}\n          params={params}\n        />\n      </div>\n    );\n  }\n}\n","import {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport FieldGroup from 'sentry/components/forms/fieldGroup';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  data: ProjectKey;\n  projectId: string;\n  showDsn?: boolean;\n  showDsnPublic?: boolean;\n  showMinidump?: boolean;\n  showProjectId?: boolean;\n  showPublicKey?: boolean;\n  showSecretKey?: boolean;\n  showSecurityEndpoint?: boolean;\n  showUnreal?: boolean;\n};\n\nfunction ProjectKeyCredentials({\n  data,\n  projectId,\n  showDsn = true,\n  showDsnPublic = true,\n  showMinidump = true,\n  showProjectId = false,\n  showPublicKey = false,\n  showSecretKey = false,\n  showSecurityEndpoint = true,\n  showUnreal = true,\n}: Props) {\n  const [showDeprecatedDsn, setShowDeprecatedDsn] = useState(false);\n\n  return (\n    <Fragment>\n      {showDsnPublic && (\n        <FieldGroup\n          label={t('DSN')}\n          inline={false}\n          flexibleControlStateSize\n          help={tct('The DSN tells the SDK where to send the events to. [link]', {\n            link: showDsn ? (\n              <Link to=\"\" onClick={() => setShowDeprecatedDsn(curr => !curr)}>\n                {showDeprecatedDsn ? t('Hide deprecated DSN') : t('Show deprecated DSN')}\n              </Link>\n            ) : null,\n          })}\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.public,\n              fixed: '__DSN__',\n            })}\n          </TextCopyInput>\n          {showDeprecatedDsn && (\n            <StyledField\n              label={null}\n              help={t(\n                'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n              )}\n              inline={false}\n              flexibleControlStateSize\n            >\n              <TextCopyInput>\n                {getDynamicText({\n                  value: data.dsn.secret,\n                  fixed: '__DSN_DEPRECATED__',\n                })}\n              </TextCopyInput>\n            </StyledField>\n          )}\n        </FieldGroup>\n      )}\n\n      {/* this edge case should imho not happen, but just to be sure */}\n      {!showDsnPublic && showDsn && (\n        <FieldGroup\n          label={t('DSN (Deprecated)')}\n          help={t(\n            'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.secret,\n              fixed: '__DSN_DEPRECATED__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showSecurityEndpoint && (\n        <FieldGroup\n          label={t('Security Header Endpoint')}\n          help={t(\n            'Use your security header endpoint for features like CSP and Expect-CT reports.'\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.security,\n              fixed: '__SECURITY_HEADER_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showMinidump && (\n        <FieldGroup\n          label={t('Minidump Endpoint')}\n          help={tct(\n            'Use this endpoint to upload [link], for example with Electron, Crashpad or Breakpad.',\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/native/guides/minidumps/\">\n                  minidump crash reports\n                </ExternalLink>\n              ),\n            }\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.minidump,\n              fixed: '__MINIDUMP_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showUnreal && (\n        <FieldGroup\n          label={t('Unreal Engine 4 Endpoint')}\n          help={t('Use this endpoint to configure your UE4 Crash Reporter.')}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.unreal || '',\n              fixed: '__UNREAL_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showPublicKey && (\n        <FieldGroup label={t('Public Key')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.public,\n              fixed: '__PUBLICKEY__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showSecretKey && (\n        <FieldGroup label={t('Secret Key')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.secret,\n              fixed: '__SECRETKEY__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n\n      {showProjectId && (\n        <FieldGroup label={t('Project ID')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: projectId,\n              fixed: '__PROJECTID__',\n            })}\n          </TextCopyInput>\n        </FieldGroup>\n      )}\n    </Fragment>\n  );\n}\n\nconst StyledField = styled(FieldGroup)`\n  padding: ${space(0.5)} 0 0 0;\n`;\n\nexport default ProjectKeyCredentials;\n"],"names":["AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","PermissionAlert","access","props","hasAccess","type","t","PREDEFINED_RATE_LIMIT_VALUES","KeyRateLimitsForm","data","disabled","organization","params","handleChangeCount","callback","value","event","count","Number","target","getAllowedRateLimitValues","currentRateLimit","rateLimit","window","defined","includes","sortBy","keyId","projectId","apiEndpoint","slug","disabledAlert","features","alert","PanelAlert","featureName","saveOnBlur","apiMethod","initialData","hookName","renderDisabled","children","hasFeature","project","showIcon","name","label","validate","form","formatMessageValue","tct","errors","tn","timeWindow","getExactDuration","help","inline","onChange","onBlur","undefined","RateLimitRow","min","placeholder","EventsIn","allowedValues","formatLabel","rangeValue","currentValueObj","valueObj","handleChangeWindow","space","p","theme","fontSizeRelativeSmall","KeySettings","Component","loading","error","async","state","addLoadingMessage","api","onRemove","requestPromise","method","addSuccessMessage","_err","setState","addErrorMessage","loaderLink","getDynamicText","dsn","cdn","fixed","Fragment","allowUndo","required","maxLength","className","date","dateCreated","link","href","flexibleControlStateSize","options","browserSdk","choices","map","allowClear","showPublicKey","showSecretKey","showProjectId","priority","message","onConfirm","handleRemove","confirmText","KeyStats","until","Math","floor","Date","getTime","since","series","emptyStats","getInitialState","request","query","resolution","success","dropped","accepted","forEach","total","push","ts","seriesName","componentDidMount","fetchData","onRetry","withPadding","height","description","isGroupedByDate","colors","stacked","labelYAxisExtents","ProjectKeyDetails","browserHistory","normalizeUrl","getEndpoints","renderBody","ProjectKeyCredentials","showDsn","showDsnPublic","showMinidump","showSecurityEndpoint","showUnreal","showDeprecatedDsn","setShowDeprecatedDsn","useState","to","onClick","curr","public","StyledField","secret","security","minidump","unreal","FieldGroup"],"sourceRoot":""}