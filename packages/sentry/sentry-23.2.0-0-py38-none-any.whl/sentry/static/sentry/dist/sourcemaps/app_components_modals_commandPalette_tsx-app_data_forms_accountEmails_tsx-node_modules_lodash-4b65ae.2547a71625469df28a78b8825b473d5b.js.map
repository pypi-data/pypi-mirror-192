{"version":3,"file":"chunks/app_components_modals_commandPalette_tsx-app_data_forms_accountEmails_tsx-node_modules_lodash-4b65ae.xxxxxxxxxxxxxxxxxxxx.js","mappings":"kzBAWA,SAASA,EAAe,GAA0B,IAA1B,KAACC,GAAuB,EAC9C,MAAMC,GAAQC,EAAAA,EAAAA,KAId,OAFAC,EAAAA,EAAAA,YAAU,MAAWC,EAAAA,EAAAA,IAAU,kBAAmB,CAAC,EAAE,GAAE,KAGrD,QAACJ,EAAI,WACH,QAAC,KAAU,UACR,QAAEK,IAAKC,GAAY,SAClB,QAAC,IAAM,CACLC,WAAW,kBACXC,UAAW,EACXC,WAAY,GACZC,kBAAmBJ,CAAY;;;;;;;wCAOHL,EAAMU;gBAElCC,YAAa,QAAC,cAACC,GAAc,SAC3B,QAACC,EAAY,WACX,QAACC,EAAW,CACVC,WAAS,KACLH,EAAc,CAChBI,KAAM,OACNC,aAAaC,EAAAA,EAAAA,GAAE,qDAGN,GAEjB,KAKZ,CAtCSpB,EAAc,6BAwCvB,UAEaqB,EAAW,CAAH,uDAMfN,GAAe,OAAO,MAAK,oBAAZ,CAAa,YACrBO,EAAAA,EAAAA,GAAM,KAAK,KAGlBN,GAAc,OAAOO,EAAAA,EAAK,oBAAZ,CAAa,uBAEpBD,EAAAA,EAAAA,GAAM,GAAE,+H,oIC7Dd,MAAME,EAAQ,4BAsBrB,EApBqC,CACnC,CAEEC,OAAOL,EAAAA,EAAAA,GAAE,wBACTM,OAAQ,CACN,CACEC,KAAM,QACNT,KAAM,SAGNU,OAAOR,EAAAA,EAAAA,GAAE,oBACTD,aAAaC,EAAAA,EAAAA,GAAE,8BACfS,MAAMT,EAAAA,EAAAA,GAAE,mDACRU,YAAY,EACZC,aAAaX,EAAAA,EAAAA,GAAE,kD,qDCpBvB,IAAIY,EAAc,EAAQ,0CACtBC,EAAY,EAAQ,uCA+BxBC,EAAOC,QATP,SAAsBC,EAAOC,GAE3B,OADsB,MAATD,GAAoBA,EAAME,QAIvCD,OAAkBE,IAAVF,EAAsB,EAAIJ,EAAUI,GACrCL,EAAYI,EAAOC,IAHjB,EAIX,C","sources":["webpack:///./app/components/modals/commandPalette.tsx","webpack:///./app/data/forms/accountEmails.tsx","webpack:///../node_modules/lodash/flattenDepth.js"],"sourcesContent":["import {useEffect} from 'react';\nimport {ClassNames, css, useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Input from 'sentry/components/input';\nimport {Search} from 'sentry/components/search';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {analytics} from 'sentry/utils/analytics';\n\nfunction CommandPalette({Body}: ModalRenderProps) {\n  const theme = useTheme();\n\n  useEffect(() => void analytics('omnisearch.open', {}), []);\n\n  return (\n    <Body>\n      <ClassNames>\n        {({css: injectedCss}) => (\n          <Search\n            entryPoint=\"command_palette\"\n            minSearch={1}\n            maxResults={10}\n            dropdownClassName={injectedCss`\n                width: 100%;\n                border: transparent;\n                border-top-left-radius: 0;\n                border-top-right-radius: 0;\n                position: initial;\n                box-shadow: none;\n                border-top: 1px solid ${theme.border};\n              `}\n            renderInput={({getInputProps}) => (\n              <InputWrapper>\n                <StyledInput\n                  autoFocus\n                  {...getInputProps({\n                    type: 'text',\n                    placeholder: t('Search for projects, teams, settings, etc...'),\n                  })}\n                />\n              </InputWrapper>\n            )}\n          />\n        )}\n      </ClassNames>\n    </Body>\n  );\n}\n\nexport default CommandPalette;\n\nexport const modalCss = css`\n  [role='document'] {\n    padding: 0;\n  }\n`;\n\nconst InputWrapper = styled('div')`\n  padding: ${space(0.25)};\n`;\n\nconst StyledInput = styled(Input)`\n  width: 100%;\n  padding: ${space(1)};\n  border-radius: 8px;\n\n  outline: none;\n  border: none;\n  box-shadow: none;\n\n  :focus,\n  :active,\n  :hover {\n    outline: none;\n    border: none;\n    box-shadow: none;\n  }\n`;\n","import {JsonFormObject} from 'sentry/components/forms/types';\nimport {t} from 'sentry/locale';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/emails/';\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: t('Add Secondary Emails'),\n    fields: [\n      {\n        name: 'email',\n        type: 'string',\n\n        // additional data/props that is related to rendering of form field rather than data\n        label: t('Additional Email'),\n        placeholder: t('e.g. secondary@example.com'),\n        help: t('Designate an alternative email for this account'),\n        saveOnBlur: false,\n        saveMessage: t('Add this new email address to your account?'),\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","var baseFlatten = require('./_baseFlatten'),\n    toInteger = require('./toInteger');\n\n/**\n * Recursively flatten `array` up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * var array = [1, [2, [3, [4]], 5]];\n *\n * _.flattenDepth(array, 1);\n * // => [1, 2, [3, [4]], 5]\n *\n * _.flattenDepth(array, 2);\n * // => [1, 2, 3, [4], 5]\n */\nfunction flattenDepth(array, depth) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  depth = depth === undefined ? 1 : toInteger(depth);\n  return baseFlatten(array, depth);\n}\n\nmodule.exports = flattenDepth;\n"],"names":["CommandPalette","Body","theme","useTheme","useEffect","analytics","css","injectedCss","entryPoint","minSearch","maxResults","dropdownClassName","border","renderInput","getInputProps","InputWrapper","StyledInput","autoFocus","type","placeholder","t","modalCss","space","Input","route","title","fields","name","label","help","saveOnBlur","saveMessage","baseFlatten","toInteger","module","exports","array","depth","length","undefined"],"sourceRoot":""}