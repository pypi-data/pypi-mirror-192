{"version":3,"file":"chunks/app_components_group_tagFacets_index_tsx-app_views_performance_transactionSummary_utils_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/group/tagFacets/index.tsx","webpack:///./app/components/group/tagFacets/tagFacetsDistributionMeter.tsx","webpack:///./app/utils/profiling/routes.tsx","webpack:///./app/views/performance/transactionSummary/utils.tsx"],"sourcesContent":["import {Fragment, ReactNode, useEffect, useState} from 'react';\nimport styled from '@emotion/styled';\nimport {LocationDescriptor} from 'history';\nimport keyBy from 'lodash/keyBy';\n\nimport Placeholder from 'sentry/components/placeholder';\nimport * as SidebarSection from 'sentry/components/sidebarSection';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Environment, Event, Organization, Project, TagWithTopValues} from 'sentry/types';\nimport {formatVersion} from 'sentry/utils/formatters';\nimport {appendTagCondition} from 'sentry/utils/queryString';\nimport useApi from 'sentry/utils/useApi';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nimport TagFacetsDistributionMeter from './tagFacetsDistributionMeter';\n\nexport const MOBILE_TAGS = ['device', 'os', 'release', 'environment', 'transaction'];\n\nexport const FRONTEND_TAGS = ['browser', 'transaction', 'release', 'url', 'environment'];\n\nexport const BACKEND_TAGS = [\n  'transaction',\n  'url',\n  'user',\n  'release',\n  'organization.slug',\n];\n\nexport const DEFAULT_TAGS = ['transaction', 'environment', 'release'];\n\nexport function TAGS_FORMATTER(tagsData: Record<string, TagWithTopValues>) {\n  // For \"release\" tag keys, format the release tag value to be more readable (ie removing version prefix)\n  const transformedTagsData = {};\n  Object.keys(tagsData).forEach(tagKey => {\n    if (tagKey === 'release') {\n      transformedTagsData[tagKey] = {\n        ...tagsData[tagKey],\n        topValues: tagsData[tagKey].topValues.map(topValue => {\n          return {\n            ...topValue,\n            name: formatVersion(topValue.name),\n          };\n        }),\n      };\n    } else if (tagKey === 'device') {\n      transformedTagsData[tagKey] = {\n        ...tagsData[tagKey],\n        topValues: tagsData[tagKey].topValues.map(topValue => {\n          return {\n            ...topValue,\n            name: topValue.readable ?? topValue.name,\n          };\n        }),\n      };\n    } else {\n      transformedTagsData[tagKey] = tagsData[tagKey];\n    }\n  });\n  return transformedTagsData;\n}\n\ntype Props = {\n  environments: Environment[];\n  groupId: string;\n  project: Project;\n  tagKeys: string[];\n  event?: Event;\n  tagFormatter?: (\n    tagsData: Record<string, TagWithTopValues>\n  ) => Record<string, TagWithTopValues>;\n  title?: ReactNode;\n};\n\ntype State = {\n  loading: boolean;\n  tagsData: Record<string, TagWithTopValues>;\n};\n\nconst LIMIT = 4;\n\nexport default function TagFacets({\n  tagKeys,\n  environments,\n  groupId,\n  title,\n  tagFormatter,\n  project,\n}: Props) {\n  const [state, setState] = useState<State>({\n    tagsData: {},\n    loading: true,\n  });\n  const organization = useOrganization();\n  const api = useApi();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // Fetch the top values for the current group's top tags.\n      const data = await api.requestPromise(`/issues/${groupId}/tags/`, {\n        query: {\n          environment: environments.map(env => env.name),\n          readable: true,\n          limit: LIMIT,\n        },\n      });\n      const tagsData = keyBy(data, 'key');\n      setState({\n        ...state,\n        tagsData,\n        loading: false,\n      });\n    };\n    setState({...state, loading: true});\n    fetchData().catch(() => {\n      setState({...state, tagsData: {}, loading: false});\n    });\n    // Don't want to requery everytime state changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [api, JSON.stringify(environments), groupId, tagKeys]);\n\n  const tagsData = tagFormatter?.(state.tagsData) ?? state.tagsData;\n  const topTagKeys = tagKeys.filter(tagKey => Object.keys(tagsData).includes(tagKey));\n  const remainingTagKeys = Object.keys(tagsData)\n    .filter(tagKey => !tagKeys.includes(tagKey))\n    .sort();\n\n  return (\n    <SidebarSection.Wrap>\n      {state.loading || !tagsData ? (\n        <TagPlaceholders>\n          <Placeholder height=\"40px\" />\n          <Placeholder height=\"40px\" />\n          <Placeholder height=\"40px\" />\n          <Placeholder height=\"40px\" />\n        </TagPlaceholders>\n      ) : (\n        <Fragment>\n          <SidebarSection.Title>{title || t('All Tags')}</SidebarSection.Title>\n          {Object.keys(tagsData).length === 0 ? (\n            <NoTagsFoundContainer data-test-id=\"no-tags\">\n              {environments.length\n                ? t('No tags found in the selected environments')\n                : t('No tags found')}\n            </NoTagsFoundContainer>\n          ) : (\n            <Content>\n              <span data-test-id=\"top-distribution-wrapper\">\n                <TagFacetsDistributionMeterWrapper\n                  groupId={groupId}\n                  organization={organization}\n                  project={project}\n                  tagKeys={topTagKeys}\n                  tagsData={tagsData}\n                  expandFirstTag\n                />\n              </span>\n              <TagFacetsDistributionMeterWrapper\n                groupId={groupId}\n                organization={organization}\n                project={project}\n                tagKeys={remainingTagKeys}\n                tagsData={tagsData}\n              />\n            </Content>\n          )}\n        </Fragment>\n      )}\n    </SidebarSection.Wrap>\n  );\n}\n\nfunction TagFacetsDistributionMeterWrapper({\n  groupId,\n  organization,\n  project,\n  tagKeys,\n  tagsData,\n  expandFirstTag,\n}: {\n  groupId: string;\n  organization: Organization;\n  project: Project;\n  tagKeys: string[];\n  tagsData: Record<string, TagWithTopValues>;\n  expandFirstTag?: boolean;\n}) {\n  const location = useLocation();\n  const query = {...location.query};\n  return (\n    <TagFacetsList>\n      {tagKeys.map((tagKey, index) => {\n        const tagWithTopValues = tagsData[tagKey];\n        const topValues = tagWithTopValues ? tagWithTopValues.topValues : [];\n        const topValuesTotal = tagWithTopValues ? tagWithTopValues.totalValues : 0;\n\n        const otherTagValuesUrl = `/organizations/${organization.slug}/issues/${groupId}/tags/${tagKey}/?referrer=tag-distribution-meter`;\n        const eventsPath = `/organizations/${organization.slug}/issues/${groupId}/events/`;\n\n        const segments = topValues\n          ? topValues.map(value => {\n              // Create a link to the events page with a tag condition on the selected value\n              const url: LocationDescriptor = {\n                ...location,\n                query: {\n                  ...query,\n                  query: appendTagCondition(null, tagKey, value.value),\n                },\n                pathname: eventsPath,\n              };\n\n              return {\n                ...value,\n                url,\n              };\n            })\n          : [];\n\n        return (\n          <li key={tagKey} aria-label={tagKey}>\n            <TagFacetsDistributionMeter\n              title={tagKey}\n              totalValues={topValuesTotal}\n              segments={segments}\n              onTagClick={() => undefined}\n              project={project}\n              expandByDefault={expandFirstTag && index === 0}\n              otherUrl={otherTagValuesUrl}\n            />\n          </li>\n        );\n      })}\n    </TagFacetsList>\n  );\n}\n\nconst TagPlaceholders = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  grid-auto-flow: row;\n`;\n\nconst Content = styled('div')`\n  margin-top: ${space(2)};\n`;\n\nconst NoTagsFoundContainer = styled('p')`\n  margin-top: ${space(0.5)};\n`;\n\nexport const TagFacetsList = styled('ol')`\n  list-style: none;\n  padding: 0;\n  margin: 0 0 ${space(2)};\n`;\n","import {useState} from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\nimport {motion} from 'framer-motion';\nimport {LocationDescriptor} from 'history';\nimport debounce from 'lodash/debounce';\n\nimport {TagSegment} from 'sentry/actionCreators/events';\nimport {Button} from 'sentry/components/button';\nimport Link from 'sentry/components/links/link';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconChevron} from 'sentry/icons/iconChevron';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {percent} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {isMobilePlatform} from 'sentry/utils/platform';\nimport {appendExcludeTagValuesCondition} from 'sentry/utils/queryString';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nconst COLORS = ['#402A65', '#694D99', '#9A81C4', '#BBA6DF', '#EAE2F8'];\nconst MAX_SEGMENTS = 4;\nconst TOOLTIP_DELAY = 800;\n\ntype Props = {\n  segments: TagSegment[];\n  title: string;\n  totalValues: number;\n  colors?: string[];\n  expandByDefault?: boolean;\n  onTagClick?: (title: string, value: TagSegment) => void;\n  otherUrl?: LocationDescriptor;\n  project?: Project;\n};\n\nconst _debounceTrackHover = debounce(\n  ({\n    tag,\n    value,\n    platform,\n    is_mobile,\n    organization,\n  }: {\n    is_mobile: boolean;\n    organization: Organization;\n    tag: string;\n    value: string;\n    platform?: string;\n  }) => {\n    trackAdvancedAnalyticsEvent('issue_group_details.tags.bar.hovered', {\n      tag,\n      value,\n      platform,\n      is_mobile,\n      organization,\n    });\n  },\n  300\n);\n\nfunction TagFacetsDistributionMeter({\n  colors = COLORS,\n  segments,\n  title,\n  totalValues,\n  onTagClick,\n  project,\n  expandByDefault,\n  otherUrl,\n}: Props) {\n  const location = useLocation();\n  const organization = useOrganization();\n  const [expanded, setExpanded] = useState<boolean>(!!expandByDefault);\n  const [hoveredValue, setHoveredValue] = useState<TagSegment | null>(null);\n  const topSegments = segments.slice(0, MAX_SEGMENTS);\n\n  function renderTitle() {\n    if (!Array.isArray(segments) || segments.length <= 0) {\n      return (\n        <Title>\n          <TitleType>{title}</TitleType>\n        </Title>\n      );\n    }\n\n    return (\n      <Title>\n        <TitleType>{title}</TitleType>\n        <Tooltip\n          skipWrapper\n          delay={TOOLTIP_DELAY}\n          title={topSegments[0].name || t('n/a')}\n        >\n          <TitleDescription>{topSegments[0].name || t('n/a')}</TitleDescription>\n        </Tooltip>\n        <ExpandToggleButton\n          borderless\n          size=\"zero\"\n          icon={<IconChevron direction={expanded ? 'up' : 'down'} size=\"xs\" />}\n          aria-label={t(\n            '%s %s tag distribution',\n            expanded ? 'Collapse' : 'Expand',\n            title\n          )}\n        />\n      </Title>\n    );\n  }\n\n  function renderSegments() {\n    if (totalValues === 0) {\n      return (\n        <SegmentBar>\n          <p>{t('No recent data.')}</p>\n        </SegmentBar>\n      );\n    }\n\n    return (\n      <SegmentBar>\n        {topSegments.map((value, index) => {\n          const pct = percent(value.count, totalValues);\n          const pctLabel = Math.floor(pct);\n          const segmentProps = {\n            index,\n            onClick: () => {\n              trackAdvancedAnalyticsEvent('issue_group_details.tags.bar.clicked', {\n                tag: title,\n                value: value.value,\n                platform: project?.platform,\n                is_mobile: isMobilePlatform(project?.platform),\n                organization,\n              });\n              return onTagClick?.(title, value);\n            },\n          };\n          return (\n            <div\n              key={value.isOther ? 'other' : `segment-${value.value}`}\n              style={{width: pct + '%'}}\n              onMouseOver={() => {\n                setHoveredValue(value);\n                _debounceTrackHover({\n                  tag: title,\n                  value: value.value,\n                  platform: project?.platform,\n                  is_mobile: isMobilePlatform(project?.platform),\n                  organization,\n                });\n              }}\n              onMouseLeave={() => setHoveredValue(null)}\n            >\n              {value.isOther ? (\n                <OtherSegment\n                  aria-label={t('Other segment')}\n                  color={colors[colors.length - 1]}\n                />\n              ) : (\n                <Segment\n                  aria-label={`${value.value} ${t('segment')}`}\n                  color={colors[index]}\n                  {...segmentProps}\n                >\n                  {/* if the first segment is 6% or less, the label won't fit cleanly into the segment, so don't show the label */}\n                  {index === 0 && pctLabel > 6 ? `${pctLabel}%` : null}\n                </Segment>\n              )}\n            </div>\n          );\n        })}\n      </SegmentBar>\n    );\n  }\n\n  function renderLegend() {\n    return (\n      <LegendAnimateContainer\n        expanded={expanded}\n        animate={expanded ? {height: '100%', opacity: 1} : {height: '0', opacity: 0}}\n      >\n        <LegendContainer>\n          {topSegments.map((segment, index) => {\n            const pctLabel = Math.floor(percent(segment.count, totalValues));\n            const unfocus = !!hoveredValue && hoveredValue.value !== segment.value;\n            const focus = hoveredValue?.value === segment.value;\n            const linkLabel = segment.isOther\n              ? t(\n                  'Other %s tag values, %s of all events. View other tags.',\n                  title,\n                  `${pctLabel}%`\n                )\n              : t(\n                  '%s, %s, %s of all events. View events with this tag value.',\n                  title,\n                  segment.value,\n                  `${pctLabel}%`\n                );\n            return (\n              <li key={`segment-${segment.name}-${index}`}>\n                <Link to={segment.url} aria-label={linkLabel}>\n                  <LegendRow\n                    onMouseOver={() => setHoveredValue(segment)}\n                    onMouseLeave={() => setHoveredValue(null)}\n                  >\n                    <LegendDot\n                      color={colors[segment.isOther ? colors.length - 1 : index]}\n                      focus={focus}\n                    />\n                    <Tooltip skipWrapper delay={TOOLTIP_DELAY} title={segment.name}>\n                      <LegendText unfocus={unfocus}>\n                        {segment.name ?? (\n                          <NotApplicableLabel>{t('n/a')}</NotApplicableLabel>\n                        )}\n                      </LegendText>\n                    </Tooltip>\n                    {<LegendPercent>{`${pctLabel}%`}</LegendPercent>}\n                  </LegendRow>\n                </Link>\n              </li>\n            );\n          })}\n        </LegendContainer>\n      </LegendAnimateContainer>\n    );\n  }\n\n  const totalVisible = topSegments.reduce((sum, value) => sum + value.count, 0);\n  const hasOther = totalVisible < totalValues;\n\n  const query = appendExcludeTagValuesCondition(\n    location.query.query,\n    title,\n    topSegments.map(({value}) => value)\n  );\n  const excludeTopSegmentsUrl: LocationDescriptor = {\n    ...location,\n    query: {...location.query, query},\n  };\n\n  if (hasOther) {\n    topSegments.push({\n      isOther: true,\n      name: t('Other'),\n      value: 'other',\n      count: totalValues - totalVisible,\n      url: otherUrl ?? excludeTopSegmentsUrl ?? '',\n    });\n  }\n\n  return (\n    <TagSummary>\n      <details open aria-expanded={expanded} onClick={e => e.preventDefault()}>\n        <StyledSummary>\n          <TagHeader clickable onClick={() => setExpanded(!expanded)}>\n            {renderTitle()}\n            {renderSegments()}\n          </TagHeader>\n        </StyledSummary>\n        {renderLegend()}\n      </details>\n    </TagSummary>\n  );\n}\n\nexport default TagFacetsDistributionMeter;\n\nconst TagSummary = styled('div')`\n  margin-bottom: ${space(2)};\n`;\n\nconst TagHeader = styled('span')<{clickable?: boolean}>`\n  ${p => (p.clickable ? 'cursor: pointer' : null)};\n`;\n\nconst SegmentBar = styled('div')`\n  display: flex;\n  overflow: hidden;\n`;\n\nconst Title = styled('div')`\n  display: flex;\n  font-size: ${p => p.theme.fontSizeMedium};\n  justify-content: space-between;\n  margin-bottom: ${space(0.25)};\n  line-height: 1.1;\n`;\n\nconst TitleType = styled('div')`\n  flex: none;\n  color: ${p => p.theme.textColor};\n  font-weight: bold;\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-right: ${space(1)};\n  align-self: center;\n`;\n\nconst TitleDescription = styled('div')`\n  ${p => p.theme.overflowEllipsis};\n  display: flex;\n  color: ${p => p.theme.gray300};\n  text-align: right;\n  font-size: ${p => p.theme.fontSizeMedium};\n  ${p => p.theme.overflowEllipsis};\n  align-self: center;\n`;\n\nconst OtherSegment = styled('span')<{color: string}>`\n  display: block;\n  width: 100%;\n  height: ${space(2)};\n  color: inherit;\n  outline: none;\n  background-color: ${p => p.color};\n`;\n\nconst Segment = styled('span', {shouldForwardProp: isPropValid})<{color: string}>`\n  &:hover {\n    color: ${p => p.theme.white};\n  }\n  display: block;\n  width: 100%;\n  height: ${space(2)};\n  color: ${p => p.theme.white};\n  outline: none;\n  background-color: ${p => p.color};\n  text-align: right;\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  padding: 1px ${space(0.5)} 0 0;\n`;\n\nconst LegendAnimateContainer = styled(motion.div, {\n  shouldForwardProp: prop =>\n    prop === 'animate' || (prop !== 'expanded' && isPropValid(prop)),\n})<{expanded: boolean}>`\n  height: 0;\n  opacity: 0;\n  ${p => (!p.expanded ? 'overflow: hidden;' : '')}\n`;\n\nconst LegendContainer = styled('ol')`\n  list-style: none;\n  padding: 0;\n  margin: ${space(1)} 0;\n`;\n\nconst LegendRow = styled('div')`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  padding: ${space(0.5)} 0;\n`;\n\nconst LegendDot = styled('span')<{color: string; focus: boolean}>`\n  padding: 0;\n  position: relative;\n  width: 11px;\n  height: 11px;\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n  background-color: ${p => p.color};\n  &:after {\n    content: '';\n    border-radius: 50%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    outline: ${p => p.theme.gray100} ${space(0.5)} solid;\n    opacity: ${p => (p.focus ? '1' : '0')};\n    transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nconst LegendText = styled('span')<{unfocus: boolean}>`\n  font-size: ${p => p.theme.fontSizeSmall};\n  margin-left: ${space(1)};\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  transition: color 0.3s;\n  color: ${p => (p.unfocus ? p.theme.gray300 : p.theme.gray400)};\n`;\n\nconst LegendPercent = styled('span')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  margin-left: ${space(1)};\n  color: ${p => p.theme.gray300};\n  text-align: right;\n  flex-grow: 1;\n`;\n\nconst ExpandToggleButton = styled(Button)`\n  color: ${p => p.theme.gray300};\n  margin-left: ${space(0.5)};\n`;\n\nconst NotApplicableLabel = styled('span')`\n  color: ${p => p.theme.gray300};\n`;\n\nconst StyledSummary = styled('summary')`\n  &::-webkit-details-marker {\n    display: none;\n  }\n`;\n","import {Location, LocationDescriptor, Path} from 'history';\n\nimport {Organization, Project} from 'sentry/types';\nimport {Trace} from 'sentry/types/profiling/core';\n\nexport function generateProfilingRoute({orgSlug}: {orgSlug: Organization['slug']}): Path {\n  return `/organizations/${orgSlug}/profiling/`;\n}\n\nexport function generateProfileSummaryRoute({\n  orgSlug,\n  projectSlug,\n}: {\n  orgSlug: Organization['slug'];\n  projectSlug: Project['slug'];\n}): Path {\n  return `/organizations/${orgSlug}/profiling/summary/${projectSlug}/`;\n}\n\nexport function generateProfileFlamechartRoute({\n  orgSlug,\n  projectSlug,\n  profileId,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n}): string {\n  return `/organizations/${orgSlug}/profiling/profile/${projectSlug}/${profileId}/flamechart/`;\n}\n\nexport function generateProfileDetailsRoute({\n  orgSlug,\n  projectSlug,\n  profileId,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n}): string {\n  return `/organizations/${orgSlug}/profiling/profile/${projectSlug}/${profileId}/details/`;\n}\n\nexport function generateProfilingRouteWithQuery({\n  orgSlug,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfilingRoute({orgSlug});\n  return {\n    pathname,\n    query: {\n      ...query,\n    },\n  };\n}\n\nexport function generateProfileSummaryRouteWithQuery({\n  orgSlug,\n  projectSlug,\n  transaction,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  projectSlug: Project['slug'];\n  transaction: string;\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileSummaryRoute({orgSlug, projectSlug});\n  return {\n    pathname,\n    query: {\n      ...query,\n      transaction,\n    },\n  };\n}\n\nexport function generateProfileFlamechartRouteWithQuery({\n  orgSlug,\n  projectSlug,\n  profileId,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileFlamechartRoute({\n    orgSlug,\n    projectSlug,\n    profileId,\n  });\n  return {\n    pathname,\n    query: {\n      ...query,\n    },\n  };\n}\n\nexport function generateProfileFlamechartRouteWithHighlightFrame({\n  orgSlug,\n  projectSlug,\n  profileId,\n  frameName,\n  framePackage,\n  query,\n}: {\n  frameName: string;\n  framePackage: string;\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n  query?: Location['query'];\n}): LocationDescriptor {\n  return generateProfileFlamechartRouteWithQuery({\n    orgSlug,\n    projectSlug,\n    profileId,\n    query: {\n      ...query,\n      frameName,\n      framePackage,\n    },\n  });\n}\n\nexport function generateProfileDetailsRouteWithQuery({\n  orgSlug,\n  projectSlug,\n  profileId,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileDetailsRoute({orgSlug, projectSlug, profileId});\n  return {\n    pathname,\n    query: {\n      ...query,\n    },\n  };\n}\n","import {PlainRoute} from 'react-router';\nimport styled from '@emotion/styled';\nimport {LocationDescriptor, Query} from 'history';\n\nimport {space} from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport {generateEventSlug} from 'sentry/utils/discover/urls';\nimport getRouteStringFromRoutes from 'sentry/utils/getRouteStringFromRoutes';\nimport {getTransactionDetailsUrl} from 'sentry/utils/performance/urls';\nimport {generateProfileFlamechartRoute} from 'sentry/utils/profiling/routes';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {getTraceDetailsUrl} from 'sentry/views/performance/traceDetails/utils';\n\nexport enum DisplayModes {\n  DURATION_PERCENTILE = 'durationpercentile',\n  DURATION = 'duration',\n  LATENCY = 'latency',\n  TREND = 'trend',\n  VITALS = 'vitals',\n  USER_MISERY = 'usermisery',\n}\n\nexport enum TransactionFilterOptions {\n  FASTEST = 'fastest',\n  SLOW = 'slow',\n  OUTLIER = 'outlier',\n  RECENT = 'recent',\n}\n\nexport function generateTransactionSummaryRoute({\n  orgSlug,\n  subPath,\n}: {\n  orgSlug: string;\n  subPath?: string;\n}): string {\n  return `/organizations/${orgSlug}/performance/summary/${subPath ? `${subPath}/` : ''}`;\n}\n\n// normalizes search conditions by removing any redundant search conditions before presenting them in:\n// - query strings\n// - search UI\nexport function normalizeSearchConditions(query: string): MutableSearch {\n  const filterParams = normalizeSearchConditionsWithTransactionName(query);\n\n  // no need to include transaction as its already in the query params\n  filterParams.removeFilter('transaction');\n\n  return filterParams;\n}\n\n// normalizes search conditions by removing any redundant search conditions, but retains any transaction name\nexport function normalizeSearchConditionsWithTransactionName(\n  query: string\n): MutableSearch {\n  const filterParams = new MutableSearch(query);\n\n  // remove any event.type queries since it is implied to apply to only transactions\n  filterParams.removeFilter('event.type');\n\n  return filterParams;\n}\n\nexport function transactionSummaryRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n  unselectedSeries = 'p100()',\n  display,\n  trendFunction,\n  trendColumn,\n  showTransactions,\n  additionalQuery,\n  subPath,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  additionalQuery?: Record<string, string>;\n  display?: DisplayModes;\n  projectID?: string | string[];\n  showTransactions?: TransactionFilterOptions;\n  subPath?: string;\n  trendColumn?: string;\n  trendFunction?: string;\n  unselectedSeries?: string | string[];\n}) {\n  const pathname = generateTransactionSummaryRoute({\n    orgSlug,\n    subPath,\n  });\n\n  let searchFilter: typeof query.query;\n  if (typeof query.query === 'string') {\n    searchFilter = normalizeSearchConditions(query.query).formatString();\n  } else {\n    searchFilter = query.query;\n  }\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: searchFilter,\n      unselectedSeries,\n      showTransactions,\n      display,\n      trendFunction,\n      trendColumn,\n      referrer: 'performance-transaction-summary',\n      ...additionalQuery,\n    },\n  };\n}\n\nexport function generateTraceLink(dateSelection) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    _query: Query\n  ): LocationDescriptor => {\n    const traceId = `${tableRow.trace}`;\n    if (!traceId) {\n      return {};\n    }\n\n    return getTraceDetailsUrl(organization, traceId, dateSelection, {});\n  };\n}\n\nexport function generateTransactionLink(transactionName: string) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    query: Query,\n    spanId?: string\n  ): LocationDescriptor => {\n    const eventSlug = generateEventSlug(tableRow);\n    return getTransactionDetailsUrl(\n      organization.slug,\n      eventSlug,\n      transactionName,\n      query,\n      spanId\n    );\n  };\n}\n\nexport function generateProfileLink() {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    _query: Query | undefined\n  ) => {\n    const profileId = tableRow['profile.id'];\n    if (!profileId) {\n      return {};\n    }\n    return generateProfileFlamechartRoute({\n      orgSlug: organization.slug,\n      projectSlug: String(tableRow['project.name']),\n      profileId: String(profileId),\n    });\n  };\n}\n\nexport function generateReplayLink(routes: PlainRoute<any>[]) {\n  const referrer = getRouteStringFromRoutes(routes);\n\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    _query: Query | undefined\n  ): LocationDescriptor => {\n    const replayId = tableRow.replayId;\n    if (!replayId) {\n      return {};\n    }\n\n    const replaySlug = `${tableRow['project.name']}:${replayId}`;\n\n    if (!tableRow.timestamp) {\n      return {\n        pathname: `/organizations/${organization.slug}/replays/${replaySlug}/`,\n        query: {\n          referrer,\n        },\n      };\n    }\n\n    const transactionTimestamp = new Date(tableRow.timestamp).getTime();\n\n    const transactionStartTimestamp =\n      transactionTimestamp - (tableRow['transaction.duration'] as number);\n\n    return {\n      pathname: `/organizations/${organization.slug}/replays/${replaySlug}/`,\n      query: {\n        event_t: transactionStartTimestamp,\n        referrer,\n      },\n    };\n  };\n}\nexport const SidebarSpacer = styled('div')`\n  margin-top: ${space(3)};\n`;\n"],"names":["MOBILE_TAGS","FRONTEND_TAGS","BACKEND_TAGS","DEFAULT_TAGS","TAGS_FORMATTER","tagsData","transformedTagsData","Object","keys","forEach","tagKey","topValues","map","topValue","name","formatVersion","readable","TagFacets","tagKeys","environments","groupId","title","tagFormatter","project","state","setState","useState","loading","organization","useOrganization","api","useApi","useEffect","async","data","requestPromise","query","environment","env","limit","keyBy","fetchData","catch","JSON","stringify","topTagKeys","filter","includes","remainingTagKeys","sort","TagPlaceholders","height","Fragment","t","length","NoTagsFoundContainer","Content","TagFacetsDistributionMeterWrapper","expandFirstTag","location","useLocation","TagFacetsList","index","tagWithTopValues","topValuesTotal","totalValues","otherTagValuesUrl","slug","eventsPath","segments","value","url","appendTagCondition","pathname","onTagClick","expandByDefault","otherUrl","space","COLORS","_debounceTrackHover","debounce","tag","platform","is_mobile","trackAdvancedAnalyticsEvent","TagFacetsDistributionMeter","colors","expanded","setExpanded","hoveredValue","setHoveredValue","topSegments","slice","totalVisible","reduce","sum","count","hasOther","appendExcludeTagValuesCondition","excludeTopSegmentsUrl","push","isOther","TagSummary","open","onClick","e","preventDefault","StyledSummary","TagHeader","clickable","Array","isArray","Title","TitleType","skipWrapper","delay","TitleDescription","ExpandToggleButton","borderless","size","icon","direction","SegmentBar","pct","percent","pctLabel","Math","floor","segmentProps","isMobilePlatform","style","width","onMouseOver","onMouseLeave","OtherSegment","color","Segment","LegendAnimateContainer","animate","opacity","LegendContainer","segment","unfocus","focus","linkLabel","to","LegendRow","LegendDot","LegendText","NotApplicableLabel","LegendPercent","p","theme","fontSizeMedium","textColor","overflowEllipsis","gray300","shouldForwardProp","isPropValid","white","fontSizeExtraSmall","motion","prop","gray100","fontSizeSmall","gray400","Button","generateProfileFlamechartRoute","orgSlug","projectSlug","profileId","generateProfilingRouteWithQuery","generateProfilingRoute","generateProfileSummaryRouteWithQuery","transaction","generateProfileSummaryRoute","generateProfileFlamechartRouteWithQuery","generateProfileFlamechartRouteWithHighlightFrame","frameName","framePackage","generateProfileDetailsRouteWithQuery","generateProfileDetailsRoute","DisplayModes","TransactionFilterOptions","normalizeSearchConditions","filterParams","normalizeSearchConditionsWithTransactionName","removeFilter","MutableSearch","transactionSummaryRouteWithQuery","projectID","unselectedSeries","display","trendFunction","trendColumn","showTransactions","additionalQuery","subPath","generateTransactionSummaryRoute","searchFilter","formatString","statsPeriod","start","end","referrer","generateTraceLink","dateSelection","tableRow","_query","traceId","trace","getTraceDetailsUrl","generateTransactionLink","transactionName","spanId","eventSlug","generateEventSlug","getTransactionDetailsUrl","generateProfileLink","String","generateReplayLink","routes","getRouteStringFromRoutes","replayId","replaySlug","timestamp","transactionStartTimestamp","Date","getTime","event_t","SidebarSpacer"],"sourceRoot":""}