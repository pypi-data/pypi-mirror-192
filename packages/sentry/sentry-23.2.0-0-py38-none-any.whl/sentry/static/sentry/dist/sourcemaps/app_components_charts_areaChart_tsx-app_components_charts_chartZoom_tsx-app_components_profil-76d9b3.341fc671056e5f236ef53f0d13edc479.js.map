{"version":3,"file":"chunks/app_components_charts_areaChart_tsx-app_components_charts_chartZoom_tsx-app_components_profil-76d9b3.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/charts/areaChart.tsx","webpack:///./app/components/charts/series/areaSeries.tsx","webpack:///./app/components/charts/components/dataZoomSlider.tsx","webpack:///./app/components/charts/chartZoom.tsx","webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/components/performanceDuration.tsx","webpack:///./app/components/profiling/arrayLinks.tsx","webpack:///./app/components/profiling/suspectFunctions/functionsTable.tsx","webpack:///./app/components/profiling/suspectFunctions/suspectFunctionsTable.tsx","webpack:///./app/utils/profiling/hooks/useFunctions.tsx","webpack:///./app/utils/profiling/tableRenderer.tsx"],"sourcesContent":["import type {LineSeriesOption} from 'echarts';\n\nimport {Series} from 'sentry/types/echarts';\n\nimport AreaSeries from './series/areaSeries';\nimport BaseChart from './baseChart';\n\ntype ChartProps = Omit<React.ComponentProps<typeof BaseChart>, 'css'>;\n\nexport type AreaChartSeries = Series & Omit<LineSeriesOption, 'data' | 'name'>;\n\nexport interface AreaChartProps extends Omit<ChartProps, 'series'> {\n  series: AreaChartSeries[];\n  additionalSeries?: LineSeriesOption[];\n  stacked?: boolean;\n}\n\nexport function AreaChart({series, stacked, colors, ...props}: AreaChartProps) {\n  return (\n    <BaseChart\n      {...props}\n      data-test-id=\"area-chart\"\n      colors={colors}\n      series={series.map(({seriesName, data, ...otherSeriesProps}, i) =>\n        AreaSeries({\n          stack: stacked ? 'area' : undefined,\n          name: seriesName,\n          data: data.map(({name, value}) => [name, value]),\n          lineStyle: {\n            color: colors?.[i],\n            opacity: 1,\n            width: 0.4,\n          },\n          areaStyle: {\n            color: colors?.[i],\n            opacity: 1.0,\n          },\n          animation: false,\n          animationThreshold: 1,\n          animationDuration: 0,\n          ...otherSeriesProps,\n        })\n      )}\n    />\n  );\n}\n","import type {LineSeriesOption} from 'echarts';\n\nimport LineSeries from 'sentry/components/charts/series/lineSeries';\n\nexport default function AreaSeries(props: LineSeriesOption = {}): LineSeriesOption {\n  return LineSeries({\n    ...props,\n  });\n}\n","import 'echarts/lib/component/dataZoomSlider';\n\nimport type {SliderDataZoomComponentOption} from 'echarts';\n\nconst DEFAULT: SliderDataZoomComponentOption = {\n  realtime: false,\n  showDetail: false,\n  left: 0,\n  right: 6,\n  bottom: 8,\n};\n\nexport default function DataZoomSlider(\n  props: SliderDataZoomComponentOption | SliderDataZoomComponentOption[]\n): SliderDataZoomComponentOption[] {\n  // `props` can be boolean, if so return default\n  if (!props || !Array.isArray(props)) {\n    const dataZoom = {\n      ...DEFAULT,\n      ...props,\n    };\n    return [dataZoom];\n  }\n\n  return props;\n}\n","import {Component} from 'react';\nimport {InjectedRouter} from 'react-router';\nimport type {\n  DataZoomComponentOption,\n  InsideDataZoomComponentOption,\n  ToolboxComponentOption,\n  XAXisComponentOption,\n} from 'echarts';\nimport moment from 'moment';\nimport * as qs from 'query-string';\n\nimport {updateDateTime} from 'sentry/actionCreators/pageFilters';\nimport DataZoomInside from 'sentry/components/charts/components/dataZoomInside';\nimport DataZoomSlider from 'sentry/components/charts/components/dataZoomSlider';\nimport ToolBox from 'sentry/components/charts/components/toolBox';\nimport {DateString} from 'sentry/types';\nimport {\n  EChartChartReadyHandler,\n  EChartDataZoomHandler,\n  EChartFinishedHandler,\n  EChartRestoreHandler,\n} from 'sentry/types/echarts';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport {getUtcDateString, getUtcToLocalDateObject} from 'sentry/utils/dates';\n\nconst getDate = date =>\n  date ? moment.utc(date).format(moment.HTML5_FMT.DATETIME_LOCAL_SECONDS) : null;\n\ntype Period = {\n  end: DateString;\n  period: string | null;\n  start: DateString;\n};\n\nconst ZoomPropKeys = [\n  'period',\n  'xAxis',\n  'onChartReady',\n  'onDataZoom',\n  'onRestore',\n  'onFinished',\n] as const;\n\nexport type ZoomRenderProps = Pick<Props, (typeof ZoomPropKeys)[number]> & {\n  dataZoom?: DataZoomComponentOption[];\n  end?: Date;\n  isGroupedByDate?: boolean;\n  showTimeInTooltip?: boolean;\n  start?: Date;\n  toolBox?: ToolboxComponentOption;\n  utc?: boolean;\n};\n\ntype Props = {\n  children: (props: ZoomRenderProps) => React.ReactNode;\n  chartZoomOptions?: DataZoomComponentOption;\n  disabled?: boolean;\n  end?: DateString;\n  onChartReady?: EChartChartReadyHandler;\n  onDataZoom?: EChartDataZoomHandler;\n  onFinished?: EChartFinishedHandler;\n  onRestore?: EChartRestoreHandler;\n  onZoom?: (period: Period) => void;\n  period?: string | null;\n  router?: InjectedRouter;\n  showSlider?: boolean;\n  start?: DateString;\n  usePageDate?: boolean;\n  utc?: boolean | null;\n  xAxis?: XAXisComponentOption;\n  xAxisIndex?: number | number[];\n};\n\n/**\n * This is a very opinionated component that takes a render prop through `children`. It\n * will provide props to be passed to `BaseChart` to enable support of zooming without\n * eCharts' clunky zoom toolboxes.\n *\n * This also is very tightly coupled with the Global Selection Header. We can make it more\n * generic if need be in the future.\n */\nclass ChartZoom extends Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    // Zoom history\n    this.history = [];\n\n    // Initialize current period instance state for zoom history\n    this.saveCurrentPeriod(props);\n  }\n\n  componentDidUpdate() {\n    if (this.props.disabled) {\n      return;\n    }\n\n    // When component updates, make sure we sync current period state\n    // for use in zoom history\n    this.saveCurrentPeriod(this.props);\n  }\n\n  history: Period[];\n  currentPeriod?: Period;\n  zooming: (() => void) | null = null;\n\n  /**\n   * Save current period state from period in props to be used\n   * in handling chart's zoom history state\n   */\n  saveCurrentPeriod = props => {\n    this.currentPeriod = {\n      period: props.period,\n      start: getDate(props.start),\n      end: getDate(props.end),\n    };\n  };\n\n  /**\n   * Sets the new period due to a zoom related action\n   *\n   * Saves the current period to an instance property so that we\n   * can control URL state when zoom history is being manipulated\n   * by the chart controls.\n   *\n   * Saves a callback function to be called after chart animation is completed\n   */\n  setPeriod = ({period, start, end}, saveHistory = false) => {\n    const {router, onZoom, usePageDate} = this.props;\n    const startFormatted = getDate(start);\n    const endFormatted = getDate(end);\n\n    // Save period so that we can revert back to it when using echarts \"back\" navigation\n    if (saveHistory) {\n      this.history.push(this.currentPeriod!);\n    }\n\n    // Callback to let parent component know zoom has changed\n    // This is required for some more perceived responsiveness since\n    // we delay updating URL state so that chart animation can finish\n    //\n    // Parent container can use this to change into a loading state before\n    // URL parameters are changed\n    onZoom?.({\n      period,\n      start: startFormatted,\n      end: endFormatted,\n    });\n\n    this.zooming = () => {\n      if (usePageDate && router) {\n        const newQuery = {\n          ...router.location.query,\n          pageStart: start ? getUtcDateString(start) : undefined,\n          pageEnd: end ? getUtcDateString(end) : undefined,\n          pageStatsPeriod: period ?? undefined,\n        };\n\n        // Only push new location if query params has changed because this will cause a heavy re-render\n        if (qs.stringify(newQuery) !== qs.stringify(router.location.query)) {\n          router.push({\n            pathname: router.location.pathname,\n            query: newQuery,\n          });\n        }\n      } else {\n        updateDateTime(\n          {\n            period,\n            start: startFormatted\n              ? getUtcToLocalDateObject(startFormatted)\n              : startFormatted,\n            end: endFormatted ? getUtcToLocalDateObject(endFormatted) : endFormatted,\n          },\n          router\n        );\n      }\n\n      this.saveCurrentPeriod({period, start, end});\n    };\n  };\n\n  /**\n   * Enable zoom immediately instead of having to toggle to zoom\n   */\n  handleChartReady = chart => {\n    this.props.onChartReady?.(chart);\n  };\n\n  /**\n   * Restores the chart to initial viewport/zoom level\n   *\n   * Updates URL state to reflect initial params\n   */\n  handleZoomRestore = (evt, chart) => {\n    if (!this.history.length) {\n      return;\n    }\n\n    this.setPeriod(this.history[0]);\n\n    // reset history\n    this.history = [];\n\n    this.props.onRestore?.(evt, chart);\n  };\n\n  handleDataZoom = (evt, chart) => {\n    const model = chart.getModel();\n    const {startValue, endValue} = model._payload.batch[0];\n\n    // if `rangeStart` and `rangeEnd` are null, then we are going back\n    if (startValue === null && endValue === null) {\n      const previousPeriod = this.history.pop();\n\n      if (!previousPeriod) {\n        return;\n      }\n\n      this.setPeriod(previousPeriod);\n    } else {\n      const start = moment.utc(startValue);\n\n      // Add a day so we go until the end of the day (e.g. next day at midnight)\n      const end = moment.utc(endValue);\n\n      this.setPeriod({period: null, start, end}, true);\n    }\n\n    this.props.onDataZoom?.(evt, chart);\n  };\n\n  /**\n   * Chart event when *any* rendering+animation finishes\n   *\n   * `this.zooming` acts as a callback function so that\n   * we can let the native zoom animation on the chart complete\n   * before we update URL state and re-render\n   */\n  handleChartFinished = (_props, chart) => {\n    if (typeof this.zooming === 'function') {\n      this.zooming();\n      this.zooming = null;\n    }\n\n    // This attempts to activate the area zoom toolbox feature\n    const zoom = chart._componentsViews?.find(c => c._features && c._features.dataZoom);\n    if (zoom && !zoom._features.dataZoom._isZoomActive) {\n      // Calling dispatchAction will re-trigger handleChartFinished\n      chart.dispatchAction({\n        type: 'takeGlobalCursor',\n        key: 'dataZoomSelect',\n        dataZoomSelectActive: true,\n      });\n    }\n\n    callIfFunction(this.props.onFinished);\n  };\n\n  render() {\n    const {\n      utc: _utc,\n      start: _start,\n      end: _end,\n      disabled,\n      children,\n      xAxisIndex,\n\n      router: _router,\n      onZoom: _onZoom,\n      onRestore: _onRestore,\n      onChartReady: _onChartReady,\n      onDataZoom: _onDataZoom,\n      onFinished: _onFinished,\n      showSlider,\n      chartZoomOptions,\n      ...props\n    } = this.props;\n\n    const utc = _utc ?? undefined;\n    const start = _start ? getUtcToLocalDateObject(_start) : undefined;\n    const end = _end ? getUtcToLocalDateObject(_end) : undefined;\n\n    if (disabled) {\n      return children({\n        utc,\n        start,\n        end,\n        ...props,\n      });\n    }\n    const renderProps = {\n      // Zooming only works when grouped by date\n      isGroupedByDate: true,\n      onChartReady: this.handleChartReady,\n      utc,\n      start,\n      end,\n      dataZoom: showSlider\n        ? [\n            ...DataZoomSlider({xAxisIndex, ...chartZoomOptions}),\n            ...DataZoomInside({\n              xAxisIndex,\n              ...(chartZoomOptions as InsideDataZoomComponentOption),\n            }),\n          ]\n        : DataZoomInside({\n            xAxisIndex,\n            ...(chartZoomOptions as InsideDataZoomComponentOption),\n          }),\n      showTimeInTooltip: true,\n      toolBox: ToolBox(\n        {},\n        {\n          dataZoom: {\n            title: {\n              zoom: '',\n              back: '',\n            },\n            iconStyle: {\n              borderWidth: 0,\n              color: 'transparent',\n              opacity: 0,\n            },\n          },\n        }\n      ),\n      onDataZoom: this.handleDataZoom,\n      onFinished: this.handleChartFinished,\n      onRestore: this.handleZoomRestore,\n      ...props,\n    };\n\n    return children(renderProps);\n  }\n}\n\nexport default ChartZoom;\n","import {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport omit from 'lodash/omit';\n\nimport Link from 'sentry/components/links/link';\nimport {IconArrow} from 'sentry/icons';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  canSort: boolean;\n  direction: Directions;\n  generateSortLink: () => LocationDescriptorObject | undefined;\n  title: React.ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n  replace?: boolean;\n};\n\nfunction SortLink({\n  align,\n  title,\n  canSort,\n  generateSortLink,\n  onClick,\n  direction,\n  replace,\n}: Props) {\n  const target = generateSortLink();\n\n  if (!target || !canSort) {\n    return <StyledNonLink align={align}>{title}</StyledNonLink>;\n  }\n\n  const arrow = !direction ? null : (\n    <StyledIconArrow size=\"xs\" direction={direction === 'desc' ? 'down' : 'up'} />\n  );\n\n  const handleOnClick: React.MouseEventHandler<HTMLAnchorElement> = e => {\n    if (replace) {\n      e.preventDefault();\n      browserHistory.replace(target);\n    }\n    onClick?.(e);\n  };\n\n  return (\n    <StyledLink align={align} to={target} onClick={handleOnClick}>\n      {title} {arrow}\n    </StyledLink>\n  );\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  const forwardProps = omit(props, ['align', 'css']);\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import Duration from 'sentry/components/duration';\nimport {defined} from 'sentry/utils';\n\ninterface DurationProps {\n  abbreviation?: boolean;\n}\n\ninterface SecondsProps extends DurationProps {\n  seconds: number;\n}\n\ninterface MillisecondsProps extends DurationProps {\n  milliseconds: number;\n}\n\ninterface NanosecondsProps extends DurationProps {\n  nanoseconds: number;\n}\n\ntype PerformanceDurationProps = SecondsProps | MillisecondsProps | NanosecondsProps;\n\nfunction isMilliseconds(props: PerformanceDurationProps): props is MillisecondsProps {\n  return defined((props as MillisecondsProps).milliseconds);\n}\n\nfunction isNanoseconds(props: PerformanceDurationProps): props is NanosecondsProps {\n  return defined((props as NanosecondsProps).nanoseconds);\n}\n\nfunction PerformanceDuration(props: PerformanceDurationProps) {\n  const normalizedSeconds = isNanoseconds(props)\n    ? props.nanoseconds / 1_000_000_000\n    : isMilliseconds(props)\n    ? props.milliseconds / 1000\n    : props.seconds;\n\n  return (\n    <Duration\n      abbreviation={props.abbreviation}\n      seconds={normalizedSeconds}\n      fixedDigits={2}\n    />\n  );\n}\n\nexport default PerformanceDuration;\n","import {useState} from 'react';\nimport styled from '@emotion/styled';\nimport {LocationDescriptor} from 'history';\n\nimport Link from 'sentry/components/links/link';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ntype Item = {\n  target: LocationDescriptor;\n  value: string;\n  onClick?: () => void;\n};\n\ninterface ArrayLinksProps {\n  items: Item[];\n}\n\nfunction ArrayLinks({items}: ArrayLinksProps) {\n  const [expanded, setExpanded] = useState(false);\n  const firstItem = items[0];\n\n  return (\n    <ArrayContainer expanded={expanded}>\n      {firstItem && <LinkedItem item={firstItem} />}\n      {items.length > 1 &&\n        expanded &&\n        items\n          .slice(1, items.length)\n          .map(item => <LinkedItem key={item.value} item={item} />)}\n      {items.length > 1 ? (\n        <ButtonContainer>\n          <button onClick={() => setExpanded(!expanded)}>\n            {expanded ? t('[collapse]') : t('[+%s more]', items.length - 1)}\n          </button>\n        </ButtonContainer>\n      ) : null}\n    </ArrayContainer>\n  );\n}\n\nfunction LinkedItem({item}: {item: Item}) {\n  return (\n    <ArrayItem>\n      <Link to={item.target} onClick={item?.onClick}>\n        {item.value}\n      </Link>\n    </ArrayItem>\n  );\n}\n\nconst ArrayContainer = styled('div')<{expanded: boolean}>`\n  display: flex;\n  flex-direction: ${p => (p.expanded ? 'column' : 'row')};\n`;\n\nconst ArrayItem = styled('span')`\n  flex-shrink: 1;\n  display: block;\n\n  ${p => p.theme.overflowEllipsis};\n  width: unset;\n`;\n\nconst ButtonContainer = styled('div')`\n  white-space: nowrap;\n\n  & button {\n    background: none;\n    border: 0;\n    outline: none;\n    padding: 0;\n    cursor: pointer;\n    color: ${p => p.theme.linkColor};\n    margin-left: ${space(0.5)};\n  }\n`;\n\nexport {ArrayLinks};\n","import {useCallback, useMemo} from 'react';\nimport styled from '@emotion/styled';\n\nimport Count from 'sentry/components/count';\nimport GridEditable, {\n  COL_WIDTH_UNDEFINED,\n  GridColumnOrder,\n} from 'sentry/components/gridEditable';\nimport PerformanceDuration from 'sentry/components/performanceDuration';\nimport {ArrayLinks} from 'sentry/components/profiling/arrayLinks';\nimport {t} from 'sentry/locale';\nimport {Project} from 'sentry/types';\nimport {SuspectFunction} from 'sentry/types/profiling/core';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {Container, NumberContainer} from 'sentry/utils/discover/styles';\nimport {getShortEventId} from 'sentry/utils/events';\nimport {generateProfileFlamechartRouteWithQuery} from 'sentry/utils/profiling/routes';\nimport {renderTableHead} from 'sentry/utils/profiling/tableRenderer';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport useOrganization from 'sentry/utils/useOrganization';\n\ninterface FunctionsTableProps {\n  analyticsPageSource: 'performance_transaction' | 'profiling_transaction';\n  error: string | null;\n  functions: SuspectFunction[];\n  isLoading: boolean;\n  project: Project | undefined;\n  sort: string;\n}\n\nfunction FunctionsTable(props: FunctionsTableProps) {\n  const location = useLocation();\n  const organization = useOrganization();\n\n  const sort = useMemo(() => {\n    let column = props.sort;\n    let order: 'asc' | 'desc' = 'asc' as const;\n\n    if (props.sort.startsWith('-')) {\n      column = props.sort.substring(1);\n      order = 'desc' as const;\n    }\n\n    if (!SORTABLE_COLUMNS.has(column as any)) {\n      column = 'p99';\n    }\n\n    return {\n      key: column as TableColumnKey,\n      order,\n    };\n  }, [props.sort]);\n\n  const functions: TableDataRow[] = useMemo(() => {\n    const project = props.project;\n    if (!project) {\n      return [];\n    }\n    return props.functions.map(func => {\n      const {worst, examples, ...rest} = func;\n\n      const allExamples = examples.filter(example => example !== worst);\n      allExamples.unshift(worst);\n\n      return {\n        ...rest,\n        examples: allExamples.map(example => {\n          const profileId = example.replaceAll('-', '');\n          return {\n            value: getShortEventId(profileId),\n            onClick: () =>\n              trackAdvancedAnalyticsEvent('profiling_views.go_to_flamegraph', {\n                organization,\n                source: `${props.analyticsPageSource}.suspect_functions_table`,\n              }),\n            target: generateProfileFlamechartRouteWithQuery({\n              orgSlug: organization.slug,\n              projectSlug: project.slug,\n              profileId,\n              query: {\n                // specify the frame to focus, the flamegraph will switch\n                // to the appropriate thread when these are specified\n                frameName: func.name,\n                framePackage: func.package,\n              },\n            }),\n          };\n        }),\n      };\n    });\n  }, [organization, props.project, props.functions, props.analyticsPageSource]);\n\n  const generateSortLink = useCallback(\n    (column: TableColumnKey) => {\n      if (!SORTABLE_COLUMNS.has(column)) {\n        return () => undefined;\n      }\n\n      const direction =\n        sort.key !== column ? 'desc' : sort.order === 'desc' ? 'asc' : 'desc';\n\n      return () => ({\n        ...location,\n        query: {\n          ...location.query,\n          functionsSort: `${direction === 'desc' ? '-' : ''}${column}`,\n        },\n      });\n    },\n    [location, sort]\n  );\n\n  return (\n    <GridEditable\n      isLoading={props.isLoading}\n      error={props.error}\n      data={functions}\n      columnOrder={COLUMN_ORDER.map(key => COLUMNS[key])}\n      columnSortBy={[]}\n      grid={{\n        renderHeadCell: renderTableHead({\n          currentSort: sort,\n          rightAlignedColumns: RIGHT_ALIGNED_COLUMNS,\n          sortableColumns: SORTABLE_COLUMNS,\n          generateSortLink,\n        }),\n        renderBodyCell: renderFunctionsTableCell,\n      }}\n      location={location}\n    />\n  );\n}\n\nconst RIGHT_ALIGNED_COLUMNS = new Set<TableColumnKey>(['p75', 'p99', 'count']);\nconst SORTABLE_COLUMNS = RIGHT_ALIGNED_COLUMNS;\n\nfunction renderFunctionsTableCell(\n  column: TableColumn,\n  dataRow: TableDataRow,\n  rowIndex: number,\n  columnIndex: number\n) {\n  return (\n    <ProfilingFunctionsTableCell\n      column={column}\n      dataRow={dataRow}\n      rowIndex={rowIndex}\n      columnIndex={columnIndex}\n    />\n  );\n}\n\ninterface ProfilingFunctionsTableCellProps {\n  column: TableColumn;\n  columnIndex: number;\n  dataRow: TableDataRow;\n  rowIndex: number;\n}\n\nconst EmptyValueContainer = styled('span')`\n  color: ${p => p.theme.gray300};\n`;\n\nfunction ProfilingFunctionsTableCell({\n  column,\n  dataRow,\n}: ProfilingFunctionsTableCellProps) {\n  const value = dataRow[column.key];\n\n  switch (column.key) {\n    case 'count':\n      return (\n        <NumberContainer>\n          <Count value={value} />\n        </NumberContainer>\n      );\n    case 'p75':\n    case 'p99':\n      return (\n        <NumberContainer>\n          <PerformanceDuration nanoseconds={value} abbreviation />\n        </NumberContainer>\n      );\n    case 'examples':\n      return <ArrayLinks items={value} />;\n    case 'name':\n    case 'package':\n      const name = value || <EmptyValueContainer>{t('Unknown')}</EmptyValueContainer>;\n      return <Container>{name}</Container>;\n    default:\n      return <Container>{value}</Container>;\n  }\n}\n\ntype TableColumnKey = keyof Omit<SuspectFunction, 'fingerprint' | 'worst'>;\n\ntype TableDataRow = Record<TableColumnKey, any>;\n\ntype TableColumn = GridColumnOrder<TableColumnKey>;\n\nconst COLUMN_ORDER: TableColumnKey[] = [\n  'name',\n  'package',\n  'count',\n  'p75',\n  'p99',\n  'examples',\n];\n\nconst COLUMNS: Record<Exclude<TableColumnKey, 'p95'>, TableColumn> = {\n  name: {\n    key: 'name',\n    name: t('Name'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  package: {\n    key: 'package',\n    name: t('Package'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  path: {\n    key: 'path',\n    name: t('Path'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p75: {\n    key: 'p75',\n    name: t('P75 Total Duration'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p99: {\n    key: 'p99',\n    name: t('P99 Total Duration'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  count: {\n    key: 'count',\n    name: t('Total Occurrences'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  examples: {\n    key: 'examples',\n    name: t('Example Profiles'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n};\n\nexport {FunctionsTable};\n","import {Fragment, useCallback, useMemo, useState} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {CompactSelect} from 'sentry/components/compactSelect';\nimport Pagination from 'sentry/components/pagination';\nimport {FunctionsTable} from 'sentry/components/profiling/suspectFunctions/functionsTable';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Project} from 'sentry/types';\nimport {useFunctions} from 'sentry/utils/profiling/hooks/useFunctions';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport usePageFilters from 'sentry/utils/usePageFilters';\n\ninterface SuspectFunctionsTableProps {\n  analyticsPageSource: 'performance_transaction' | 'profiling_transaction';\n  project: Project | undefined;\n  transaction: string;\n}\n\nconst FUNCTIONS_CURSOR_NAME = 'functionsCursor';\n\nexport function SuspectFunctionsTable({\n  analyticsPageSource,\n  project,\n  transaction,\n}: SuspectFunctionsTableProps) {\n  const {selection} = usePageFilters();\n  const [functionType, setFunctionType] = useState<'application' | 'system' | 'all'>(\n    'application'\n  );\n  const location = useLocation();\n  const functionsCursor = useMemo(\n    () => decodeScalar(location.query.functionsCursor),\n    [location.query.functionsCursor]\n  );\n  const functionsSort = useMemo(\n    () => decodeScalar(location.query.functionsSort, '-p99'),\n    [location.query.functionsSort]\n  );\n\n  const handleFunctionsCursor = useCallback((cursor, pathname, query) => {\n    browserHistory.push({\n      pathname,\n      query: {...query, [FUNCTIONS_CURSOR_NAME]: cursor},\n    });\n  }, []);\n\n  const functionsQuery = useFunctions({\n    cursor: functionsCursor,\n    project,\n    query: '', // TODO: This doesnt support the same filters\n    selection,\n    transaction,\n    sort: functionsSort,\n    functionType,\n  });\n  return (\n    <Fragment>\n      <TableHeader>\n        <CompactSelect\n          triggerProps={{prefix: t('Suspect Functions'), size: 'xs'}}\n          value={functionType}\n          options={[\n            {\n              label: t('All'),\n              value: 'all' as const,\n            },\n            {\n              label: t('Application'),\n              value: 'application' as const,\n            },\n            {\n              label: t('System'),\n              value: 'system' as const,\n            },\n          ]}\n          onChange={({value}) => setFunctionType(value)}\n        />\n        <StyledPagination\n          pageLinks={\n            functionsQuery.isFetched ? functionsQuery.data?.[0]?.pageLinks : null\n          }\n          onCursor={handleFunctionsCursor}\n          size=\"xs\"\n        />\n      </TableHeader>\n      <FunctionsTable\n        analyticsPageSource={analyticsPageSource}\n        error={functionsQuery.isError ? functionsQuery.error.message : null}\n        isLoading={functionsQuery.isLoading}\n        functions={\n          functionsQuery.isFetched ? functionsQuery.data?.[0].functions ?? [] : []\n        }\n        project={project}\n        sort={functionsSort}\n      />\n    </Fragment>\n  );\n}\n\nconst TableHeader = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${space(1)};\n`;\n\nconst StyledPagination = styled(Pagination)`\n  margin: 0 0 0 ${space(1)};\n`;\n","import {useQuery} from '@tanstack/react-query';\n\nimport {Client, ResponseMeta} from 'sentry/api';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {PageFilters, Project} from 'sentry/types';\nimport {SuspectFunction} from 'sentry/types/profiling/core';\nimport {defined} from 'sentry/utils';\nimport RequestError from 'sentry/utils/requestError/requestError';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport useApi from 'sentry/utils/useApi';\nimport useOrganization from 'sentry/utils/useOrganization';\n\ntype FunctionsResult = {\n  functions: SuspectFunction[];\n  pageLinks: string | null;\n};\n\ninterface UseFunctionsOptions {\n  project: Project | undefined;\n  query: string;\n  sort: string;\n  transaction: string | null;\n  cursor?: string;\n  enabled?: boolean;\n  functionType?: 'application' | 'system' | 'all';\n  selection?: PageFilters;\n}\n\nfunction useFunctions({\n  functionType,\n  project,\n  query,\n  transaction,\n  sort,\n  cursor,\n  selection,\n  enabled = true,\n}: UseFunctionsOptions) {\n  const api = useApi();\n  const organization = useOrganization();\n\n  const path = `/projects/${organization.slug}/${project?.slug}/profiling/functions/`;\n  const fetchFunctionsOptions = {\n    functionType,\n    query,\n    selection,\n    sort,\n    transaction,\n    cursor,\n    enabled,\n  };\n  const queryKey = [path, fetchFunctionsOptions];\n\n  const queryFn = () => {\n    if (\n      !defined(fetchFunctionsOptions.selection) ||\n      !defined(fetchFunctionsOptions.transaction) ||\n      !defined(project)\n    ) {\n      throw Error(\n        'selection, transaction and project arguments required for fetchFunctions'\n      );\n    }\n\n    return fetchFunctions(\n      api,\n      path,\n      // tsc doesn't infer the new type from the assertion above??\n      fetchFunctionsOptions as FetchFunctionsOptions\n    );\n  };\n\n  return useQuery<FetchFunctionsReturn, RequestError>({\n    queryKey,\n    queryFn,\n    refetchOnWindowFocus: false,\n    retry: false,\n    enabled,\n  });\n}\n\ninterface FetchFunctionsOptions {\n  cursor: string | undefined;\n  enabled: boolean;\n  functionType: 'application' | 'system' | 'all' | undefined;\n  query: string;\n  selection: PageFilters;\n  sort: string;\n  transaction: string;\n}\n\ntype FetchFunctionsReturn =\n  | [FunctionsResult, string | undefined, ResponseMeta | undefined]\n  | undefined;\nfunction fetchFunctions(\n  api: Client,\n  path: string,\n  {cursor, functionType, query, selection, sort, transaction}: FetchFunctionsOptions\n): Promise<FetchFunctionsReturn> {\n  const conditions = new MutableSearch(query);\n  conditions.setFilterValues('transaction_name', [transaction]);\n\n  return api.requestPromise(path, {\n    method: 'GET',\n    includeAllArgs: true,\n    query: {\n      cursor,\n      environment: selection.environments,\n      ...normalizeDateTimeParams(selection.datetime),\n      query: conditions.formatString(),\n      sort,\n      is_application:\n        functionType === 'application'\n          ? '1'\n          : functionType === 'system'\n          ? '0'\n          : undefined,\n    },\n  });\n}\nexport {useFunctions};\n","import {LocationDescriptorObject} from 'history';\n\nimport {GridColumnOrder, GridColumnSortBy} from 'sentry/components/gridEditable';\nimport SortLink from 'sentry/components/gridEditable/sortLink';\n\ninterface TableHeadProps<K> {\n  currentSort?: GridColumnSortBy<K> | null;\n  generateSortLink?: (column: K) => () => LocationDescriptorObject | undefined;\n  onClick?(column: GridColumnOrder<K>, e: React.MouseEvent<HTMLAnchorElement>): void;\n  rightAlignedColumns?: Set<K>;\n  sortableColumns?: Set<K>;\n}\n\nexport function renderTableHead<K>({\n  currentSort,\n  generateSortLink,\n  rightAlignedColumns,\n  sortableColumns,\n  onClick,\n}: TableHeadProps<K>) {\n  return (column: GridColumnOrder<K>, _columnIndex: number) => {\n    return (\n      <SortLink\n        onClick={e => onClick?.(column, e)}\n        align={rightAlignedColumns?.has(column.key) ? 'right' : 'left'}\n        title={column.name}\n        direction={currentSort?.key === column.key ? currentSort?.order : undefined}\n        canSort={sortableColumns?.has(column.key) || false}\n        generateSortLink={generateSortLink?.(column.key) ?? (() => undefined)}\n        replace\n      />\n    );\n  };\n}\n"],"names":["AreaChart","series","stacked","colors","props","map","i","seriesName","data","otherSeriesProps","LineSeries","AreaSeries","stack","undefined","name","value","lineStyle","color","opacity","width","areaStyle","animation","animationThreshold","animationDuration","DEFAULT","realtime","showDetail","left","right","bottom","DataZoomSlider","Array","isArray","getDate","date","moment","format","ChartZoom","Component","constructor","super","this","currentPeriod","period","start","end","saveHistory","router","onZoom","usePageDate","startFormatted","endFormatted","history","push","zooming","newQuery","location","query","pageStart","getUtcDateString","pageEnd","pageStatsPeriod","qs","pathname","updateDateTime","getUtcToLocalDateObject","saveCurrentPeriod","chart","onChartReady","evt","length","setPeriod","onRestore","model","getModel","startValue","endValue","_payload","batch","previousPeriod","pop","onDataZoom","_props","zoom","_componentsViews","find","c","_features","dataZoom","_isZoomActive","dispatchAction","type","key","dataZoomSelectActive","callIfFunction","onFinished","componentDidUpdate","disabled","render","utc","_utc","_start","_end","children","xAxisIndex","_router","_onZoom","_onRestore","_onChartReady","_onDataZoom","_onFinished","showSlider","chartZoomOptions","isGroupedByDate","handleChartReady","DataZoomInside","showTimeInTooltip","toolBox","ToolBox","title","back","iconStyle","borderWidth","handleDataZoom","handleChartFinished","handleZoomRestore","SortLink","align","canSort","generateSortLink","onClick","direction","replace","target","StyledNonLink","arrow","StyledIconArrow","size","StyledLink","to","e","preventDefault","browserHistory","forwardProps","omit","p","IconArrow","PerformanceDuration","normalizedSeconds","defined","nanoseconds","isNanoseconds","milliseconds","isMilliseconds","seconds","abbreviation","fixedDigits","ArrayLinks","items","expanded","setExpanded","useState","firstItem","ArrayContainer","LinkedItem","item","slice","ButtonContainer","t","ArrayItem","theme","overflowEllipsis","linkColor","space","FunctionsTable","useLocation","organization","useOrganization","sort","useMemo","column","order","startsWith","substring","SORTABLE_COLUMNS","has","functions","project","func","worst","examples","rest","allExamples","filter","example","unshift","profileId","replaceAll","getShortEventId","trackAdvancedAnalyticsEvent","source","analyticsPageSource","generateProfileFlamechartRouteWithQuery","orgSlug","slug","projectSlug","frameName","framePackage","package","useCallback","functionsSort","isLoading","error","columnOrder","COLUMN_ORDER","COLUMNS","columnSortBy","grid","renderHeadCell","renderTableHead","currentSort","rightAlignedColumns","RIGHT_ALIGNED_COLUMNS","sortableColumns","renderBodyCell","renderFunctionsTableCell","Set","dataRow","rowIndex","columnIndex","ProfilingFunctionsTableCell","EmptyValueContainer","gray300","COL_WIDTH_UNDEFINED","path","p75","p99","count","SuspectFunctionsTable","transaction","selection","usePageFilters","functionType","setFunctionType","functionsCursor","decodeScalar","handleFunctionsCursor","cursor","functionsQuery","useFunctions","Fragment","TableHeader","triggerProps","prefix","options","label","onChange","StyledPagination","pageLinks","isFetched","onCursor","isError","message","Pagination","enabled","api","useApi","fetchFunctionsOptions","queryKey","useQuery","queryFn","Error","conditions","MutableSearch","setFilterValues","requestPromise","method","includeAllArgs","environment","environments","normalizeDateTimeParams","datetime","formatString","is_application","fetchFunctions","refetchOnWindowFocus","retry","_columnIndex"],"sourceRoot":""}