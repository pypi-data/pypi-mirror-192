{"version":3,"file":"chunks/app_views_performance_transactionSummary_transactionProfiles_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"ihDAkCA,SAASA,IACP,MAAMC,GAAWC,EAAAA,EAAAA,KACXC,GAAeC,EAAAA,EAAAA,KACfC,GAAWC,EAAAA,EAAAA,MACX,UAACC,IAAaC,EAAAA,EAAAA,KAEdC,GAAiBC,EAAAA,EAAAA,UACrB,KAAMC,EAAAA,EAAAA,IAAaV,EAASW,MAAMC,SAClC,CAACZ,EAASW,MAAMC,SAGZC,EAAUT,EAASA,SAASU,MAAKC,GAAKA,EAAEC,KAAOhB,EAASW,MAAME,UAC9DI,GAASC,EAAAA,EAAAA,GAAuBL,GAASM,UAEzCC,GAAOC,EAAAA,EAAAA,KAA+BX,EAAAA,EAAAA,IAAaV,EAASW,MAAMS,MAAOH,EAAQ,CACrFK,IAAK,YACLC,MAAO,UAGFZ,EAAOa,IAAYC,EAAAA,EAAAA,WAAS,KAGjC,MAAMC,EAAS,IAAIC,EAAAA,GAAc,IAC3BC,GAAclB,EAAAA,EAAAA,IAAaV,EAASW,MAAMiB,aAMhD,OAJIC,EAAAA,EAAAA,IAAQD,IACVF,EAAOI,gBAAgB,cAAe,CAACF,IAGlCF,CAAM,IAGTK,GAAWC,EAAAA,EAAAA,IAAqC,CACpDpB,OAAQJ,EACRS,SACAN,MAAOA,EAAMsB,eACbb,OACAc,MAAO,GACPC,SAAU,8CAGNC,GAAgDC,EAAAA,EAAAA,cACnDC,IACCd,EAAS,IAAIG,EAAAA,GAAcW,IAC3BC,EAAAA,eAAAA,KAAoB,IACfvC,EACHW,MAAO,IACFX,EAASW,MACZC,YAAQ4B,EACR7B,MAAO2B,QAAeE,IAExB,GAEJ,CAACxC,IAGGyC,GAAiBC,EAAAA,EAAAA,GAAkB,CAAC/B,MAAO,GAAIL,cAC/CsB,GAAclB,EAAAA,EAAAA,IAAaV,EAASW,MAAMiB,aAChD,OACE,QAAC,KAAU,CACT5B,SAAUA,EACVE,aAAcA,EACdE,SAAUA,EAASA,SACnBuC,IAAKC,EAAAA,EAAAA,UACLC,kBAAmB,IAAMC,EAAAA,GAAAA,aAAuB9C,GAChD+C,iBAAkB,KAAMC,EAAAA,EAAAA,GAAG,cAAcpB,GACzCqB,eAAgB,KAEZ,QAAC,KAAW,CAACC,WAAS,aACpB,QAACC,EAAa,YACZ,QAAC,IAAa,CAACC,WAAS,aACtB,QAAC,IAAqB,KACtB,QAAC,IAAc,CAACC,cAAc,aAEhC,QAAC,IAAc,CACbnD,aAAcA,EACdoD,mBAAiB,EACjBC,aAAa,kBACbC,cAAef,EACf9B,MAAOA,EAAMsB,eACbwB,SAAUrB,EACVsB,eAAgBC,EAAAA,SAGpB,QAAC,IAAkB,CACjBC,QAAS3C,EACT4C,KAA0B,YAApB9B,EAAS+B,OAAuB/B,EAAS8B,KAAK,GAAK,KACzDE,MAA2B,UAApBhC,EAAS+B,QAAqBd,EAAAA,EAAAA,GAAE,2BAA6B,KACpEgB,UAA+B,YAApBjC,EAAS+B,OACpB1C,KAAMA,QAOpB,CAhGSrB,EAAQ,uBAkGjB,MAAMoD,GAAgB,OAAO,MAAK,oBAAZ,CAAa,kBAChBc,EAAAA,EAAAA,GAAM,GAAE,SAClBA,EAAAA,EAAAA,GAAM,GAAE,wDAKjB,G","sources":["webpack:///./app/views/performance/transactionSummary/transactionProfiles/index.tsx"],"sourcesContent":["import {useCallback, useMemo, useState} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport {ProfileEventsTable} from 'sentry/components/profiling/profileEventsTable';\nimport SmartSearchBar, {SmartSearchBarProps} from 'sentry/components/smartSearchBar';\nimport {MAX_QUERY_LENGTH} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {\n  formatSort,\n  useProfileEvents,\n} from 'sentry/utils/profiling/hooks/useProfileEvents';\nimport {useProfileFilters} from 'sentry/utils/profiling/hooks/useProfileFilters';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport usePageFilters from 'sentry/utils/usePageFilters';\nimport useProjects from 'sentry/utils/useProjects';\nimport Tab from 'sentry/views/performance/transactionSummary/tabs';\nimport {\n  getProfilesTableFields,\n  ProfilingFieldType,\n} from 'sentry/views/profiling/profileSummary/content';\n\nimport PageLayout from '../pageLayout';\n\nfunction Profiles(): React.ReactElement {\n  const location = useLocation();\n  const organization = useOrganization();\n  const projects = useProjects();\n  const {selection} = usePageFilters();\n\n  const profilesCursor = useMemo(\n    () => decodeScalar(location.query.cursor),\n    [location.query.cursor]\n  );\n\n  const project = projects.projects.find(p => p.id === location.query.project);\n  const fields = getProfilesTableFields(project?.platform);\n\n  const sort = formatSort<ProfilingFieldType>(decodeScalar(location.query.sort), fields, {\n    key: 'timestamp',\n    order: 'desc',\n  });\n\n  const [query, setQuery] = useState(() => {\n    // The search fields from the URL differ between profiling and\n    // events dataset. For now, just drop everything except transaction\n    const search = new MutableSearch('');\n    const transaction = decodeScalar(location.query.transaction);\n\n    if (defined(transaction)) {\n      search.setFilterValues('transaction', [transaction]);\n    }\n\n    return search;\n  });\n\n  const profiles = useProfileEvents<ProfilingFieldType>({\n    cursor: profilesCursor,\n    fields,\n    query: query.formatString(),\n    sort,\n    limit: 30,\n    referrer: 'api.profiling.transactions-profiles-table',\n  });\n\n  const handleSearch: SmartSearchBarProps['onSearch'] = useCallback(\n    (searchQuery: string) => {\n      setQuery(new MutableSearch(searchQuery));\n      browserHistory.push({\n        ...location,\n        query: {\n          ...location.query,\n          cursor: undefined,\n          query: searchQuery || undefined,\n        },\n      });\n    },\n    [location]\n  );\n\n  const profileFilters = useProfileFilters({query: '', selection});\n  const transaction = decodeScalar(location.query.transaction);\n  return (\n    <PageLayout\n      location={location}\n      organization={organization}\n      projects={projects.projects}\n      tab={Tab.Profiling}\n      generateEventView={() => EventView.fromLocation(location)}\n      getDocumentTitle={() => t(`Profile: %s`, transaction)}\n      childComponent={() => {\n        return (\n          <Layout.Main fullWidth>\n            <FilterActions>\n              <PageFilterBar condensed>\n                <EnvironmentPageFilter />\n                <DatePageFilter alignDropdown=\"left\" />\n              </PageFilterBar>\n              <SmartSearchBar\n                organization={organization}\n                hasRecentSearches\n                searchSource=\"profile_landing\"\n                supportedTags={profileFilters}\n                query={query.formatString()}\n                onSearch={handleSearch}\n                maxQueryLength={MAX_QUERY_LENGTH}\n              />\n            </FilterActions>\n            <ProfileEventsTable\n              columns={fields}\n              data={profiles.status === 'success' ? profiles.data[0] : null}\n              error={profiles.status === 'error' ? t('Unable to load profiles') : null}\n              isLoading={profiles.status === 'loading'}\n              sort={sort}\n            />\n          </Layout.Main>\n        );\n      }}\n    />\n  );\n}\n\nconst FilterActions = styled('div')`\n  margin-bottom: ${space(2)};\n  gap: ${space(2)};\n  display: grid;\n  grid-template-columns: min-content 1fr;\n`;\n\nexport default Profiles;\n"],"names":["Profiles","location","useLocation","organization","useOrganization","projects","useProjects","selection","usePageFilters","profilesCursor","useMemo","decodeScalar","query","cursor","project","find","p","id","fields","getProfilesTableFields","platform","sort","formatSort","key","order","setQuery","useState","search","MutableSearch","transaction","defined","setFilterValues","profiles","useProfileEvents","formatString","limit","referrer","handleSearch","useCallback","searchQuery","browserHistory","undefined","profileFilters","useProfileFilters","tab","Tab","generateEventView","EventView","getDocumentTitle","t","childComponent","fullWidth","FilterActions","condensed","alignDropdown","hasRecentSearches","searchSource","supportedTags","onSearch","maxQueryLength","MAX_QUERY_LENGTH","columns","data","status","error","isLoading","space"],"sourceRoot":""}