{"version":3,"file":"chunks/app_views_admin_adminUsers_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/resultGrid.tsx","webpack:///./app/views/admin/adminUsers.tsx","webpack:///./app/views/asyncView.tsx"],"sourcesContent":["import {Component} from 'react';\nimport {browserHistory} from 'react-router';\nimport {Location} from 'history';\n\nimport {Client, RequestOptions} from 'sentry/api';\nimport DropdownLink from 'sentry/components/dropdownLink';\nimport MenuItem from 'sentry/components/menuItem';\nimport Pagination from 'sentry/components/pagination';\nimport {IconSearch} from 'sentry/icons';\nimport withApi from 'sentry/utils/withApi';\n\ntype Option = [value: string, label: string];\n\ntype FilterProps = {\n  location: Location;\n  name: string;\n  options: Option[];\n  path: string;\n  queryKey: string;\n  value: string;\n};\n\nclass Filter extends Component<FilterProps> {\n  getCurrentLabel() {\n    const selected = this.props.options.find(\n      item => item[0] === (this.props.value ?? '')\n    );\n    if (selected) {\n      return this.props.name + ': ' + selected[1];\n    }\n    return this.props.name + ': ' + 'Any';\n  }\n\n  getDefaultItem() {\n    const query = {...this.props.location.query, cursor: ''};\n    delete query[this.props.queryKey];\n\n    return (\n      <MenuItem\n        key=\"\"\n        isActive={this.props.value === '' || !this.props.value}\n        to={{pathname: this.props.path, query}}\n      >\n        Any\n      </MenuItem>\n    );\n  }\n\n  getSelector = () => (\n    <DropdownLink title={this.getCurrentLabel()}>\n      {this.getDefaultItem()}\n      {this.props.options.map(([value, label]) => {\n        const filterQuery = {\n          [this.props.queryKey]: value,\n          cursor: '',\n        };\n\n        const query = {...this.props.location.query, ...filterQuery};\n        return (\n          <MenuItem\n            key={value}\n            isActive={this.props.value === value}\n            to={{pathname: this.props.path, query}}\n          >\n            {label}\n          </MenuItem>\n        );\n      })}\n    </DropdownLink>\n  );\n\n  render() {\n    return (\n      <div className=\"filter-options\">\n        {this.props.options.length === 1 ? (\n          <strong>{this.getCurrentLabel()}</strong>\n        ) : (\n          this.getSelector()\n        )}\n      </div>\n    );\n  }\n}\n\ntype SortByProps = {\n  location: Location;\n  options: Option[];\n  path: string;\n  value: string;\n};\n\nclass SortBy extends Component<SortByProps> {\n  getCurrentSortLabel() {\n    return this.props.options.find(([value]) => value === this.props.value)?.[1];\n  }\n\n  getSortBySelector() {\n    return (\n      <DropdownLink title={this.getCurrentSortLabel()} className=\"sorted-by\">\n        {this.props.options.map(([value, label]) => {\n          const query = {...this.props.location.query, sortBy: value, cursor: ''};\n          return (\n            <MenuItem\n              isActive={this.props.value === value}\n              key={value}\n              to={{pathname: this.props.path, query}}\n            >\n              {label}\n            </MenuItem>\n          );\n        })}\n      </DropdownLink>\n    );\n  }\n\n  render() {\n    if (this.props.options.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"sort-options\">\n        Showing results sorted by\n        {this.props.options.length === 1 ? (\n          <strong className=\"sorted-by\">{this.getCurrentSortLabel()}</strong>\n        ) : (\n          this.getSortBySelector()\n        )}\n      </div>\n    );\n  }\n}\n\ntype FilterConfig = {\n  name: string;\n  options: Option[];\n};\n\n// XXX(ts): Using Partial here on the DefaultProps is not really correct, since\n// defaultProps guarantees they'll be set. But because this component is\n// wrapped with a HoC, we lose the defaultProps, and users of the component\ntype Props = {\n  api: Client;\n  location: Location;\n} & Partial<DefaultProps>;\n\ntype DefaultProps = {\n  columns: React.ReactNode[];\n  columnsForRow: (row: any) => React.ReactNode[];\n  defaultParams: Record<string, any>;\n  defaultSort: string;\n  endpoint: string;\n  filters: Record<string, FilterConfig>;\n  hasPagination: boolean;\n  hasSearch: boolean;\n  keyForRow: (row: any) => string;\n  method: RequestOptions['method'];\n  path: string;\n  sortOptions: Option[];\n};\n\ntype State = {\n  error: string | boolean;\n  filters: Record<string, string>;\n  loading: boolean;\n  pageLinks: null | string;\n  query: string;\n  rows: any[];\n  sortBy: string;\n};\n\nclass ResultGrid extends Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    path: '',\n    endpoint: '',\n    method: 'GET',\n    columns: [],\n    sortOptions: [],\n    filters: {},\n    defaultSort: '',\n    keyForRow: row => row.id,\n    columnsForRow: () => [],\n    defaultParams: {\n      per_page: 50,\n    },\n    hasPagination: true,\n    hasSearch: false,\n  };\n\n  state: State = this.defaultState;\n\n  componentWillMount() {\n    this.fetchData();\n  }\n\n  componentWillReceiveProps() {\n    const queryParams = this.query;\n    this.setState(\n      {\n        query: queryParams.query ?? '',\n        sortBy: queryParams.sortBy ?? this.props.defaultSort,\n        filters: {...queryParams},\n        pageLinks: null,\n        loading: true,\n        error: false,\n      },\n      this.fetchData\n    );\n  }\n\n  get defaultState() {\n    const queryParams = this.query;\n\n    return {\n      rows: [],\n      loading: true,\n      error: false,\n      pageLinks: null,\n      query: queryParams.query ?? '',\n      sortBy: queryParams.sortBy ?? this.props.defaultSort,\n      filters: {...queryParams},\n    } as State;\n  }\n\n  get query() {\n    return ((this.props.location ?? {}).query ?? {}) as {[k: string]: string};\n  }\n\n  remountComponent() {\n    this.setState(this.defaultState, this.fetchData);\n  }\n\n  refresh() {\n    this.setState({loading: true}, this.fetchData);\n  }\n\n  fetchData() {\n    // TODO(dcramer): this should explicitly allow filters/sortBy/cursor/perPage\n    const queryParams = {\n      ...this.props.defaultParams,\n      sortBy: this.state.sortBy,\n      ...this.query,\n    };\n\n    this.props.api.request(this.props.endpoint!, {\n      method: this.props.method,\n      data: queryParams,\n      success: (data, _, resp) => {\n        this.setState({\n          loading: false,\n          error: false,\n          rows: data,\n          pageLinks: resp?.getResponseHeader('Link') ?? null,\n        });\n      },\n      error: () => {\n        this.setState({\n          loading: false,\n          error: true,\n        });\n      },\n    });\n  }\n\n  onSearch = (e: React.FormEvent<HTMLFormElement>) => {\n    const location = this.props.location ?? {};\n    const {query} = this.state;\n    const targetQueryParams = {...(location.query ?? {}), query, cursor: ''};\n\n    e.preventDefault();\n\n    browserHistory.push({\n      pathname: this.props.path,\n      query: targetQueryParams,\n    });\n  };\n\n  onQueryChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({query: evt.target.value});\n  };\n\n  renderLoading() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns!.length}>\n          <div className=\"loading\">\n            <div className=\"loading-indicator\" />\n            <div className=\"loading-message\">Hold on to your butts!</div>\n          </div>\n        </td>\n      </tr>\n    );\n  }\n\n  renderError() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns!.length}>\n          <div className=\"alert-block alert-error\">Something bad happened :(</div>\n        </td>\n      </tr>\n    );\n  }\n\n  renderNoResults() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns!.length}>No results found.</td>\n      </tr>\n    );\n  }\n\n  renderResults() {\n    return this.state.rows.map(row => (\n      <tr key={this.props.keyForRow?.(row)}>{this.props.columnsForRow?.(row)}</tr>\n    ));\n  }\n\n  render() {\n    const {filters, sortOptions, path, location} = this.props;\n    return (\n      <div className=\"result-grid\">\n        <div className=\"table-options\">\n          {this.props.hasSearch && (\n            <div className=\"result-grid-search\">\n              <form onSubmit={this.onSearch}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control input-search\"\n                    placeholder=\"search\"\n                    style={{width: 300}}\n                    name=\"query\"\n                    autoComplete=\"off\"\n                    value={this.state.query}\n                    onChange={this.onQueryChange}\n                  />\n                  <button type=\"submit\" className=\"btn btn-sm btn-primary\">\n                    <IconSearch size=\"xs\" />\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n          <SortBy\n            options={sortOptions ?? []}\n            value={this.state.sortBy}\n            path={path ?? ''}\n            location={location}\n          />\n          {Object.keys(filters ?? {}).map(filterKey => (\n            <Filter\n              key={filterKey}\n              queryKey={filterKey}\n              value={this.state.filters[filterKey]}\n              path={path ?? ''}\n              location={location}\n              {...(filters?.[filterKey] as FilterConfig)}\n            />\n          ))}\n        </div>\n\n        <table className=\"table table-grid\">\n          <thead>\n            <tr>{this.props.columns}</tr>\n          </thead>\n          <tbody>\n            {this.state.loading\n              ? this.renderLoading()\n              : this.state.error\n              ? this.renderError()\n              : this.state.rows.length === 0\n              ? this.renderNoResults()\n              : this.renderResults()}\n          </tbody>\n        </table>\n        {this.props.hasPagination && this.state.pageLinks && (\n          <Pagination pageLinks={this.state.pageLinks} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport {ResultGrid};\n\nexport default withApi(ResultGrid);\n","import {Location} from 'history';\nimport moment from 'moment';\n\nimport Link from 'sentry/components/links/link';\nimport ResultGrid from 'sentry/components/resultGrid';\nimport {t} from 'sentry/locale';\nimport AsyncView from 'sentry/views/asyncView';\n\nexport const prettyDate = function (x) {\n  return moment(x).format('ll');\n};\n\ntype Row = {\n  dateJoined: string;\n  email: string;\n  id: string;\n  lastLogin: string;\n  username: string;\n};\n\ntype Props = {\n  location: Location;\n} & AsyncView['props'];\n\nexport default class AdminUsers extends AsyncView<Props> {\n  getRow = (row: Row) => [\n    <td key=\"username\">\n      <strong>\n        <Link to={`/manage/users/${row.id}/`}>{row.username}</Link>\n      </strong>\n      <br />\n      {row.email !== row.username && <small>{row.email}</small>}\n    </td>,\n    <td key=\"dateJoined\" style={{textAlign: 'center'}}>\n      {prettyDate(row.dateJoined)}\n    </td>,\n    <td key=\"lastLogin\" style={{textAlign: 'center'}}>\n      {prettyDate(row.lastLogin)}\n    </td>,\n  ];\n\n  render() {\n    const columns = [\n      <th key=\"username\">User</th>,\n      <th key=\"dateJoined\" style={{textAlign: 'center', width: 150}}>\n        Joined\n      </th>,\n      <th key=\"lastLogin\" style={{textAlign: 'center', width: 150}}>\n        Last Login\n      </th>,\n    ];\n\n    return (\n      <div>\n        <h3>{t('Users')}</h3>\n        <ResultGrid\n          path=\"/manage/users/\"\n          endpoint=\"/users/\"\n          method=\"GET\"\n          columns={columns}\n          columnsForRow={this.getRow}\n          hasSearch\n          filters={{\n            status: {\n              name: 'Status',\n              options: [\n                ['active', 'Active'],\n                ['disabled', 'Disabled'],\n              ],\n            },\n          }}\n          sortOptions={[['date', 'Date Joined']]}\n          defaultSort=\"date\"\n          {...this.props}\n        />\n      </div>\n    );\n  }\n}\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n"],"names":["Filter","Component","title","this","getCurrentLabel","getDefaultItem","props","options","map","value","label","filterQuery","queryKey","cursor","query","location","isActive","to","pathname","path","selected","find","item","name","render","className","length","getSelector","SortBy","getCurrentSortLabel","getSortBySelector","sortBy","ResultGrid","defaultState","e","state","targetQueryParams","preventDefault","browserHistory","evt","setState","target","componentWillMount","fetchData","componentWillReceiveProps","queryParams","defaultSort","filters","pageLinks","loading","error","rows","remountComponent","refresh","defaultParams","api","request","endpoint","method","data","success","_","resp","getResponseHeader","renderLoading","colSpan","columns","renderError","renderNoResults","renderResults","row","columnsForRow","keyForRow","sortOptions","hasSearch","onSubmit","onSearch","type","placeholder","style","width","autoComplete","onChange","onQueryChange","size","Object","keys","filterKey","hasPagination","id","per_page","withApi","prettyDate","x","moment","format","AdminUsers","AsyncView","username","email","textAlign","dateJoined","lastLogin","t","getRow","status","AsyncComponent","getTitle","renderComponent"],"sourceRoot":""}