{"version":3,"file":"chunks/app_components_avatarChooser_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/well.tsx","webpack:///./app/components/avatarUploader.tsx","webpack:///./app/components/avatarChooser.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\ninterface WellProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode;\n  centered?: boolean;\n  hasImage?: boolean;\n  theme?: any;\n}\n\nconst Well = styled('div')<WellProps>`\n  border: 1px solid ${p => p.theme.border};\n  box-shadow: none;\n  background: ${p => p.theme.backgroundSecondary};\n  padding: ${p => (p.hasImage ? '80px 30px' : '15px 20px')};\n  margin-bottom: 20px;\n  border-radius: 3px;\n  ${p => p.centered && 'text-align: center'};\n`;\n\nexport default Well;\n","import {Component, createRef, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport Well from 'sentry/components/well';\nimport {AVATAR_URL_MAP} from 'sentry/constants';\nimport {t, tct} from 'sentry/locale';\nimport {AvatarUser} from 'sentry/types';\n\nconst ALLOWED_MIMETYPES = 'image/gif,image/jpeg,image/png';\n\n// These values must be synced with the avatar endpoint in backend.\nconst MIN_DIMENSION = 256;\nconst MAX_DIMENSION = 1024;\n\nexport function getDiffNW(yDiff: number, xDiff: number) {\n  return (yDiff - yDiff * 2 + (xDiff - xDiff * 2)) / 2;\n}\n\nexport function getDiffNE(yDiff: number, xDiff: number) {\n  return (yDiff - yDiff * 2 + xDiff) / 2;\n}\n\nexport function getDiffSW(yDiff: number, xDiff: number) {\n  return (yDiff + (xDiff - xDiff * 2)) / 2;\n}\n\nexport function getDiffSE(yDiff: number, xDiff: number) {\n  return (yDiff + xDiff) / 2;\n}\n\nconst resizerPositions = {\n  nw: ['top', 'left'],\n  ne: ['top', 'right'],\n  se: ['bottom', 'right'],\n  sw: ['bottom', 'left'],\n};\n\ntype Position = keyof typeof resizerPositions;\n\ntype Model = Pick<AvatarUser, 'avatar'>;\n\ntype Props = {\n  model: Model;\n  type:\n    | 'user'\n    | 'team'\n    | 'organization'\n    | 'project'\n    | 'sentryAppColor'\n    | 'sentryAppSimple'\n    | 'docIntegration';\n  updateDataUrlState: (opts: {dataUrl?: string; savedDataUrl?: string | null}) => void;\n  savedDataUrl?: string;\n};\n\ntype State = {\n  file: File | null;\n  mousePosition: {pageX: number; pageY: number};\n  objectURL: string | null;\n  resizeDimensions: {left: number; size: number; top: number};\n  resizeDirection: Position | null;\n};\n\nclass AvatarUploader extends Component<Props, State> {\n  state: State = {\n    file: null,\n    objectURL: null,\n    mousePosition: {pageX: 0, pageY: 0},\n    resizeDimensions: {top: 0, left: 0, size: 0},\n    resizeDirection: null,\n  };\n\n  componentWillUnmount() {\n    this.revokeObjectUrl();\n  }\n\n  file = createRef<HTMLInputElement>();\n  canvas = createRef<HTMLCanvasElement>();\n  image = createRef<HTMLImageElement>();\n  cropContainer = createRef<HTMLDivElement>();\n\n  onSelectFile = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    const file = ev.target.files?.[0];\n\n    // No file selected (e.g. user clicked \"cancel\")\n    if (!file) {\n      return;\n    }\n\n    if (!/^image\\//.test(file.type)) {\n      addErrorMessage(t('That is not a supported file type.'));\n      return;\n    }\n\n    this.revokeObjectUrl();\n\n    const {updateDataUrlState} = this.props;\n    const objectURL = window.URL.createObjectURL(file);\n    this.setState({file, objectURL}, () => updateDataUrlState({savedDataUrl: null}));\n  };\n\n  revokeObjectUrl = () =>\n    this.state.objectURL && window.URL.revokeObjectURL(this.state.objectURL);\n\n  onImageLoad = () => {\n    const error = this.validateImage();\n    if (error) {\n      this.revokeObjectUrl();\n      this.setState({objectURL: null});\n      addErrorMessage(error);\n      return;\n    }\n\n    const image = this.image.current;\n    if (!image) {\n      return;\n    }\n\n    const dimension = Math.min(image.clientHeight, image.clientWidth);\n    const state = {resizeDimensions: {size: dimension, top: 0, left: 0}};\n\n    this.setState(state, this.drawToCanvas);\n  };\n\n  updateDimensions = (ev: MouseEvent) => {\n    const cropContainer = this.cropContainer.current;\n    if (!cropContainer) {\n      return;\n    }\n\n    const {mousePosition, resizeDimensions} = this.state;\n\n    let pageY = ev.pageY;\n    let pageX = ev.pageX;\n    let top = resizeDimensions.top + (pageY - mousePosition.pageY);\n    let left = resizeDimensions.left + (pageX - mousePosition.pageX);\n\n    if (top < 0) {\n      top = 0;\n      pageY = mousePosition.pageY;\n    } else if (top + resizeDimensions.size > cropContainer.clientHeight) {\n      top = cropContainer.clientHeight - resizeDimensions.size;\n      pageY = mousePosition.pageY;\n    }\n\n    if (left < 0) {\n      left = 0;\n      pageX = mousePosition.pageX;\n    } else if (left + resizeDimensions.size > cropContainer.clientWidth) {\n      left = cropContainer.clientWidth - resizeDimensions.size;\n      pageX = mousePosition.pageX;\n    }\n\n    this.setState(state => ({\n      resizeDimensions: {...state.resizeDimensions, top, left},\n      mousePosition: {pageX, pageY},\n    }));\n  };\n\n  onMouseDown = (ev: React.MouseEvent<HTMLDivElement>) => {\n    ev.preventDefault();\n    this.setState({mousePosition: {pageY: ev.pageY, pageX: ev.pageX}});\n\n    document.addEventListener('mousemove', this.updateDimensions);\n    document.addEventListener('mouseup', this.onMouseUp);\n  };\n\n  onMouseUp = (ev: MouseEvent) => {\n    ev.preventDefault();\n    document.removeEventListener('mousemove', this.updateDimensions);\n    document.removeEventListener('mouseup', this.onMouseUp);\n    this.drawToCanvas();\n  };\n\n  startResize = (direction: Position, ev: React.MouseEvent<HTMLDivElement>) => {\n    ev.stopPropagation();\n    ev.preventDefault();\n    document.addEventListener('mousemove', this.updateSize);\n    document.addEventListener('mouseup', this.stopResize);\n\n    this.setState({\n      resizeDirection: direction,\n      mousePosition: {pageY: ev.pageY, pageX: ev.pageX},\n    });\n  };\n\n  stopResize = (ev: MouseEvent) => {\n    ev.stopPropagation();\n    ev.preventDefault();\n    document.removeEventListener('mousemove', this.updateSize);\n    document.removeEventListener('mouseup', this.stopResize);\n\n    this.setState({resizeDirection: null});\n    this.drawToCanvas();\n  };\n\n  updateSize = (ev: MouseEvent) => {\n    const cropContainer = this.cropContainer.current;\n    if (!cropContainer) {\n      return;\n    }\n\n    const {mousePosition} = this.state;\n\n    const yDiff = ev.pageY - mousePosition.pageY;\n    const xDiff = ev.pageX - mousePosition.pageX;\n\n    this.setState({\n      resizeDimensions: this.getNewDimensions(cropContainer, yDiff, xDiff),\n      mousePosition: {pageX: ev.pageX, pageY: ev.pageY},\n    });\n  };\n\n  getNewDimensions = (container: HTMLDivElement, yDiff: number, xDiff: number) => {\n    const {resizeDimensions: oldDimensions, resizeDirection} = this.state;\n\n    // Normalize diff across dimensions so that negative diffs are always making\n    // the cropper smaller and positive ones are making the cropper larger\n    const helpers = {\n      getDiffNE,\n      getDiffNW,\n      getDiffSE,\n      getDiffSW,\n    } as const;\n\n    const diff = helpers['getDiff' + resizeDirection!.toUpperCase()](yDiff, xDiff);\n\n    let height = container.clientHeight - oldDimensions.top;\n    let width = container.clientWidth - oldDimensions.left;\n\n    // Depending on the direction, we update different dimensions:\n    // nw: size, top, left\n    // ne: size, top\n    // sw: size, left\n    // se: size\n    const editingTop = resizeDirection === 'nw' || resizeDirection === 'ne';\n    const editingLeft = resizeDirection === 'nw' || resizeDirection === 'sw';\n\n    const newDimensions = {\n      top: 0,\n      left: 0,\n      size: oldDimensions.size + diff,\n    };\n\n    if (editingTop) {\n      newDimensions.top = oldDimensions.top - diff;\n      height = container.clientHeight - newDimensions.top;\n    }\n\n    if (editingLeft) {\n      newDimensions.left = oldDimensions.left - diff;\n      width = container.clientWidth - newDimensions.left;\n    }\n\n    if (newDimensions.top < 0) {\n      newDimensions.size = newDimensions.size + newDimensions.top;\n      if (editingLeft) {\n        newDimensions.left = newDimensions.left - newDimensions.top;\n      }\n      newDimensions.top = 0;\n    }\n\n    if (newDimensions.left < 0) {\n      newDimensions.size = newDimensions.size + newDimensions.left;\n      if (editingTop) {\n        newDimensions.top = newDimensions.top - newDimensions.left;\n      }\n      newDimensions.left = 0;\n    }\n\n    const maxSize = Math.min(width, height);\n    if (newDimensions.size > maxSize) {\n      if (editingTop) {\n        newDimensions.top = newDimensions.top + newDimensions.size - maxSize;\n      }\n      if (editingLeft) {\n        newDimensions.left = newDimensions.left + newDimensions.size - maxSize;\n      }\n      newDimensions.size = maxSize;\n    } else if (newDimensions.size < MIN_DIMENSION) {\n      if (editingTop) {\n        newDimensions.top = newDimensions.top + newDimensions.size - MIN_DIMENSION;\n      }\n      if (editingLeft) {\n        newDimensions.left = newDimensions.left + newDimensions.size - MIN_DIMENSION;\n      }\n      newDimensions.size = MIN_DIMENSION;\n    }\n\n    return {...oldDimensions, ...newDimensions};\n  };\n\n  validateImage() {\n    const img = this.image.current;\n\n    if (!img) {\n      return null;\n    }\n\n    if (img.naturalWidth < MIN_DIMENSION || img.naturalHeight < MIN_DIMENSION) {\n      return tct('Please upload an image larger than [size]px by [size]px.', {\n        size: MIN_DIMENSION - 1,\n      });\n    }\n\n    if (img.naturalWidth > MAX_DIMENSION || img.naturalHeight > MAX_DIMENSION) {\n      return tct('Please upload an image smaller than [size]px by [size]px.', {\n        size: MAX_DIMENSION,\n      });\n    }\n\n    return null;\n  }\n\n  drawToCanvas() {\n    const canvas = this.canvas.current;\n    if (!canvas) {\n      return;\n    }\n\n    const image = this.image.current;\n    if (!image) {\n      return;\n    }\n\n    const {left, top, size} = this.state.resizeDimensions;\n    // Calculate difference between natural dimensions and rendered dimensions\n    const ratio =\n      (image.naturalHeight / image.clientHeight +\n        image.naturalWidth / image.clientWidth) /\n      2;\n    canvas.width = size * ratio;\n    canvas.height = size * ratio;\n\n    canvas\n      .getContext('2d')!\n      .drawImage(\n        image,\n        left * ratio,\n        top * ratio,\n        size * ratio,\n        size * ratio,\n        0,\n        0,\n        size * ratio,\n        size * ratio\n      );\n\n    this.props.updateDataUrlState({dataUrl: canvas.toDataURL()});\n  }\n\n  get imageSrc() {\n    const {savedDataUrl, model, type} = this.props;\n    const uuid = model.avatar?.avatarUuid;\n    const photoUrl = uuid && `/${AVATAR_URL_MAP[type] || 'avatar'}/${uuid}/`;\n\n    return savedDataUrl || this.state.objectURL || photoUrl;\n  }\n\n  uploadClick = (ev: React.MouseEvent<HTMLAnchorElement>) => {\n    ev.preventDefault();\n    this.file.current && this.file.current.click();\n  };\n\n  renderImageCrop() {\n    const src = this.imageSrc;\n    if (!src) {\n      return null;\n    }\n\n    const {resizeDimensions, resizeDirection} = this.state;\n    const style = {\n      top: resizeDimensions.top,\n      left: resizeDimensions.left,\n      width: resizeDimensions.size,\n      height: resizeDimensions.size,\n    };\n\n    return (\n      <ImageCropper resizeDirection={resizeDirection}>\n        <CropContainer ref={this.cropContainer}>\n          <img\n            ref={this.image}\n            src={src}\n            onLoad={this.onImageLoad}\n            onDragStart={e => e.preventDefault()}\n          />\n          <Cropper style={style} onMouseDown={this.onMouseDown}>\n            {Object.keys(resizerPositions).map(pos => (\n              <Resizer\n                key={pos}\n                position={pos as Position}\n                onMouseDown={this.startResize.bind(this, pos)}\n              />\n            ))}\n          </Cropper>\n        </CropContainer>\n      </ImageCropper>\n    );\n  }\n\n  render() {\n    const src = this.imageSrc;\n\n    const upload = <a onClick={this.uploadClick} />;\n    const uploader = (\n      <Well hasImage centered>\n        <p>{tct('[upload:Upload an image] to get started.', {upload})}</p>\n      </Well>\n    );\n\n    return (\n      <Fragment>\n        {!src && uploader}\n        {src && <HiddenCanvas ref={this.canvas} />}\n        {this.renderImageCrop()}\n        <div className=\"form-group\">\n          {src && <a onClick={this.uploadClick}>{t('Change Photo')}</a>}\n          <UploadInput\n            ref={this.file}\n            type=\"file\"\n            accept={ALLOWED_MIMETYPES}\n            onChange={this.onSelectFile}\n          />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport {AvatarUploader};\n\nconst UploadInput = styled('input')`\n  position: absolute;\n  opacity: 0;\n`;\n\nconst ImageCropper = styled('div')<{resizeDirection: Position | null}>`\n  cursor: ${p => (p.resizeDirection ? `${p.resizeDirection}-resize` : 'default')};\n  text-align: center;\n  margin-bottom: 20px;\n  background-size: 20px 20px;\n  background-position: 0 0, 0 10px, 10px -10px, -10px 0px;\n  background-color: ${p => p.theme.background};\n  background-image: linear-gradient(\n      45deg,\n      ${p => p.theme.backgroundSecondary} 25%,\n      rgba(0, 0, 0, 0) 25%\n    ),\n    linear-gradient(-45deg, ${p => p.theme.backgroundSecondary} 25%, rgba(0, 0, 0, 0) 25%),\n    linear-gradient(45deg, rgba(0, 0, 0, 0) 75%, ${p => p.theme.backgroundSecondary} 75%),\n    linear-gradient(-45deg, rgba(0, 0, 0, 0) 75%, ${p => p.theme.backgroundSecondary} 75%);\n`;\n\nconst CropContainer = styled('div')`\n  display: inline-block;\n  position: relative;\n  max-width: 100%;\n`;\n\nconst Cropper = styled('div')`\n  position: absolute;\n  border: 2px dashed ${p => p.theme.gray300};\n`;\n\nconst Resizer = styled('div')<{position: Position}>`\n  border-radius: 5px;\n  width: 10px;\n  height: 10px;\n  position: absolute;\n  background-color: ${p => p.theme.gray300};\n  cursor: ${p => `${p.position}-resize`};\n  ${p => resizerPositions[p.position].map(pos => `${pos}: -5px;`)}\n`;\n\nconst HiddenCanvas = styled('canvas')`\n  display: none;\n`;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Avatar from 'sentry/components/avatar';\nimport {AvatarUploader} from 'sentry/components/avatarUploader';\nimport {Button} from 'sentry/components/button';\nimport RadioGroup from 'sentry/components/forms/controls/radioGroup';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport Well from 'sentry/components/well';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {AvatarUser, Organization, SentryApp, Team} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\n\nexport type Model = Pick<AvatarUser, 'avatar'>;\ntype AvatarType = Required<Model>['avatar']['avatarType'];\ntype AvatarChooserType =\n  | 'user'\n  | 'team'\n  | 'organization'\n  | 'sentryAppColor'\n  | 'sentryAppSimple'\n  | 'docIntegration';\ntype DefaultChoice = {\n  allowDefault?: boolean;\n  choiceText?: string;\n  preview?: React.ReactNode;\n};\n\ntype DefaultProps = {\n  onSave: (model: Model) => void;\n  allowGravatar?: boolean;\n  allowLetter?: boolean;\n  allowUpload?: boolean;\n  defaultChoice?: DefaultChoice;\n  type?: AvatarChooserType;\n};\n\ntype Props = {\n  api: Client;\n  endpoint: string;\n  model: Model;\n  disabled?: boolean;\n  help?: React.ReactNode;\n  isUser?: boolean;\n  savedDataUrl?: string;\n  title?: string;\n} & DefaultProps;\n\ntype State = {\n  hasError: boolean;\n  model: Model;\n  dataUrl?: string | null;\n  savedDataUrl?: string | null;\n};\n\nclass AvatarChooser extends Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    allowGravatar: true,\n    allowLetter: true,\n    allowUpload: true,\n    type: 'user',\n    onSave: () => {},\n    defaultChoice: {\n      allowDefault: false,\n    },\n  };\n\n  state: State = {\n    model: this.props.model,\n    savedDataUrl: null,\n    dataUrl: null,\n    hasError: false,\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    const {model} = this.props;\n\n    // Update local state if defined in props\n    if (model !== undefined && model !== prevProps.model) {\n      this.setState({model});\n    }\n  }\n\n  getModelFromResponse(resp: any): Model {\n    const {type} = this.props;\n    const isSentryApp = type?.startsWith('sentryApp');\n    // SentryApp endpoint returns all avatars, we need to return only the edited one\n    if (!isSentryApp) {\n      return resp;\n    }\n    const isColor = type === 'sentryAppColor';\n    return {avatar: resp?.avatars?.find(({color}) => color === isColor) ?? undefined};\n  }\n\n  handleError(msg: string) {\n    addErrorMessage(msg);\n  }\n\n  handleSuccess(model: Model) {\n    const {onSave} = this.props;\n    this.setState({model});\n    onSave(model);\n    addSuccessMessage(t('Successfully saved avatar preferences'));\n  }\n\n  handleSaveSettings = (ev: React.MouseEvent) => {\n    const {endpoint, api, type} = this.props;\n    const {model, dataUrl} = this.state;\n\n    ev.preventDefault();\n    const avatarType = model?.avatar?.avatarType;\n    const avatarPhoto = dataUrl?.split(',')[1];\n\n    const data: {\n      avatar_photo?: string;\n      avatar_type?: string;\n      color?: boolean;\n    } = {avatar_type: avatarType};\n\n    // If an image has been uploaded, then another option is selected, we should not submit the uploaded image\n    if (avatarType === 'upload') {\n      data.avatar_photo = avatarPhoto;\n    }\n\n    if (type?.startsWith('sentryApp')) {\n      data.color = type === 'sentryAppColor';\n    }\n\n    api.request(endpoint, {\n      method: 'PUT',\n      data,\n      success: resp => {\n        this.setState({savedDataUrl: this.state.dataUrl});\n        this.handleSuccess(this.getModelFromResponse(resp));\n      },\n      error: resp => {\n        const avatarPhotoErrors = resp?.responseJSON?.avatar_photo || [];\n        avatarPhotoErrors.length\n          ? avatarPhotoErrors.map(this.handleError)\n          : this.handleError.bind(this, t('There was an error saving your preferences.'));\n      },\n    });\n  };\n\n  handleChange = (id: AvatarType) =>\n    this.setState(state => ({\n      model: {\n        ...state.model,\n        avatar: {avatarUuid: state.model.avatar?.avatarUuid ?? '', avatarType: id},\n      },\n    }));\n\n  render() {\n    const {\n      allowGravatar,\n      allowUpload,\n      allowLetter,\n      savedDataUrl,\n      type,\n      isUser,\n      disabled,\n      title,\n      help,\n      defaultChoice,\n    } = this.props;\n    const {hasError, model, dataUrl} = this.state;\n\n    if (hasError) {\n      return <LoadingError />;\n    }\n    if (!model) {\n      return <LoadingIndicator />;\n    }\n    const {allowDefault, preview, choiceText: defaultChoiceText} = defaultChoice || {};\n\n    const avatarType = model.avatar?.avatarType ?? 'letter_avatar';\n    const isLetter = avatarType === 'letter_avatar';\n    const isDefault = Boolean(preview && avatarType === 'default');\n\n    const isTeam = type === 'team';\n    const isOrganization = type === 'organization';\n    const isSentryApp = type?.startsWith('sentryApp');\n\n    const choices: [AvatarType, string][] = [];\n\n    if (allowDefault && preview) {\n      choices.push(['default', defaultChoiceText ?? t('Use default avatar')]);\n    }\n    if (allowLetter) {\n      choices.push(['letter_avatar', t('Use initials')]);\n    }\n    if (allowUpload) {\n      choices.push(['upload', t('Upload an image')]);\n    }\n    if (allowGravatar) {\n      choices.push(['gravatar', t('Use Gravatar')]);\n    }\n    return (\n      <Panel>\n        <PanelHeader>{title || t('Avatar')}</PanelHeader>\n        <PanelBody>\n          <AvatarForm>\n            <AvatarGroup inline={isLetter || isDefault}>\n              <RadioGroup\n                style={{flex: 1}}\n                choices={choices}\n                value={avatarType}\n                label={t('Avatar Type')}\n                onChange={this.handleChange}\n                disabled={disabled}\n              />\n              {isLetter && (\n                <Avatar\n                  gravatar={false}\n                  style={{width: 90, height: 90}}\n                  user={isUser ? (model as AvatarUser) : undefined}\n                  organization={isOrganization ? (model as Organization) : undefined}\n                  team={isTeam ? (model as Team) : undefined}\n                  sentryApp={isSentryApp ? (model as SentryApp) : undefined}\n                />\n              )}\n              {isDefault && preview}\n            </AvatarGroup>\n            <AvatarUploadSection>\n              {allowGravatar && avatarType === 'gravatar' && (\n                <Well>\n                  {t('Gravatars are managed through ')}\n                  <ExternalLink href=\"http://gravatar.com\">Gravatar.com</ExternalLink>\n                </Well>\n              )}\n              {model.avatar && avatarType === 'upload' && (\n                <AvatarUploader\n                  {...this.props}\n                  type={type!}\n                  model={model}\n                  savedDataUrl={savedDataUrl}\n                  updateDataUrlState={dataState => this.setState(dataState)}\n                />\n              )}\n              <AvatarSubmit className=\"form-actions\">\n                {help && <AvatarHelp>{help}</AvatarHelp>}\n                <Button\n                  priority=\"primary\"\n                  onClick={this.handleSaveSettings}\n                  disabled={disabled || (avatarType === 'upload' && !dataUrl)}\n                >\n                  {t('Save Avatar')}\n                </Button>\n              </AvatarSubmit>\n            </AvatarUploadSection>\n          </AvatarForm>\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nconst AvatarHelp = styled('p')`\n  margin-right: auto;\n  color: ${p => p.theme.gray300};\n  font-size: 14px;\n  width: 50%;\n`;\n\nconst AvatarGroup = styled('div')<{inline: boolean}>`\n  display: flex;\n  flex-direction: ${p => (p.inline ? 'row' : 'column')};\n`;\n\nconst AvatarForm = styled('div')`\n  line-height: ${space(3)};\n  padding: ${space(1.5)} ${space(2)};\n  margin: ${space(1.5)} ${space(1)} ${space(0.5)};\n`;\n\nconst AvatarSubmit = styled('fieldset')`\n  display: flex;\n  align-items: center;\n  margin-top: ${space(4)};\n  padding-top: ${space(1.5)};\n`;\n\nconst AvatarUploadSection = styled('div')`\n  margin-top: ${space(1.5)};\n`;\n\nexport default withApi(AvatarChooser);\n"],"names":["p","theme","border","backgroundSecondary","hasImage","centered","MIN_DIMENSION","MAX_DIMENSION","getDiffNW","yDiff","xDiff","getDiffNE","getDiffSW","getDiffSE","resizerPositions","nw","ne","se","sw","AvatarUploader","Component","file","objectURL","mousePosition","pageX","pageY","resizeDimensions","top","left","size","resizeDirection","createRef","ev","target","files","test","type","addErrorMessage","t","this","revokeObjectUrl","updateDataUrlState","props","window","URL","createObjectURL","setState","savedDataUrl","state","revokeObjectURL","error","validateImage","image","current","Math","min","clientHeight","clientWidth","drawToCanvas","cropContainer","preventDefault","document","addEventListener","updateDimensions","onMouseUp","removeEventListener","direction","stopPropagation","updateSize","stopResize","getNewDimensions","container","oldDimensions","diff","toUpperCase","height","width","editingTop","editingLeft","newDimensions","maxSize","click","componentWillUnmount","img","naturalWidth","naturalHeight","tct","canvas","ratio","getContext","drawImage","dataUrl","toDataURL","imageSrc","model","uuid","avatar","avatarUuid","photoUrl","AVATAR_URL_MAP","renderImageCrop","src","style","ImageCropper","CropContainer","ref","onLoad","onImageLoad","onDragStart","e","Cropper","onMouseDown","Object","keys","map","pos","Resizer","position","startResize","bind","render","upload","onClick","uploadClick","uploader","Fragment","HiddenCanvas","className","UploadInput","accept","onChange","onSelectFile","background","gray300","AvatarChooser","hasError","endpoint","api","avatarType","avatarPhoto","split","data","avatar_type","avatar_photo","startsWith","color","request","method","success","resp","handleSuccess","getModelFromResponse","avatarPhotoErrors","responseJSON","length","handleError","id","componentDidUpdate","prevProps","undefined","isSentryApp","isColor","avatars","find","msg","onSave","addSuccessMessage","allowGravatar","allowUpload","allowLetter","isUser","disabled","title","help","defaultChoice","allowDefault","preview","choiceText","defaultChoiceText","isLetter","isDefault","Boolean","isTeam","isOrganization","choices","push","AvatarForm","AvatarGroup","inline","flex","value","label","handleChange","gravatar","user","organization","team","sentryApp","AvatarUploadSection","href","dataState","AvatarSubmit","AvatarHelp","priority","handleSaveSettings","space","withApi"],"sourceRoot":""}