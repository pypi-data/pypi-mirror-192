{"version":3,"file":"chunks/app_views_settings_organizationMembers_organizationMembersWrapper_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/organizationMembers/organizationMembersWrapper.tsx"],"sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {cloneElement, Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {openInviteMembersModal} from 'sentry/actionCreators/modal';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport {Button} from 'sentry/components/button';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport {Hovercard} from 'sentry/components/hovercard';\nimport {IconMail} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Member, Organization} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\ntype Props = {\n  organization: Organization;\n  children?: any;\n} & RouteComponentProps<{}, {}>;\n\ntype State = AsyncView['state'] & {\n  inviteRequests: Member[];\n};\n\nconst InviteMembersButtonHook = HookOrDefault({\n  hookName: 'member-invite-button:customization',\n  defaultComponent: ({children, organization, onTriggerModal}) =>\n    children({\n      disabled: !organization.features.includes('invite-members'),\n      onTriggerModal,\n    }),\n});\n\nclass OrganizationMembersWrapper extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization} = this.props;\n\n    return [\n      ['inviteRequests', `/organizations/${organization.slug}/invite-requests/`],\n      ['requestList', `/organizations/${organization.slug}/access-requests/`],\n    ];\n  }\n\n  getTitle() {\n    const {organization} = this.props;\n    return routeTitleGen(t('Members'), organization.slug, false);\n  }\n\n  get onRequestsTab() {\n    return location.pathname.includes('/requests/');\n  }\n\n  get hasWriteAccess() {\n    const {organization} = this.props;\n    if (!organization || !organization.access) {\n      return false;\n    }\n    return organization.access.includes('member:write');\n  }\n\n  get showInviteRequests() {\n    return this.hasWriteAccess;\n  }\n\n  get showNavTabs() {\n    const {requestList} = this.state;\n\n    // show the requests tab if there are pending team requests,\n    // or if the user has access to approve or deny invite requests\n    return (requestList && requestList.length > 0) || this.showInviteRequests;\n  }\n\n  get requestCount() {\n    const {requestList, inviteRequests} = this.state;\n    let count = requestList.length;\n\n    // if the user can't see the invite requests panel,\n    // exclude those requests from the total count\n    if (this.showInviteRequests) {\n      count += inviteRequests.length;\n    }\n    return count ? count.toString() : null;\n  }\n\n  removeAccessRequest = (id: string) =>\n    this.setState(state => ({\n      requestList: state.requestList.filter(request => request.id !== id),\n    }));\n\n  removeInviteRequest = (id: string) =>\n    this.setState(state => ({\n      inviteRequests: state.inviteRequests.filter(request => request.id !== id),\n    }));\n\n  updateInviteRequest = (id: string, data: Partial<Member>) =>\n    this.setState(state => {\n      const inviteRequests = [...state.inviteRequests];\n      const inviteIndex = inviteRequests.findIndex(request => request.id === id);\n\n      inviteRequests[inviteIndex] = {...inviteRequests[inviteIndex], ...data};\n\n      return {inviteRequests};\n    });\n\n  renderBody() {\n    const {children, organization} = this.props;\n    const {requestList, inviteRequests} = this.state;\n\n    const action = (\n      <InviteMembersButtonHook\n        organization={organization}\n        onTriggerModal={() =>\n          openInviteMembersModal({\n            onClose: () => {\n              this.fetchData();\n            },\n            source: 'members_settings',\n          })\n        }\n      >\n        {renderInviteMembersButton}\n      </InviteMembersButtonHook>\n    );\n\n    return (\n      <Fragment>\n        <SettingsPageHeader title=\"Members\" action={action} />\n        {children &&\n          cloneElement(children, {\n            requestList,\n            inviteRequests,\n            onRemoveInviteRequest: this.removeInviteRequest,\n            onUpdateInviteRequest: this.updateInviteRequest,\n            onRemoveAccessRequest: this.removeAccessRequest,\n            showInviteRequests: this.showInviteRequests,\n          })}\n      </Fragment>\n    );\n  }\n}\n\nfunction renderInviteMembersButton({\n  disabled,\n  onTriggerModal,\n}: {\n  onTriggerModal: () => void;\n  disabled?: boolean;\n}) {\n  const action = (\n    <Button\n      priority=\"primary\"\n      size=\"sm\"\n      onClick={onTriggerModal}\n      data-test-id=\"email-invite\"\n      icon={<IconMail />}\n      disabled={disabled}\n    >\n      {t('Invite Members')}\n    </Button>\n  );\n\n  return disabled ? (\n    <Hovercard\n      body={\n        <FeatureDisabled\n          featureName={t('Invite Members')}\n          features={['organizations:invite-members']}\n          hideHelpToggle\n        />\n      }\n    >\n      {action}\n    </Hovercard>\n  ) : (\n    action\n  );\n}\n\nexport default withOrganization(OrganizationMembersWrapper);\n"],"names":["routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","InviteMembersButtonHook","HookOrDefault","hookName","defaultComponent","children","organization","onTriggerModal","disabled","features","includes","OrganizationMembersWrapper","id","setState","state","requestList","filter","request","inviteRequests","data","inviteIndex","findIndex","getEndpoints","props","slug","routeTitleGen","t","onRequestsTab","location","pathname","hasWriteAccess","access","showInviteRequests","showNavTabs","length","requestCount","count","toString","renderBody","action","openInviteMembersModal","onClose","fetchData","source","renderInviteMembersButton","Fragment","cloneElement","onRemoveInviteRequest","removeInviteRequest","onUpdateInviteRequest","updateInviteRequest","onRemoveAccessRequest","removeAccessRequest","priority","size","onClick","icon","body","featureName","hideHelpToggle","withOrganization"],"sourceRoot":""}