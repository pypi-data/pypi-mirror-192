{"version":3,"file":"chunks/app_components_charts_components_dataZoomInside_tsx-app_components_charts_components_toolBox_-09b27f.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/charts/components/dataZoomInside.tsx","webpack:///./app/components/charts/components/toolBox.tsx","webpack:///./app/components/charts/loadingPanel.tsx","webpack:///./app/components/charts/transparentLoadingMask.tsx","webpack:///./app/components/events/searchBar.tsx","webpack:///./app/components/loadingMask.tsx","webpack:///./app/utils/withTags.tsx","webpack:///./app/views/performance/trends/content.tsx","webpack:///./app/views/performance/trends/index.tsx","webpack:///../node_modules/lodash/assign.js"],"sourcesContent":["import 'echarts/lib/component/dataZoomInside';\n\nimport type {InsideDataZoomComponentOption} from 'echarts';\n\nconst DEFAULT: InsideDataZoomComponentOption = {\n  type: 'inside',\n  // Mouse wheel can not trigger zoom\n  zoomOnMouseWheel: false,\n  // The translation (by mouse drag or touch drag) is available but zoom is not\n  zoomLock: true,\n  throttle: 50,\n};\n\nexport default function DataZoomInside(\n  props: InsideDataZoomComponentOption | InsideDataZoomComponentOption[]\n): InsideDataZoomComponentOption[] {\n  // `props` can be boolean, if so return default\n  if (!props || !Array.isArray(props)) {\n    const dataZoom = {\n      ...DEFAULT,\n      ...props,\n    };\n    return [dataZoom];\n  }\n\n  return props;\n}\n","import type {ToolboxComponentOption} from 'echarts';\n\nfunction getFeatures({\n  dataZoom,\n  ...features\n}: ToolboxComponentOption['feature'] = {}): ToolboxComponentOption['feature'] {\n  return {\n    ...(dataZoom\n      ? {\n          dataZoom: {\n            yAxisIndex: 'none',\n            title: {\n              zoom: 'zoom',\n              back: 'undo',\n            },\n            ...dataZoom,\n          },\n        }\n      : {}),\n    ...features,\n  };\n}\n\nexport default function ToolBox(\n  options: ToolboxComponentOption,\n  features: ToolboxComponentOption['feature']\n): ToolboxComponentOption {\n  return {\n    right: 0,\n    top: 0,\n    itemSize: 16,\n    // Stack the toolbox under the legend.\n    // so all series names are clickable.\n    z: -1,\n\n    feature: getFeatures(features),\n    ...options,\n  };\n}\n","import styled from '@emotion/styled';\n\nimport LoadingMask from 'sentry/components/loadingMask';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  height?: string;\n}\n\nconst LoadingPanel = styled(({height: _height, ...props}: Props) => (\n  <div {...props}>\n    <LoadingMask />\n  </div>\n))`\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: ${p => p.height};\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n`;\n\nLoadingPanel.defaultProps = {\n  height: '200px',\n};\n\nexport default LoadingPanel;\n","import styled from '@emotion/styled';\n\nimport LoadingMask, {LoadingMaskProps} from 'sentry/components/loadingMask';\n\ninterface TransparentLoadingMaskProps extends LoadingMaskProps {\n  visible: boolean;\n  children?: React.ReactNode;\n  className?: string;\n}\n\nconst TransparentLoadingMask = styled(\n  ({className, visible, children, ...props}: TransparentLoadingMaskProps) => {\n    const other = visible ? {...props, 'data-test-id': 'loading-placeholder'} : props;\n    return (\n      <LoadingMask className={className} {...other}>\n        {children}\n      </LoadingMask>\n    );\n  }\n)<TransparentLoadingMaskProps>`\n  ${p => !p.visible && 'display: none;'};\n  opacity: 0.4;\n  z-index: 1;\n`;\n\nexport default TransparentLoadingMask;\n","import {useEffect, useMemo, useRef} from 'react';\nimport * as Sentry from '@sentry/react';\nimport {Transaction} from '@sentry/types';\nimport assign from 'lodash/assign';\nimport flatten from 'lodash/flatten';\nimport memoize from 'lodash/memoize';\nimport omit from 'lodash/omit';\n\nimport {fetchTagValues} from 'sentry/actionCreators/tags';\nimport SmartSearchBar from 'sentry/components/smartSearchBar';\nimport {NEGATION_OPERATOR, SEARCH_WILDCARD} from 'sentry/constants';\nimport {Organization, SavedSearchType, TagCollection} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {CustomMeasurementCollection} from 'sentry/utils/customMeasurements/customMeasurements';\nimport {\n  Field,\n  FIELD_TAGS,\n  isAggregateField,\n  isEquation,\n  isMeasurement,\n  SEMVER_TAGS,\n  SPAN_OP_BREAKDOWN_FIELDS,\n  TRACING_FIELDS,\n} from 'sentry/utils/discover/fields';\nimport {FieldKey, FieldKind} from 'sentry/utils/fields';\nimport Measurements from 'sentry/utils/measurements/measurements';\nimport useApi from 'sentry/utils/useApi';\nimport withTags from 'sentry/utils/withTags';\nimport {isCustomMeasurement} from 'sentry/views/dashboards/utils';\n\nconst SEARCH_SPECIAL_CHARS_REGEXP = new RegExp(\n  `^${NEGATION_OPERATOR}|\\\\${SEARCH_WILDCARD}`,\n  'g'\n);\n\nconst STATIC_FIELD_TAGS_SET = new Set(Object.keys(FIELD_TAGS));\nconst getFunctionTags = (fields: Readonly<Field[]> | undefined) => {\n  if (!fields?.length) {\n    return [];\n  }\n  return fields.reduce((acc, item) => {\n    if (\n      !STATIC_FIELD_TAGS_SET.has(item.field) &&\n      !isEquation(item.field) &&\n      !isCustomMeasurement(item.field)\n    ) {\n      acc[item.field] = {key: item.field, name: item.field, kind: FieldKind.FUNCTION};\n    }\n\n    return acc;\n  }, {});\n};\n\nconst getMeasurementTags = (\n  measurements: Parameters<\n    React.ComponentProps<typeof Measurements>['children']\n  >[0]['measurements'],\n  customMeasurements:\n    | Parameters<React.ComponentProps<typeof Measurements>['children']>[0]['measurements']\n    | undefined\n) => {\n  const measurementsWithKind = Object.keys(measurements).reduce((tags, key) => {\n    tags[key] = {\n      ...measurements[key],\n      kind: FieldKind.MEASUREMENT,\n    };\n    return tags;\n  }, {});\n\n  if (!customMeasurements) {\n    return measurementsWithKind;\n  }\n\n  return Object.keys(customMeasurements).reduce((tags, key) => {\n    tags[key] = {\n      ...customMeasurements[key],\n      kind: FieldKind.MEASUREMENT,\n    };\n    return tags;\n  }, measurementsWithKind);\n};\n\nconst STATIC_FIELD_TAGS = Object.keys(FIELD_TAGS).reduce((tags, key) => {\n  tags[key] = {\n    ...FIELD_TAGS[key],\n    kind: FieldKind.FIELD,\n  };\n  return tags;\n}, {});\n\nconst STATIC_FIELD_TAGS_WITHOUT_TRACING = omit(STATIC_FIELD_TAGS, TRACING_FIELDS);\n\nconst STATIC_SPAN_TAGS = SPAN_OP_BREAKDOWN_FIELDS.reduce((tags, key) => {\n  tags[key] = {name: key, kind: FieldKind.METRICS};\n  return tags;\n}, {});\n\nconst STATIC_SEMVER_TAGS = Object.keys(SEMVER_TAGS).reduce((tags, key) => {\n  tags[key] = {\n    ...SEMVER_TAGS[key],\n    kind: FieldKind.FIELD,\n  };\n  return tags;\n}, {});\n\nexport type SearchBarProps = Omit<React.ComponentProps<typeof SmartSearchBar>, 'tags'> & {\n  organization: Organization;\n  tags: TagCollection;\n  customMeasurements?: CustomMeasurementCollection;\n  fields?: Readonly<Field[]>;\n  includeSessionTagsValues?: boolean;\n  /**\n   * Used to define the max height of the menu in px.\n   */\n  maxMenuHeight?: number;\n  maxSearchItems?: React.ComponentProps<typeof SmartSearchBar>['maxSearchItems'];\n  omitTags?: string[];\n  projectIds?: number[] | Readonly<number[]>;\n};\n\nfunction SearchBar(props: SearchBarProps) {\n  const {\n    maxSearchItems,\n    organization,\n    tags,\n    omitTags,\n    fields,\n    projectIds,\n    includeSessionTagsValues,\n    maxMenuHeight,\n    customMeasurements,\n  } = props;\n\n  const api = useApi();\n  const collectedTransactionFromGetTagsListRef = useRef<boolean>(false);\n\n  const functionTags = useMemo(() => getFunctionTags(fields), [fields]);\n  const tagsWithKind = useMemo(() => {\n    return Object.keys(tags).reduce((acc, key) => {\n      acc[key] = {\n        ...tags[key],\n        kind: FieldKind.TAG,\n      };\n      return acc;\n    }, {});\n  }, [tags]);\n\n  useEffect(() => {\n    // Clear memoized data on mount to make tests more consistent.\n    getEventFieldValues.cache.clear?.();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [projectIds]);\n\n  // Returns array of tag values that substring match `query`; invokes `callback`\n  // with data when ready\n  const getEventFieldValues = memoize(\n    (tag, query, endpointParams): Promise<string[]> => {\n      const projectIdStrings = (projectIds as Readonly<number>[])?.map(String);\n\n      if (isAggregateField(tag.key) || isMeasurement(tag.key)) {\n        // We can't really auto suggest values for aggregate fields\n        // or measurements, so we simply don't\n        return Promise.resolve([]);\n      }\n\n      return fetchTagValues({\n        api,\n        orgSlug: organization.slug,\n        tagKey: tag.key,\n        search: query,\n        projectIds: projectIdStrings,\n        endpointParams,\n        // allows searching for tags on transactions as well\n        includeTransactions: true,\n        // allows searching for tags on sessions as well\n        includeSessions: includeSessionTagsValues,\n      }).then(\n        results =>\n          flatten(results.filter(({name}) => defined(name)).map(({name}) => name)),\n        () => {\n          throw new Error('Unable to fetch event field values');\n        }\n      );\n    },\n    ({key}, query) => `${key}-${query}`\n  );\n\n  const getTagList = (\n    measurements: Parameters<\n      React.ComponentProps<typeof Measurements>['children']\n    >[0]['measurements']\n  ) => {\n    // We will only collect a transaction once and only if the number of tags > 0\n    // This is to avoid a large number of transactions being sent to Sentry. The 0 check\n    // is to avoid collecting a transaction when tags are not loaded yet.\n    let transaction: Transaction | undefined = undefined;\n    if (!collectedTransactionFromGetTagsListRef.current && Object.keys(tags).length > 0) {\n      transaction = Sentry.startTransaction({\n        name: 'SearchBar.getTagList',\n      });\n      // Mark as collected - if code below errors, we risk never collecting\n      // a transaction in that case, but that is fine.\n      collectedTransactionFromGetTagsListRef.current = true;\n    }\n\n    const measurementsWithKind = getMeasurementTags(measurements, customMeasurements);\n    const orgHasPerformanceView = organization.features.includes('performance-view');\n\n    const combinedTags: TagCollection = orgHasPerformanceView\n      ? Object.assign(\n          {},\n          measurementsWithKind,\n          functionTags,\n          STATIC_SPAN_TAGS,\n          STATIC_FIELD_TAGS\n        )\n      : Object.assign({}, STATIC_FIELD_TAGS_WITHOUT_TRACING);\n\n    assign(combinedTags, tagsWithKind, STATIC_FIELD_TAGS, STATIC_SEMVER_TAGS);\n\n    combinedTags.has = {\n      key: FieldKey.HAS,\n      name: 'Has property',\n      values: Object.keys(combinedTags).sort((a, b) => {\n        return a.toLowerCase().localeCompare(b.toLowerCase());\n      }),\n      predefined: true,\n      kind: FieldKind.FIELD,\n    };\n\n    const list =\n      omitTags && omitTags.length > 0 ? omit(combinedTags, omitTags) : combinedTags;\n\n    if (transaction) {\n      const totalCount: number = Object.keys(list).length;\n      transaction.setTag('tags.totalCount', totalCount);\n      const countGroup = [\n        1, 5, 10, 20, 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 10000,\n      ].find(n => totalCount <= n);\n      transaction.setTag('tags.totalCount.grouped', `<=${countGroup}`);\n      transaction.finish();\n    }\n    return list;\n  };\n\n  return (\n    <Measurements>\n      {({measurements}) => (\n        <SmartSearchBar\n          hasRecentSearches\n          savedSearchType={SavedSearchType.EVENT}\n          onGetTagValues={getEventFieldValues}\n          supportedTags={getTagList(measurements)}\n          prepareQuery={query => {\n            // Prepare query string (e.g. strip special characters like negation operator)\n            return query.replace(SEARCH_SPECIAL_CHARS_REGEXP, '');\n          }}\n          maxSearchItems={maxSearchItems}\n          excludedTags={[FieldKey.ENVIRONMENT, FieldKey.TOTAL_COUNT]}\n          maxMenuHeight={maxMenuHeight ?? 300}\n          customPerformanceMetrics={customMeasurements}\n          {...props}\n        />\n      )}\n    </Measurements>\n  );\n}\n\nexport default withTags(SearchBar);\n","import styled from '@emotion/styled';\n\nexport interface LoadingMaskProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst LoadingMask = styled('div')<LoadingMaskProps>`\n  background-color: ${p => p.theme.backgroundSecondary};\n  border-radius: ${p => p.theme.borderRadius};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nexport default LoadingMask;\n","import {Component} from 'react';\n\nimport TagStore from 'sentry/stores/tagStore';\nimport {TagCollection} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedTagsProps = {\n  tags: TagCollection;\n};\n\ntype State = {\n  tags: TagCollection;\n};\n\n/**\n * HOC for getting *only* tags from the TagStore.\n */\nfunction withTags<P extends InjectedTagsProps>(WrappedComponent: React.ComponentType<P>) {\n  class WithTags extends Component<Omit<P, keyof InjectedTagsProps>, State> {\n    static displayName = `withTags(${getDisplayName(WrappedComponent)})`;\n\n    state: State = {\n      tags: TagStore.getState(),\n    };\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    unsubscribe = TagStore.listen(\n      (tags: TagCollection) => this.setState({tags}),\n      undefined\n    );\n\n    render() {\n      const {tags, ...props} = this.props as P;\n      return <WrappedComponent {...({tags: tags ?? this.state.tags, ...props} as P)} />;\n    }\n  }\n\n  return WithTags;\n}\n\nexport default withTags;\n","import {Component, Fragment} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {Alert} from 'sentry/components/alert';\nimport Breadcrumbs from 'sentry/components/breadcrumbs';\nimport {CompactSelect} from 'sentry/components/compactSelect';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport SearchBar from 'sentry/components/events/searchBar';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport ProjectPageFilter from 'sentry/components/projectPageFilter';\nimport {MAX_QUERY_LENGTH} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, PageFilters, Project} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {generateAggregateFields} from 'sentry/utils/discover/fields';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport withPageFilters from 'sentry/utils/withPageFilters';\n\nimport {getPerformanceLandingUrl, getTransactionSearchQuery} from '../utils';\n\nimport ChangedTransactions from './changedTransactions';\nimport {TrendChangeType, TrendFunctionField, TrendView} from './types';\nimport {\n  DEFAULT_MAX_DURATION,\n  DEFAULT_TRENDS_STATS_PERIOD,\n  getCurrentTrendFunction,\n  getCurrentTrendParameter,\n  getSelectedQueryKey,\n  modifyTrendsViewDefaultPeriod,\n  resetCursors,\n  TRENDS_FUNCTIONS,\n  TRENDS_PARAMETERS,\n} from './utils';\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  selection: PageFilters;\n};\n\ntype State = {\n  error?: string;\n  previousTrendFunction?: TrendFunctionField;\n};\n\nexport const defaultTrendsSelectionDate = {\n  start: null,\n  end: null,\n  utc: false,\n  period: DEFAULT_TRENDS_STATS_PERIOD,\n};\n\nclass TrendsContent extends Component<Props, State> {\n  state: State = {};\n\n  handleSearch = (searchQuery: string) => {\n    const {location} = this.props;\n\n    const cursors = resetCursors();\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        ...cursors,\n        query: String(searchQuery).trim() || undefined,\n      },\n    });\n  };\n\n  setError = (error: string | undefined) => {\n    this.setState({error});\n  };\n\n  handleTrendFunctionChange = (field: string) => {\n    const {organization, location} = this.props;\n\n    const offsets = {};\n\n    Object.values(TrendChangeType).forEach(trendChangeType => {\n      const queryKey = getSelectedQueryKey(trendChangeType);\n      offsets[queryKey] = undefined;\n    });\n\n    trackAnalyticsEvent({\n      eventKey: 'performance_views.trends.change_function',\n      eventName: 'Performance Views: Change Function',\n      organization_id: parseInt(organization.id, 10),\n      function_name: field,\n    });\n\n    this.setState({\n      previousTrendFunction: getCurrentTrendFunction(location).field,\n    });\n\n    const cursors = resetCursors();\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        ...offsets,\n        ...cursors,\n        trendFunction: field,\n      },\n    });\n  };\n\n  renderError() {\n    const {error} = this.state;\n\n    if (!error) {\n      return null;\n    }\n\n    return (\n      <Alert type=\"error\" showIcon>\n        {error}\n      </Alert>\n    );\n  }\n\n  handleParameterChange = (label: string) => {\n    const {organization, location} = this.props;\n    const cursors = resetCursors();\n\n    trackAnalyticsEvent({\n      eventKey: 'performance_views.trends.change_parameter',\n      eventName: 'Performance Views: Change Parameter',\n      organization_id: parseInt(organization.id, 10),\n      parameter_name: label,\n    });\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        ...cursors,\n        trendParameter: label,\n      },\n    });\n  };\n\n  getPerformanceLink() {\n    const {location} = this.props;\n\n    const newQuery = {\n      ...location.query,\n    };\n    const query = decodeScalar(location.query.query, '');\n    const conditions = new MutableSearch(query);\n\n    // This stops errors from occurring when navigating to other views since we are appending aggregates to the trends view\n    conditions.removeFilter('tpm()');\n    conditions.removeFilter('confidence()');\n    conditions.removeFilter('transaction.duration');\n    newQuery.query = conditions.formatString();\n    return {\n      pathname: getPerformanceLandingUrl(this.props.organization),\n      query: newQuery,\n    };\n  }\n\n  render() {\n    const {organization, eventView, location, projects} = this.props;\n    const {previousTrendFunction} = this.state;\n\n    const trendView = eventView.clone() as TrendView;\n    modifyTrendsViewDefaultPeriod(trendView, location);\n\n    const fields = generateAggregateFields(\n      organization,\n      [\n        {\n          field: 'absolute_correlation()',\n        },\n        {\n          field: 'trend_percentage()',\n        },\n        {\n          field: 'trend_difference()',\n        },\n        {\n          field: 'count_percentage()',\n        },\n        {\n          field: 'tpm()',\n        },\n        {\n          field: 'tps()',\n        },\n      ],\n      ['epm()', 'eps()']\n    );\n    const currentTrendFunction = getCurrentTrendFunction(location);\n    const currentTrendParameter = getCurrentTrendParameter(\n      location,\n      projects,\n      eventView.project\n    );\n    const query = getTransactionSearchQuery(location);\n\n    return (\n      <PageFiltersContainer\n        defaultSelection={{\n          datetime: defaultTrendsSelectionDate,\n        }}\n      >\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <Breadcrumbs\n              crumbs={[\n                {\n                  label: 'Performance',\n                  to: this.getPerformanceLink(),\n                },\n                {\n                  label: 'Trends',\n                },\n              ]}\n            />\n            <Layout.Title>{t('Trends')}</Layout.Title>\n          </Layout.HeaderContent>\n        </Layout.Header>\n        <Layout.Body>\n          <Layout.Main fullWidth>\n            <DefaultTrends location={location} eventView={eventView} projects={projects}>\n              <FilterActions>\n                <PageFilterBar condensed>\n                  <ProjectPageFilter />\n                  <EnvironmentPageFilter />\n                  <DatePageFilter alignDropdown=\"left\" />\n                </PageFilterBar>\n                <StyledSearchBar\n                  searchSource=\"trends\"\n                  organization={organization}\n                  projectIds={trendView.project}\n                  query={query}\n                  fields={fields}\n                  onSearch={this.handleSearch}\n                  maxQueryLength={MAX_QUERY_LENGTH}\n                />\n                <CompactSelect\n                  triggerProps={{prefix: t('Percentile')}}\n                  value={currentTrendFunction.field}\n                  options={TRENDS_FUNCTIONS.map(({label, field}) => ({\n                    value: field,\n                    label,\n                  }))}\n                  onChange={opt => this.handleTrendFunctionChange(opt.value)}\n                />\n                <CompactSelect\n                  triggerProps={{prefix: t('Parameter')}}\n                  value={currentTrendParameter.label}\n                  options={TRENDS_PARAMETERS.map(({label}) => ({\n                    value: label,\n                    label,\n                  }))}\n                  onChange={opt => this.handleParameterChange(opt.value)}\n                />\n              </FilterActions>\n              <ListContainer>\n                <ChangedTransactions\n                  trendChangeType={TrendChangeType.IMPROVED}\n                  previousTrendFunction={previousTrendFunction}\n                  trendView={trendView}\n                  location={location}\n                  setError={this.setError}\n                />\n                <ChangedTransactions\n                  trendChangeType={TrendChangeType.REGRESSION}\n                  previousTrendFunction={previousTrendFunction}\n                  trendView={trendView}\n                  location={location}\n                  setError={this.setError}\n                />\n              </ListContainer>\n            </DefaultTrends>\n          </Layout.Main>\n        </Layout.Body>\n      </PageFiltersContainer>\n    );\n  }\n}\n\ntype DefaultTrendsProps = {\n  children: React.ReactNode[];\n  eventView: EventView;\n  location: Location;\n  projects: Project[];\n};\n\nclass DefaultTrends extends Component<DefaultTrendsProps> {\n  hasPushedDefaults = false;\n\n  render() {\n    const {children, location, eventView, projects} = this.props;\n\n    const queryString = decodeScalar(location.query.query);\n    const trendParameter = getCurrentTrendParameter(\n      location,\n      projects,\n      eventView.project\n    );\n    const conditions = new MutableSearch(queryString || '');\n\n    if (queryString || this.hasPushedDefaults) {\n      this.hasPushedDefaults = true;\n      return <Fragment>{children}</Fragment>;\n    }\n    this.hasPushedDefaults = true;\n    conditions.setFilterValues('tpm()', ['>0.01']);\n    conditions.setFilterValues(trendParameter.column, ['>0', `<${DEFAULT_MAX_DURATION}`]);\n\n    const query = conditions.formatString();\n    eventView.query = query;\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        cursor: undefined,\n        query: String(query).trim() || undefined,\n      },\n    });\n    return null;\n  }\n}\n\nconst FilterActions = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: repeat(3, min-content);\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    grid-template-columns: auto 1fr auto auto;\n  }\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    order: 1;\n    grid-column: 1/5;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    order: initial;\n    grid-column: auto;\n  }\n`;\n\nconst ListContainer = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n`;\n\nexport default withPageFilters(TrendsContent);\n","import {Component} from 'react';\nimport {Location} from 'history';\n\nimport {Client} from 'sentry/api';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {Organization, PageFilters, Project} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withPageFilters from 'sentry/utils/withPageFilters';\nimport withProjects from 'sentry/utils/withProjects';\n\nimport {generatePerformanceEventView} from '../data';\n\nimport TrendsContent from './content';\n\ntype Props = {\n  api: Client;\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  selection: PageFilters;\n};\n\ntype State = {\n  eventView: EventView;\n  error?: string;\n};\n\nclass TrendsSummary extends Component<Props, State> {\n  static getDerivedStateFromProps(nextProps: Readonly<Props>, prevState: State): State {\n    return {\n      ...prevState,\n      eventView: generatePerformanceEventView(\n        nextProps.location,\n        nextProps.projects,\n        {\n          isTrends: true,\n        },\n        nextProps.organization\n      ),\n    };\n  }\n\n  state: State = {\n    eventView: generatePerformanceEventView(\n      this.props.location,\n      this.props.projects,\n      {\n        isTrends: true,\n      },\n      this.props.organization\n    ),\n    error: undefined,\n  };\n\n  getDocumentTitle(): string {\n    return [t('Trends'), t('Performance')].join(' - ');\n  }\n\n  setError = (error: string | undefined) => {\n    this.setState({error});\n  };\n\n  renderContent() {\n    const {organization, location, projects} = this.props;\n    const {eventView} = this.state;\n    return (\n      <TrendsContent\n        organization={organization}\n        location={location}\n        eventView={eventView}\n        projects={projects}\n      />\n    );\n  }\n\n  render() {\n    const {organization} = this.props;\n\n    return (\n      <SentryDocumentTitle title={this.getDocumentTitle()} orgSlug={organization.slug}>\n        <Layout.Page>{this.renderContent()}</Layout.Page>\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nexport default withOrganization(withProjects(withPageFilters(withApi(TrendsSummary))));\n","var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keys = require('./keys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nmodule.exports = assign;\n"],"names":["DEFAULT","type","zoomOnMouseWheel","zoomLock","throttle","DataZoomInside","props","Array","isArray","getFeatures","dataZoom","features","yAxisIndex","title","zoom","back","ToolBox","options","right","top","itemSize","z","feature","LoadingPanel","height","_height","p","defaultProps","className","visible","children","other","SEARCH_SPECIAL_CHARS_REGEXP","RegExp","NEGATION_OPERATOR","SEARCH_WILDCARD","STATIC_FIELD_TAGS_SET","Set","Object","keys","FIELD_TAGS","STATIC_FIELD_TAGS","reduce","tags","key","kind","FieldKind","STATIC_FIELD_TAGS_WITHOUT_TRACING","omit","TRACING_FIELDS","STATIC_SPAN_TAGS","SPAN_OP_BREAKDOWN_FIELDS","name","STATIC_SEMVER_TAGS","SEMVER_TAGS","SearchBar","maxSearchItems","organization","omitTags","fields","projectIds","includeSessionTagsValues","maxMenuHeight","customMeasurements","api","useApi","collectedTransactionFromGetTagsListRef","useRef","functionTags","useMemo","length","acc","item","has","field","isEquation","isCustomMeasurement","getFunctionTags","tagsWithKind","useEffect","getEventFieldValues","cache","clear","memoize","tag","query","endpointParams","projectIdStrings","map","String","isAggregateField","isMeasurement","Promise","resolve","fetchTagValues","orgSlug","slug","tagKey","search","includeTransactions","includeSessions","then","results","flatten","filter","defined","Error","getTagList","measurements","transaction","current","Sentry","measurementsWithKind","getMeasurementTags","combinedTags","includes","assign","FieldKey","values","sort","a","b","toLowerCase","localeCompare","predefined","list","totalCount","setTag","countGroup","find","n","finish","hasRecentSearches","savedSearchType","SavedSearchType","onGetTagValues","supportedTags","prepareQuery","replace","excludedTags","customPerformanceMetrics","withTags","theme","backgroundSecondary","borderRadius","WrappedComponent","WithTags","Component","TagStore","this","setState","undefined","componentWillUnmount","unsubscribe","render","state","getDisplayName","defaultTrendsSelectionDate","start","end","utc","period","DEFAULT_TRENDS_STATS_PERIOD","TrendsContent","searchQuery","location","cursors","resetCursors","browserHistory","pathname","trim","error","offsets","TrendChangeType","forEach","trendChangeType","queryKey","getSelectedQueryKey","trackAnalyticsEvent","eventKey","eventName","organization_id","parseInt","id","function_name","previousTrendFunction","getCurrentTrendFunction","trendFunction","label","parameter_name","trendParameter","renderError","showIcon","getPerformanceLink","newQuery","decodeScalar","conditions","MutableSearch","removeFilter","formatString","getPerformanceLandingUrl","eventView","projects","trendView","clone","modifyTrendsViewDefaultPeriod","generateAggregateFields","currentTrendFunction","currentTrendParameter","getCurrentTrendParameter","project","getTransactionSearchQuery","defaultSelection","datetime","crumbs","to","t","fullWidth","DefaultTrends","FilterActions","condensed","alignDropdown","StyledSearchBar","searchSource","onSearch","handleSearch","maxQueryLength","MAX_QUERY_LENGTH","triggerProps","prefix","value","TRENDS_FUNCTIONS","onChange","opt","handleTrendFunctionChange","TRENDS_PARAMETERS","handleParameterChange","ListContainer","setError","queryString","hasPushedDefaults","Fragment","setFilterValues","column","DEFAULT_MAX_DURATION","cursor","space","breakpoints","small","xlarge","withPageFilters","TrendsSummary","generatePerformanceEventView","isTrends","static","nextProps","prevState","getDocumentTitle","join","renderContent","withOrganization","withProjects","withApi","assignValue","copyObject","createAssigner","isArrayLike","isPrototype","hasOwnProperty","prototype","object","source","call","module","exports"],"sourceRoot":""}