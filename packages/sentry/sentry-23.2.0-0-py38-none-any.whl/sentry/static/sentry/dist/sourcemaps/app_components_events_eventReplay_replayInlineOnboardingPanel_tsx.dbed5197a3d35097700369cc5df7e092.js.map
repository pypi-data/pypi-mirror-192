{"version":3,"file":"chunks/app_components_events_eventReplay_replayInlineOnboardingPanel_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"wrBAYA,MAAMA,EAAoB,uCAQ1B,SAASC,EAAiBC,GACxBC,EAAAA,EAAAA,QAAqBH,EAAmBI,OAAOC,KAAKC,MAAQJ,GAC9D,CAMe,SAASK,IACtB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,KACvC,MAAMC,EAbDC,OAAOT,EAAAA,EAAAA,QAAqBH,KAAuB,EAcxD,SAAIW,GAAiBN,KAAKC,MAAQK,KANpCR,EAAAA,EAAAA,WAAwBH,IAUf,EAAK,KAER,gBAACa,IAAmBC,EAAAA,EAAAA,KAE1B,OAAIN,EACK,MAIP,QAACO,EAAqB,YACpB,0BACE,QAACC,EAAO,WAAEC,EAAAA,EAAAA,GAAE,+BACZ,QAACC,EAAO,WACLD,EAAAA,EAAAA,GACC,iFAGJ,QAACE,EAAU,YACT,QAAC,KAAM,CAACC,QAASP,EAAiBQ,SAAS,UAAUC,KAAK,KAAI,UAC3DL,EAAAA,EAAAA,GAAE,kBAEL,QAAC,KAAS,CAACM,QAAM,aACf,QAAC,KAAM,CACLD,KAAK,KACLF,QAAS,KACPnB,EA/CI,QAgDJQ,GAAY,EAAK,EACjB,UAEDQ,EAAAA,EAAAA,GAAE,aAEL,QAAC,KAAM,CACLK,KAAK,KACLF,QAAS,KACPnB,EAvDK,SAwDLQ,GAAY,EAAK,EACjB,UAEDQ,EAAAA,EAAAA,GAAE,uBAKX,QAACO,EAAY,CAACC,I,q+TAA8BC,MAAO,IAAKC,OAAQ,IAAKC,IAAI,OAG/E,CArDwBrB,EAAqB,oCAuD7C,MAAMQ,GAAwB,OAAO,MAAK,qBAAZ,CAAa,yEAIpBc,GAAKA,EAAEC,MAAMC,QAAM,mBACvBF,GAAKA,EAAEC,MAAME,cAAY,aAC/BC,EAAAA,EAAAA,GAAM,GAAE,mBACFA,EAAAA,EAAAA,GAAM,GAAE,wBAEJJ,GAAKA,EAAEC,MAAMI,YAAYC,OAAK,0BAK/CnB,GAAU,OAAO,KAAI,qBAAX,CAAY,uCAEba,GAAKA,EAAEC,MAAMM,eAAa,WAC9BP,GAAKA,EAAEC,MAAMO,SAAO,mBACZJ,EAAAA,EAAAA,GAAM,GAAE,KAGrBf,GAAU,OAAO,IAAG,qBAAV,CAAW,kBACRe,EAAAA,EAAAA,GAAM,GAAE,eACZJ,GAAKA,EAAEC,MAAMQ,gBAAc,KAGpCd,GAAe,OAAO,MAAK,qBAAZ,CAAa,oCAGXK,GAAKA,EAAEC,MAAMI,YAAYC,OAAK,qBAK/ChB,GAAa,OAAO,MAAK,qBAAZ,CAAa,4EAIrBc,EAAAA,EAAAA,GAAM,GAAE,I","sources":["webpack:///./app/components/events/eventReplay/replayInlineOnboardingPanel.tsx"],"sourcesContent":["import {useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport replaysInlineOnboarding from 'sentry-images/spot/replays-inline-onboarding.svg';\n\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport localStorage from 'sentry/utils/localStorage';\nimport {useReplayOnboardingSidebarPanel} from 'sentry/utils/replays/hooks/useReplayOnboarding';\n\nconst LOCAL_STORAGE_KEY = 'replay-preview-onboarding-hide-until';\nconst SNOOZE_TIME = 1000 * 60 * 60 * 24 * 7; // 1 week\nconst DISMISS_TIME = 1000 * 60 * 60 * 24 * 365; // 1 year\n\nfunction getHideUntilTime() {\n  return Number(localStorage.getItem(LOCAL_STORAGE_KEY)) || 0;\n}\n\nfunction setHideUntilTime(offset: number) {\n  localStorage.setItem(LOCAL_STORAGE_KEY, String(Date.now() + offset));\n}\n\nfunction clearHideUntilTime() {\n  localStorage.removeItem(LOCAL_STORAGE_KEY);\n}\n\nexport default function ReplayOnboardingPanel() {\n  const [isHidden, setIsHidden] = useState(() => {\n    const hideUntilTime = getHideUntilTime();\n    if (hideUntilTime && Date.now() < hideUntilTime) {\n      return true;\n    }\n    clearHideUntilTime();\n    return false;\n  });\n  const {activateSidebar} = useReplayOnboardingSidebarPanel();\n\n  if (isHidden) {\n    return null;\n  }\n\n  return (\n    <StyledOnboardingPanel>\n      <div>\n        <Heading>{t('Configure Session Replay')}</Heading>\n        <Content>\n          {t(\n            'Playback your app to identify the root cause of errors and latency issues.'\n          )}\n        </Content>\n        <ButtonList>\n          <Button onClick={activateSidebar} priority=\"primary\" size=\"sm\">\n            {t('Get Started')}\n          </Button>\n          <ButtonBar merged>\n            <Button\n              size=\"sm\"\n              onClick={() => {\n                setHideUntilTime(SNOOZE_TIME);\n                setIsHidden(true);\n              }}\n            >\n              {t('Snooze')}\n            </Button>\n            <Button\n              size=\"sm\"\n              onClick={() => {\n                setHideUntilTime(DISMISS_TIME);\n                setIsHidden(true);\n              }}\n            >\n              {t('Dismiss')}\n            </Button>\n          </ButtonBar>\n        </ButtonList>\n      </div>\n      <Illustration src={replaysInlineOnboarding} width={220} height={112} alt=\"\" />\n    </StyledOnboardingPanel>\n  );\n}\n\nconst StyledOnboardingPanel = styled('div')`\n  display: flex;\n  flex-direction: column;\n  max-width: 600px;\n  border: 1px dashed ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  padding: ${space(3)};\n  margin-bottom: ${space(3)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    flex-direction: row;\n  }\n`;\n\nconst Heading = styled('h3')`\n  text-transform: uppercase;\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray300};\n  margin-bottom: ${space(1)};\n`;\n\nconst Content = styled('p')`\n  margin-bottom: ${space(2)};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst Illustration = styled('img')`\n  display: none;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: block;\n  }\n`;\n\nconst ButtonList = styled('div')`\n  display: inline-flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 0 ${space(1)};\n`;\n"],"names":["LOCAL_STORAGE_KEY","setHideUntilTime","offset","localStorage","String","Date","now","ReplayOnboardingPanel","isHidden","setIsHidden","useState","hideUntilTime","Number","activateSidebar","useReplayOnboardingSidebarPanel","StyledOnboardingPanel","Heading","t","Content","ButtonList","onClick","priority","size","merged","Illustration","src","width","height","alt","p","theme","border","borderRadius","space","breakpoints","small","fontSizeSmall","gray300","fontSizeMedium"],"sourceRoot":""}