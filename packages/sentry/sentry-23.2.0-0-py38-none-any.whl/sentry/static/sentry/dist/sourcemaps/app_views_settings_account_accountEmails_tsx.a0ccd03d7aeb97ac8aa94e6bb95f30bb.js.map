{"version":3,"file":"chunks/app_views_settings_account_accountEmails_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/settings/account/accountEmails.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {RequestOptions} from 'sentry/api';\nimport AlertLink from 'sentry/components/alertLink';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Form, {FormProps} from 'sentry/components/forms/form';\nimport JsonForm from 'sentry/components/forms/jsonForm';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport Tag from 'sentry/components/tag';\nimport accountEmailsFields from 'sentry/data/forms/accountEmails';\nimport {IconDelete, IconStack} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {UserEmail} from 'sentry/types';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\nconst ENDPOINT = '/users/me/emails/';\n\ntype Props = AsyncView['props'];\n\ntype State = AsyncView['state'] & {\n  emails: UserEmail[];\n};\n\nclass AccountEmails extends AsyncView<Props, State> {\n  getTitle() {\n    return t('Emails');\n  }\n\n  getEndpoints() {\n    return [];\n  }\n\n  handleSubmitSuccess: FormProps['onSubmitSuccess'] = (_change, model, id) => {\n    if (id === undefined) {\n      return;\n    }\n    model.setValue(id, '');\n    this.remountComponent();\n  };\n\n  renderBody() {\n    return (\n      <Fragment>\n        <SettingsPageHeader title={t('Email Addresses')} />\n        <EmailAddresses />\n        <Form\n          apiMethod=\"POST\"\n          apiEndpoint={ENDPOINT}\n          saveOnBlur\n          allowUndo={false}\n          onSubmitSuccess={this.handleSubmitSuccess}\n        >\n          <JsonForm forms={accountEmailsFields} />\n        </Form>\n\n        <AlertLink to=\"/settings/account/notifications\" icon={<IconStack />}>\n          {t('Want to change how many emails you get? Use the notifications panel.')}\n        </AlertLink>\n      </Fragment>\n    );\n  }\n}\n\nexport default AccountEmails;\n\nexport class EmailAddresses extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['emails', ENDPOINT]];\n  }\n  doApiCall(endpoint: string, requestParams: RequestOptions) {\n    this.setState({loading: true, emails: []}, () =>\n      this.api\n        .requestPromise(endpoint, requestParams)\n        .then(() => this.remountComponent())\n        .catch(err => {\n          this.remountComponent();\n\n          if (err?.responseJSON?.email) {\n            addErrorMessage(err.responseJSON.email);\n          }\n        })\n    );\n  }\n  handleSetPrimary = (email: string) =>\n    this.doApiCall(ENDPOINT, {\n      method: 'PUT',\n      data: {email},\n    });\n\n  handleRemove = (email: string) =>\n    this.doApiCall(ENDPOINT, {\n      method: 'DELETE',\n      data: {email},\n    });\n\n  handleVerify = (email: string) =>\n    this.doApiCall(`${ENDPOINT}confirm/`, {\n      method: 'POST',\n      data: {email},\n    });\n\n  render() {\n    const {emails, loading} = this.state;\n    const primary = emails?.find(({isPrimary}) => isPrimary);\n    const secondary = emails?.filter(({isPrimary}) => !isPrimary);\n\n    if (loading) {\n      return (\n        <Panel>\n          <PanelHeader>{t('Email Addresses')}</PanelHeader>\n          <PanelBody>\n            <LoadingIndicator />\n          </PanelBody>\n        </Panel>\n      );\n    }\n    return (\n      <Panel>\n        <PanelHeader>{t('Email Addresses')}</PanelHeader>\n        <PanelBody>\n          {primary && (\n            <EmailRow\n              onRemove={this.handleRemove}\n              onVerify={this.handleVerify}\n              {...primary}\n            />\n          )}\n\n          {secondary?.map(emailObj => (\n            <EmailRow\n              key={emailObj.email}\n              onSetPrimary={this.handleSetPrimary}\n              onRemove={this.handleRemove}\n              onVerify={this.handleVerify}\n              {...emailObj}\n            />\n          ))}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\ntype EmailRowProps = {\n  email: string;\n  onRemove: (email: string, e: React.MouseEvent) => void;\n  onVerify: (email: string, e: React.MouseEvent) => void;\n  hideRemove?: boolean;\n  isPrimary?: boolean;\n  isVerified?: boolean;\n  onSetPrimary?: (email: string, e: React.MouseEvent) => void;\n};\n\nconst EmailRow = ({\n  email,\n  onRemove,\n  onVerify,\n  onSetPrimary,\n  isVerified,\n  isPrimary,\n  hideRemove,\n}: EmailRowProps) => (\n  <EmailItem>\n    <EmailTags>\n      {email}\n      {!isVerified && <Tag type=\"warning\">{t('Unverified')}</Tag>}\n      {isPrimary && <Tag type=\"success\">{t('Primary')}</Tag>}\n    </EmailTags>\n    <ButtonBar gap={1}>\n      {!isPrimary && isVerified && (\n        <Button size=\"sm\" onClick={e => onSetPrimary?.(email, e)}>\n          {t('Set as primary')}\n        </Button>\n      )}\n      {!isVerified && (\n        <Button size=\"sm\" onClick={e => onVerify(email, e)}>\n          {t('Resend verification')}\n        </Button>\n      )}\n      {!hideRemove && !isPrimary && (\n        <Button\n          aria-label={t('Remove email')}\n          data-test-id=\"remove\"\n          priority=\"danger\"\n          size=\"sm\"\n          icon={<IconDelete />}\n          onClick={e => onRemove(email, e)}\n        />\n      )}\n    </ButtonBar>\n  </EmailItem>\n);\n\nconst EmailTags = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(1)};\n  align-items: center;\n`;\n\nconst EmailItem = styled(PanelItem)`\n  justify-content: space-between;\n`;\n"],"names":["ENDPOINT","AccountEmails","AsyncView","_change","model","id","undefined","setValue","this","remountComponent","getTitle","t","getEndpoints","renderBody","Fragment","title","EmailAddresses","apiMethod","apiEndpoint","saveOnBlur","allowUndo","onSubmitSuccess","handleSubmitSuccess","forms","accountEmailsFields","to","icon","AsyncComponent","email","doApiCall","method","data","endpoint","requestParams","setState","loading","emails","api","requestPromise","then","catch","err","responseJSON","addErrorMessage","render","state","primary","find","isPrimary","secondary","filter","EmailRow","onRemove","handleRemove","onVerify","handleVerify","map","emailObj","onSetPrimary","handleSetPrimary","isVerified","hideRemove","EmailItem","EmailTags","type","gap","size","onClick","e","priority","space","PanelItem"],"sourceRoot":""}