{"version":3,"file":"chunks/app_views_acceptOrganizationInvite_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/narrowLayout.tsx","webpack:///./app/views/acceptOrganizationInvite/index.tsx","webpack:///./app/views/asyncView.tsx"],"sourcesContent":["import {useEffect} from 'react';\nimport styled from '@emotion/styled';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {IconSentry} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport useApi from 'sentry/utils/useApi';\n\ntype Props = {\n  children: React.ReactNode;\n  maxWidth?: string;\n  showLogout?: boolean;\n};\n\nfunction NarrowLayout({maxWidth, showLogout, children}: Props) {\n  const api = useApi();\n\n  useEffect(() => {\n    document.body.classList.add('narrow');\n\n    return () => document.body.classList.remove('narrow');\n  }, []);\n\n  async function handleLogout() {\n    await logout(api);\n    window.location.assign('/auth/login');\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"pattern-bg\" />\n      <div className=\"container\" style={{maxWidth}}>\n        <div className=\"box box-modal\">\n          <div className=\"box-header\">\n            <a href=\"/\">\n              <IconSentry size=\"lg\" />\n            </a>\n            {showLogout && (\n              <a className=\"logout pull-right\" onClick={handleLogout}>\n                <Logout>{t('Sign out')}</Logout>\n              </a>\n            )}\n          </div>\n          <div className=\"box-content with-padding\">{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst Logout = styled('span')`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nexport default NarrowLayout;\n","import {Fragment} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {urlEncode} from '@sentry/utils';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {Alert} from 'sentry/components/alert';\nimport {Button} from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport NarrowLayout from 'sentry/components/narrowLayout';\nimport {t, tct} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {space} from 'sentry/styles/space';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\ntype InviteDetails = {\n  existingMember: boolean;\n  hasAuthProvider: boolean;\n  needs2fa: boolean;\n  needsAuthentication: boolean;\n  needsEmailVerification: boolean;\n  orgSlug: string;\n  requireSso: boolean;\n  ssoProvider?: string;\n};\n\ntype Props = RouteComponentProps<{memberId: string; token: string; orgId?: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  acceptError: boolean | undefined;\n  accepting: boolean | undefined;\n  inviteDetails: InviteDetails;\n};\n\nclass AcceptOrganizationInvite extends AsyncView<Props, State> {\n  disableErrorReport = false;\n\n  get orgSlug(): string | null {\n    const {params} = this.props;\n    if (params.orgId) {\n      return params.orgId;\n    }\n    const {customerDomain} = window.__initialData;\n    if (customerDomain?.subdomain) {\n      return customerDomain.subdomain;\n    }\n    return null;\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {memberId, token} = this.props.params;\n    if (this.orgSlug) {\n      return [['inviteDetails', `/accept-invite/${this.orgSlug}/${memberId}/${token}/`]];\n    }\n    return [['inviteDetails', `/accept-invite/${memberId}/${token}/`]];\n  }\n\n  getTitle() {\n    return t('Accept Organization Invite');\n  }\n\n  makeNextUrl(path: string) {\n    return `${path}?${urlEncode({next: window.location.pathname})}`;\n  }\n\n  handleLogout = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    await logout(this.api);\n    window.location.replace(this.makeNextUrl('/auth/login/'));\n  };\n\n  handleAcceptInvite = async () => {\n    const {memberId, token} = this.props.params;\n\n    this.setState({accepting: true});\n    try {\n      if (this.orgSlug) {\n        await this.api.requestPromise(\n          `/accept-invite/${this.orgSlug}/${memberId}/${token}/`,\n          {\n            method: 'POST',\n          }\n        );\n      } else {\n        await this.api.requestPromise(`/accept-invite/${memberId}/${token}/`, {\n          method: 'POST',\n        });\n      }\n      browserHistory.replace(`/${this.state.inviteDetails.orgSlug}/`);\n    } catch {\n      this.setState({acceptError: true});\n    }\n    this.setState({accepting: false});\n  };\n\n  get existingMemberAlert() {\n    const user = ConfigStore.get('user');\n\n    return (\n      <Alert type=\"warning\" data-test-id=\"existing-member\">\n        {tct(\n          'Your account ([email]) is already a member of this organization. [switchLink:Switch accounts]?',\n          {\n            email: user.email,\n            switchLink: (\n              <Link\n                to=\"\"\n                data-test-id=\"existing-member-link\"\n                onClick={this.handleLogout}\n              />\n            ),\n          }\n        )}\n      </Alert>\n    );\n  }\n\n  get authenticationActions() {\n    const {inviteDetails} = this.state;\n\n    return (\n      <Fragment>\n        {!inviteDetails.requireSso && (\n          <p data-test-id=\"action-info-general\">\n            {t(\n              `To continue, you must either create a new account, or login to an\n              existing Sentry account.`\n            )}\n          </p>\n        )}\n\n        {inviteDetails.hasAuthProvider && (\n          <p data-test-id=\"action-info-sso\">\n            {inviteDetails.requireSso\n              ? tct(\n                  `Note that [orgSlug] has required Single Sign-On (SSO) using\n               [authProvider]. You may create an account by authenticating with\n               the organization's SSO provider.`,\n                  {\n                    orgSlug: <strong>{inviteDetails.orgSlug}</strong>,\n                    authProvider: inviteDetails.ssoProvider,\n                  }\n                )\n              : tct(\n                  `Note that [orgSlug] has enabled Single Sign-On (SSO) using\n               [authProvider]. You may create an account by authenticating with\n               the organization's SSO provider.`,\n                  {\n                    orgSlug: <strong>{inviteDetails.orgSlug}</strong>,\n                    authProvider: inviteDetails.ssoProvider,\n                  }\n                )}\n          </p>\n        )}\n\n        <Actions>\n          <ActionsLeft>\n            {inviteDetails.hasAuthProvider && (\n              <Button\n                data-test-id=\"sso-login\"\n                priority=\"primary\"\n                href={this.makeNextUrl(`/auth/login/${inviteDetails.orgSlug}/`)}\n              >\n                {t('Join with %s', inviteDetails.ssoProvider)}\n              </Button>\n            )}\n            {!inviteDetails.requireSso && (\n              <Button\n                data-test-id=\"create-account\"\n                priority=\"primary\"\n                href={this.makeNextUrl('/auth/register/')}\n              >\n                {t('Create a new account')}\n              </Button>\n            )}\n          </ActionsLeft>\n          {!inviteDetails.requireSso && (\n            <ExternalLink\n              href={this.makeNextUrl('/auth/login/')}\n              openInNewTab={false}\n              data-test-id=\"link-with-existing\"\n            >\n              {t('Login using an existing account')}\n            </ExternalLink>\n          )}\n        </Actions>\n      </Fragment>\n    );\n  }\n\n  get warning2fa() {\n    const {inviteDetails} = this.state;\n\n    return (\n      <Fragment>\n        <p data-test-id=\"2fa-warning\">\n          {tct(\n            'To continue, [orgSlug] requires all members to configure two-factor authentication.',\n            {orgSlug: inviteDetails.orgSlug}\n          )}\n        </p>\n        <Actions>\n          <Button priority=\"primary\" to=\"/settings/account/security/\">\n            {t('Configure Two-Factor Auth')}\n          </Button>\n        </Actions>\n      </Fragment>\n    );\n  }\n\n  get warningEmailVerification() {\n    const {inviteDetails} = this.state;\n\n    return (\n      <Fragment>\n        <p data-test-id=\"email-verification-warning\">\n          {tct(\n            'To continue, [orgSlug] requires all members to verify their email address.',\n            {orgSlug: inviteDetails.orgSlug}\n          )}\n        </p>\n        <Actions>\n          <Button priority=\"primary\" to=\"/settings/account/emails/\">\n            {t('Verify Email Address')}\n          </Button>\n        </Actions>\n      </Fragment>\n    );\n  }\n\n  get acceptActions() {\n    const {inviteDetails, accepting} = this.state;\n\n    return (\n      <Fragment>\n        {inviteDetails.hasAuthProvider && !inviteDetails.requireSso && (\n          <p data-test-id=\"action-info-sso\">\n            {tct(\n              `Note that [orgSlug] has enabled Single Sign-On (SSO) using\n               [authProvider]. You may join the organization by authenticating with\n               the organization's SSO provider or via your standard account authentication.`,\n              {\n                orgSlug: <strong>{inviteDetails.orgSlug}</strong>,\n                authProvider: inviteDetails.ssoProvider,\n              }\n            )}\n          </p>\n        )}\n        <Actions>\n          <ActionsLeft>\n            {inviteDetails.hasAuthProvider && !inviteDetails.requireSso && (\n              <Button\n                data-test-id=\"sso-login\"\n                priority=\"primary\"\n                href={this.makeNextUrl(`/auth/login/${inviteDetails.orgSlug}/`)}\n              >\n                {t('Join with %s', inviteDetails.ssoProvider)}\n              </Button>\n            )}\n\n            <Button\n              data-test-id=\"join-organization\"\n              priority=\"primary\"\n              disabled={accepting}\n              onClick={this.handleAcceptInvite}\n            >\n              {t('Join the %s organization', inviteDetails.orgSlug)}\n            </Button>\n          </ActionsLeft>\n        </Actions>\n      </Fragment>\n    );\n  }\n\n  renderError() {\n    return (\n      <NarrowLayout>\n        <Alert type=\"warning\">\n          {t('This organization invite link is no longer valid.')}\n        </Alert>\n      </NarrowLayout>\n    );\n  }\n\n  renderBody() {\n    const {inviteDetails, acceptError} = this.state;\n\n    return (\n      <NarrowLayout>\n        <SettingsPageHeader title={t('Accept organization invite')} />\n        {acceptError && (\n          <Alert type=\"error\">\n            {t('Failed to join this organization. Please try again')}\n          </Alert>\n        )}\n        <InviteDescription data-test-id=\"accept-invite\">\n          {tct('[orgSlug] is using Sentry to track and debug errors.', {\n            orgSlug: <strong>{inviteDetails.orgSlug}</strong>,\n          })}\n        </InviteDescription>\n        {inviteDetails.needsAuthentication\n          ? this.authenticationActions\n          : inviteDetails.existingMember\n          ? this.existingMemberAlert\n          : inviteDetails.needs2fa\n          ? this.warning2fa\n          : inviteDetails.needsEmailVerification\n          ? this.warningEmailVerification\n          : inviteDetails.requireSso\n          ? this.authenticationActions\n          : this.acceptActions}\n      </NarrowLayout>\n    );\n  }\n}\n\nconst Actions = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${space(3)};\n`;\nconst ActionsLeft = styled('span')`\n  > a {\n    margin-right: ${space(1)};\n  }\n`;\n\nconst InviteDescription = styled('p')`\n  font-size: 1.2em;\n`;\nexport default AcceptOrganizationInvite;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n"],"names":["NarrowLayout","maxWidth","showLogout","children","api","useApi","useEffect","document","body","classList","add","remove","className","style","href","size","onClick","async","logout","window","location","assign","Logout","t","p","theme","fontSizeLarge","AcceptOrganizationInvite","AsyncView","e","preventDefault","this","replace","makeNextUrl","memberId","token","props","params","setState","accepting","orgSlug","requestPromise","method","browserHistory","state","inviteDetails","acceptError","orgId","customerDomain","__initialData","subdomain","getEndpoints","getTitle","path","urlEncode","next","pathname","existingMemberAlert","user","ConfigStore","type","tct","email","switchLink","to","handleLogout","authenticationActions","Fragment","requireSso","hasAuthProvider","authProvider","ssoProvider","Actions","ActionsLeft","priority","openInNewTab","warning2fa","warningEmailVerification","acceptActions","disabled","handleAcceptInvite","renderError","renderBody","title","InviteDescription","needsAuthentication","existingMember","needs2fa","needsEmailVerification","space","AsyncComponent","render","renderComponent"],"sourceRoot":""}