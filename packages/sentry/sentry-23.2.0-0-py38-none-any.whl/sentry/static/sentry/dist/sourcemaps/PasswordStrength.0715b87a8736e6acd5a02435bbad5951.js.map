{"version":3,"file":"chunks/PasswordStrength.xxxxxxxxxxxxxxxxxxxx.js","mappings":"2sBAmBA,MAiBMA,EAAmB,IAIZ,IAJa,MACxBC,EAAK,OACLC,EAAS,CAAC,YAAa,YAAa,OAAQ,SAAU,eAAc,OACpEC,EAAS,CAACC,EAAAA,GAAAA,OAAcA,EAAAA,GAAAA,OAAcA,EAAAA,GAAAA,UAAiBA,EAAAA,GAAAA,SAAgBA,EAAAA,GAAAA,WACjE,EACN,GAAc,KAAVH,EACF,OAAO,KAGT,MAAMI,EAASC,IAAOL,GAEtB,IAAKI,EACH,OAAO,KAGT,MAAM,MAACE,GAASF,EACVG,EAAUC,KAAKC,OAAQH,EAAQ,GAjCrB,EAiCuC,KAEjDI,GAASC,EAAAA,EAAAA,IAAG,cACFT,EAAOI,GAAM,UAClBC,EAAO,SAGlB,OACE,QAAC,EAAAK,SAAQ,YACP,QAACC,EAAgB,CACfC,KAAK,cACL,gBAAeR,EACf,gBAAe,EACf,gBAAe,IAAI,UAEnB,QAACS,EAAmB,CAACJ,IAAKD,OAE5B,QAACM,EAAa,WACXC,EAAAA,EAAAA,IAAI,wBAAyB,CAC5BC,WAAW,QAACC,EAAS,UAAElB,EAAOK,WAGzB,EAtCTP,EAAgB,+BA0CtB,MAAMc,GAAmB,OAAO,MAAK,qBAAZ,CAAa,cACtBV,EAAAA,GAAAA,QAAa,kDAMvBY,GAAsB,OAAO,MAAK,qBAAZ,CAAa,uCAInCC,GAAgB,OAAO,MAAK,qBAAZ,CAAa,+BAEnBI,EAAAA,EAAAA,GAAM,KAAK,UAChBjB,EAAAA,GAAAA,QAAa,KAGlBgB,GAAY,OAAO,SAAQ,qBAAf,CAAgB,UACvBE,GAAKA,EAAElB,MAAMmB,OAAK,KAG7B,IAOaC,EAAW,QAAC,MAACC,EAAK,QAAEC,GAAQ,SACvCA,GACAD,GACAA,EAAME,iBACJ,QACAC,KAASC,KACPC,EAAAA,EAAAA,SAAO,QAAC9B,EAAgB,CAACC,MAAO4B,EAAEE,OAAO9B,QAAWyB,EAAQ,IAE/D,C","sources":["webpack:///./app/components/passwordStrength.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport {render} from 'react-dom';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport throttle from 'lodash/throttle';\nimport zxcvbn from 'zxcvbn';\n\nimport {tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport theme from 'sentry/utils/theme';\n\n/**\n * NOTE: Do not import this component synchronously. The zxcvbn library is\n * relatively large. This component should be loaded async as a split chunk.\n */\n\n/**\n * The maximum score that zxcvbn reports\n */\nconst MAX_SCORE = 5;\n\ntype Props = {\n  /**\n   * The password value.\n   */\n  value: string;\n  /**\n   * The color to make the progress bar for each strength level. 5 levels.\n   */\n  colors?: [string, string, string, string, string];\n  /**\n   * A set of labels to display for each password strength level. 5 levels.\n   */\n  labels?: [string, string, string, string, string];\n};\n\nconst PasswordStrength = ({\n  value,\n  labels = ['Very Weak', 'Very Weak', 'Weak', 'Strong', 'Very Strong'],\n  colors = [theme.red300, theme.red300, theme.yellow300, theme.green300, theme.green300],\n}: Props) => {\n  if (value === '') {\n    return null;\n  }\n\n  const result = zxcvbn(value);\n\n  if (!result) {\n    return null;\n  }\n\n  const {score} = result;\n  const percent = Math.round(((score + 1) / MAX_SCORE) * 100);\n\n  const styles = css`\n    background: ${colors[score]};\n    width: ${percent}%;\n  `;\n\n  return (\n    <Fragment>\n      <StrengthProgress\n        role=\"progressbar\"\n        aria-valuenow={score}\n        aria-valuemin={0}\n        aria-valuemax={100}\n      >\n        <StrengthProgressBar css={styles} />\n      </StrengthProgress>\n      <StrengthLabel>\n        {tct('Strength: [textScore]', {\n          textScore: <ScoreText>{labels[score]}</ScoreText>,\n        })}\n      </StrengthLabel>\n    </Fragment>\n  );\n};\n\nconst StrengthProgress = styled('div')`\n  background: ${theme.gray200};\n  height: 8px;\n  border-radius: 2px;\n  overflow: hidden;\n`;\n\nconst StrengthProgressBar = styled('div')`\n  height: 100%;\n`;\n\nconst StrengthLabel = styled('div')`\n  font-size: 0.8em;\n  margin-top: ${space(0.25)};\n  color: ${theme.gray400};\n`;\n\nconst ScoreText = styled('strong')`\n  color: ${p => p.theme.black};\n`;\n\nexport default PasswordStrength;\n\n/**\n * This is a shim that allows the password strength component to be used\n * outside of our main react application. Mostly useful since all of our\n * registration pages aren't in the react app.\n */\nexport const attachTo = ({input, element}) =>\n  element &&\n  input &&\n  input.addEventListener(\n    'input',\n    throttle(e => {\n      render(<PasswordStrength value={e.target.value} />, element);\n    })\n  );\n"],"names":["PasswordStrength","value","labels","colors","theme","result","zxcvbn","score","percent","Math","round","styles","css","Fragment","StrengthProgress","role","StrengthProgressBar","StrengthLabel","tct","textScore","ScoreText","space","p","black","attachTo","input","element","addEventListener","throttle","e","render","target"],"sourceRoot":""}