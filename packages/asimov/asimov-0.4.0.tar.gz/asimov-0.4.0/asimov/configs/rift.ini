{%- if production.event.repository %}
{%- assign repo_dir = production.event.repository.directory %}
{%- else %}
{%- assign repo_dir = "." %}
{%- endif %}
{%- assign meta = production.meta %}
{%- assign sampler = production.meta['sampler'] %}
{%- assign scheduler = production.meta['scheduler'] %}
{%- assign likelihood = production.meta['likelihood'] %}
{%- assign data = production.meta['data'] %}
{%- assign quality = production.meta['quality'] %}
{%- assign ifos = production.meta['interferometers'] %}
[analysis]
ifos={{ ifos }}
nparallel={{ sampler['threads'] | default: 4 }}
roq = False
coherence-test=False
upload-to-gracedb=False
singularity=False
osg=False


[paths]
webdir={{ config['general']['webroot'] }}/{{ production.event.name }}/{{ production.name }}


[input]
max-psd-length=10000
padding=16
minimum_realizations_number=8
events=all
analyse-all-time=False
timeslides=False
ignore-gracedb-psd=True
threshold-snr=3
gps-time-file =
ignore-state-vector = True

[condor]
lalsuite-install={{ config["pipelines"]["environment"] }}
datafind=%(lalsuite-install)s/bin/gw_data_find
mergeNSscript=%(lalsuite-install)s/bin/lalinference_nest2pos
mergeMCMCscript=%(lalsuite-install)s/bin/cbcBayesMCMC2pos
combinePTMCMCh5script=%(lalsuite-install)s/bin/cbcBayesCombinePTMCMCh5s
resultspage=%(lalsuite-install)s/bin/cbcBayesPostProc
segfind=%(lalsuite-install)s/bin/ligolw_segment_query
ligolw_print=%(lalsuite-install)s/bin/ligolw_print
coherencetest=%(lalsuite-install)s/bin/lalinference_coherence_test
lalinferencenest=%(lalsuite-install)s/bin/lalinference_nest
lalinferencemcmc=%(lalsuite-install)s/bin/lalinference_mcmc
lalinferencebambi=%(lalsuite-install)s/bin/lalinference_bambi
lalinferencedatadump=%(lalsuite-install)s/bin/lalinference_datadump
ligo-skymap-from-samples=%(lalsuite-install)s/bin/ligo-skymap-from-samples
ligo-skymap-plot=%(lalsuite-install)s/bin/ligo-skymap-plot
processareas=%(lalsuite-install)s/bin/process_areas
computeroqweights=%(lalsuite-install)s/bin/lalinference_compute_roq_weights
mpiwrapper=%(lalsuite-install)s/bin/lalinference_mpi_wrapper
gracedb=%(lalsuite-install)s/bin/gracedb
ppanalysis=%(lalsuite-install)s/bin/cbcBayesPPAnalysis
pos_to_sim_inspiral=%(lalsuite-install)s/bin/cbcBayesPosToSimInspiral

mpirun = %(lalsuite-install)s/bin/mpirun

accounting_group={{ scheduler['accounting group'] }}
accounting_group_user=daniel.williams

[datafind]
url-type=file
types = { {% for ifo in ifos %}{{ifo}}:{{data['frame types'][ifo]}},{% endfor %} }

[data]
channels = { {% for ifo in ifos %}{{ifo}}:{{data['channels'][ifo]}},{% endfor %} }
[lalinference]
flow = { {% for ifo in ifos %}{{ifo}}:{{quality['minimum frequency'][ifo]}},{% endfor %} }
fhigh = { {% for ifo in ifos %}{{ifo}}:{{quality['maximum frequency'][ifo]}},{% endfor %} }

[engine]

fref={{ production.meta['waveform']['reference frequency'] }}

fmin-template={{ likelihood['start frequency'] }}

approx = {{ production.meta['waveform']['approximant'] }}
amporder = {{ production.meta['priors']['amplitude order'] }}

seglen = {{ data['segment length'] }}
srate =  {{ likelihood['sample rate'] }}

neff=1000
nlive=2048
maxmcmc = 5000
tolerance=0.1
ntemps=8
resume=
adapt-temps=
progress=

enable-spline-calibration =
spcal-nodes = 10
{% for ifo in ifos %}
{{ifo}}-spcal-envelope:{{data['calibration'][ifo]}}
{% endfor %}

{% for ifo in ifos %}
{{ifo}}-psd:{{ production.psds[ifo] }}
{% endfor %}

a_spin1-max = 0.99
a_spin2-max = 0.99

{% if production.meta['priors'] contains "chirp mass" %}
chirpmass-min = {{ production.meta['priors']['chirp mass']['minimum'] }}
chirpmass-max = {{ production.meta['priors']['chirp mass']['maximum'] }}
{% endif %}

q-min = {{ production.meta['priors']['mass ratio']['minimum'] }}
comp-min = {{ production.meta['priors']['mass 1']['minimum'] }}
comp-max = {{ production.meta['priors']['mass 1']['maximum'] }}

distance-max = {{ production.meta['priors']['luminosity distance']['maximum'] }}
{% if  production.meta['priors'] contains "volume" %}
   {% if production.meta['priors']['volume'] == "comoving" %}
distance-prior-comoving-volume = 
   {% endif %}
{% endif %}                                                                                                              

[mpi]
mpi_task_count=8
machine-count=8
machine-memory=4000

[skyarea]
maxpts=2000

[resultspage]
skyres=0.5
deltaLogP = 7.5

[statevector]
state-vector-channel={'H1': 'H1:GDS-CALIB_STATE_VECTOR_C01', 'L1': 'L1:GDS-CALIB_STATE_VECTOR_C01', 'V1': 'V1:DQ_ANALYSIS_STATE_VECTOR'}
bits=['Bit 0', 'Bit 1', 'Bit 2']


[ligo-skymap-from-samples]
enable-multiresolution=

[ligo-skymap-plot]
annotate=
contour= 50 90
