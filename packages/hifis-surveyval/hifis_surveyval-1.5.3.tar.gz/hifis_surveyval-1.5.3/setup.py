# -*- coding: utf-8 -*-
from setuptools import setup

package_dir = \
{'': '.'}

packages = \
['hifis_surveyval',
 'hifis_surveyval.core',
 'hifis_surveyval.files',
 'hifis_surveyval.files.scripts',
 'hifis_surveyval.models',
 'hifis_surveyval.models.mixins',
 'hifis_surveyval.plotting',
 'hifis_surveyval.printing']

package_data = \
{'': ['*'], 'hifis_surveyval.plotting': ['plot_styles/*']}

install_requires = \
['click>=8.0',
 'matplotlib>=3.2.0',
 'numpy>=1.18.1',
 'pandas>=1.3.0',
 'pydantic>=1.8.1,<2.0.0',
 'python-dotenv>=0.21.0',
 'pyyaml>=5.3.1',
 'schema>=0.7.4,<0.8.0',
 'tabulate>=0.9.0']

entry_points = \
{'console_scripts': ['hifis-surveyval = hifis_surveyval.cli:cli']}

setup_kwargs = {
    'name': 'hifis-surveyval',
    'version': '1.5.3',
    'description': 'The HIFIS Surveyval Framework is a tool to analyse survey data from LimeSurvey data exports.',
    'long_description': '<!--\nhifis-surveyval\nFramework to help developing analysis scripts for the HIFIS Software survey.\n\nSPDX-FileCopyrightText: 2021 HIFIS Software <support@hifis.net>\n\nSPDX-License-Identifier: GPL-3.0-or-later\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <http://www.gnu.org/licenses/>.\n-->\n\n# HIFIS Surveyval Framework\n\n## What Is the Framework Intended For?\n\nThe _HIFIS Surveyval Framework_ is a tool to analyse data from _LimeSurvey_\ndata exports.\nIt is meant to fill the gap between _LimeSurvey_ and _Python_ data analysis and\nvisualisation libraries such as _Numpy_, _Pandas_ and _Matplotlib_.\nIt is not meant to replace them.\nWe aim at making life easier for people who are about to conduct _LimeSurvey_\nsurveys and who want to analyse the resulting survey data by providing a tested\nand working set of features, so that you need not reinvent the wheel for your\ndata analysis.\nWe recommend getting familiar with the framework before the survey is planned\nand conducted to make sure that your use case can be covered by the framework.\n\n## What Do You Need to Provide Yourself? \n\n### Metadata of Your Survey\n\nThe metadata that is describing your survey such as the list of questions and\nanswer options including their translations that are _not_ included in the\n_LimeSurvey_ data export file are given in a metadata _YAML_ file that you\nneed to provide by yourself.\nPlease have a look into the example metadata _YAML_ file given in this project\nto get an idea how this file is structured and which information need to be put\nthere.\n\n### Pre-processing Steps on Raw Data\n\nBefore the analysis is started, the raw data is pre-processed by a\npre-processing script that you need to write by yourself as well\nif data cleaning and other pre-processing steps need to be done for your\nsurvey data beforehand.\nIn order to get an impression how the pre-processing script can look like\nplease see the example pre-processing scripts provided in this project to get\nyou started.\n\n### Analysis Scripts for Your Survey Data Analysis\n\nUnder the hood the architecture of the framework is executing a series of\nindependent data analysis scripts written by yourself in an analysis run.\nAs a result, output will be generated in form of\n\n* terminal output on the CLI,\n* plots in different formats and \n* text files.\n\nThere are also example analysis scripts available in this project that you can\ntake a look at to understand how these analysis scripts make use of the\nframework.\n\n## Your Use Cases Are Not Covered?\n\nAs the name of the framework suggests it has been developed to aid in the\nanalysis of HIFIS surveys conducted for the Helmholtz Federated IT Services\n(HIFIS) platform.\nPlease be aware that as we try to develop a generic framework that can be\nused in many use cases, it might still be the case that the implemented\nfeatures arose from our use cases and are not applicable in your case.\nIf this is the case, please get in touch with us, so we can make things happen\nfor you.\nYou are also most welcome to contribute to the project with issues, bug fixes,\nfeature implementations, documentations and testing.\nThank you very much in advance for your valuable contributions!\n\n## Table of Content\n\n* [Installation](#installation)\n* [Getting Started](#getting-started)\n* [Start Analysis from Command-Line-Interface](#start-analysis-from-command-line-interface)\n* [Contribute with Own Analysis Scripts](#contribute-with-own-analysis-scripts)\n* [Resources](#resources)\n* [Author Information](#author-information)\n* [Contributors](#contributors)\n* [License](#license)\n\n## Getting Started\n\nThe project\'s documentation contains a section to help you as a \n[user of the analysis scripts](#getting-for-users) \nto run the analysis scripts or as a \n[developer of the framework](#getting-started-for-developers)\nto set up the development environment.\n\n### Getting Started for Users\n\n#### Installation\n\nTo install the package locally, you can use \n[Pip](https://pip.pypa.io/en/stable/).\n\n```shell\npip install hifis-surveyval\n```\n\nAfter the installation, you can use the tool from the command line with \n`hifis-surveyval --help`.\n\n### Getting Started for Developers\n\n#### Installation\n\nTo install the package locally, you can use \n[Poetry](https://python-poetry.org/).\n\n#### Using Poetry\n\nIf you want to actively contribute changes to the project, you are required to\nalso install the development packages alongside the framework.\n\n```shell\ngit clone https://gitlab.hzdr.de/hifis/overall/surveys/hifis-surveyval.git\ncd hifis-surveyval\npoetry install\n```\n\nAfter the installation, you can use the tool from the command line with \n`poetry run hifis-surveyval --help`\n\nPoetry installs some packages that are required for performing quality checks.\nUsually they are also performed via GitLab CI, but can also be executed locally.\n\nIt is common practice to run some checks locally before pushing them online.\nTherefore, execute below commands:\n```console\n$ # Order your imports\n$ isort -rc .\n$ make lint\n```\n\nThe following documentation references the pip installation.\nYou can use the same commands with a poetry installation, if you prefix your \ncommands with `poetry run COMMAND`.\n\n## Start Analysis from Command-Line-Interface\n\nThe survey analysis package is a program to be executed on the\nCommand-Line-Interface (CLI).\n\n### Quick Start Example: Run Analysis\n\nDue to sensible defaults of the project\'s configurations you need to have the \nanalysis scripts, the preprocessing script as well as metadata and data files\nin certain locations in order to run the survey analysis.\nThis configuration file _hifis-surveyval.yml_ which includes these defaults is\ncreated with the command `hifis-surveyval init`.\nPlease put your analysis scripts into a sub-folder called _scripts_.\nThe preprocessing script _preprocess.py_ is expected in the root folder of the\nproject.\nMake sure that the file _meta.yml_ is put into sub-folder _metadata_.\nFinally, copy the CSV data file of your survey to a central location like a\n_data_ sub-folder and tell the program the path to that data file on the\ncommand line when running the survey analysis.\n\nNow you can do the following to start the survey analysis from the CLI:\n\n```shell script\nhifis-surveyval analyze data/<data_file_name>.csv\n```\n\nThe output is then put into a sub-folder within the folder _output_ \nwhich is named after the stamp of the current date-time if not specified \ndifferently.\n\n**Caution:** \nDepending on the Operating System used an issue with the file \nencoding might occur.\nThere might be data-CSV-files around which are encoded with `UTF-8-BOM`\nwhich causes errors when read in on Windows OS.\nIn this case you need to change the encoding to `UTF-8` before running\nthe survey analysis.\n\n### Flags\n\nThe program accepts two flags:\n\n1. Help flag\n2. Verbosity flag\n\n#### Help flag\n\nCalling the program with the _help_-flag is the first thing to do\nwhen being encountered with this program.\nIt outputs a so-called _Usage_-message to the CLI:\n\n```shell script\n$ hifis-surveyval --help\n```\n\nPlease issue this command on the CLI and read the detailed \n_Usage_-message before continuing with reading the documentation\nof the _Usage_-message here.\n\n#### Verbosity flag\n\nThe _verbosity_-flag can be provided in order to specify the verbosity\nof the output to the CLI.\nThis flag is called `--verbose` or `-v` for short:\n\n```shell script\nhifis-surveyval --verbose <COMMAND>\n```\n```shell script\nhifis-surveyval -v <COMMAND>\n```\n\nThe verbosity of the output can be increased even more \nby duplicating the flag `--verbose` or `-v` up to two times:\n\n```shell script\nhifis-surveyval --verbose --verbose --verbose <COMMAND>\n```\n```shell script\nhifis-surveyval -vvv <COMMAND>\n```\n\n### Commands\n\nThere are three different commands implemented which come with its own set of\nflags and parameters:\n\n1. Command _version_\n2. Command _init_\n3. Command _analyze_\n\n#### Command _version_\n \nThe `version` command outputs the version number of this CLI-program like so:\n\n```shell script\nhifis-surveyval version\n```\n\n#### Command _init_\n\nBefore you start the analysis you may want to change the defaults of the\nconfiguration variables.\nIn order to do so, you can create a configuration file that is named \n_hifis-surveyval.yml_ by issuing the _init_ command:\n\n```shell script\nhifis-surveyval init\n```\n\nThis file contains the following information:\n\n```YAML\nANONYMOUS_QUESTION_ID: _\nDATA_ID_SEPARATOR: _\nHIERARCHY_SEPARATOR: /\nID_COLUMN_NAME: id\nMETADATA: metadata\nOUTPUT_FOLDER: output\nOUTPUT_FORMAT: SCREEN\nPREPROCESSING_FILENAME: preprocess.py\nSCRIPT_FOLDER: scripts\nSCRIPT_NAMES: []\nCUSTOM_PLOT_STYLE: "report_style"  # Optional\n```\n\n> ##### Concepts that You Need to Know\n>\n>- **QuestionCollection**: This concept refers to a set of `Questions` that \n>  cover the same topic.\n>- **Question**: This concept refers to an atomic `Question` that can not be on\n>  its own and needs to be wrapped up into a `QuestionCollection`.\n> \n> *Note:* Other terms that may describe similar concepts are `question`\n> (which equals to `QuestionCollection`) and `sub-question` (which equals to\n> `Question`).\n\n> ##### Configuration File Entries Explained\n>\n> - `ANONYMOUS_QUESTION_ID` defines a placeholder for Question IDs. The CSV data\n>  might not explicitly mention a full ID of a Question but solely the\n>  QuestionCollection ID. In this case the HIFIS Surveyval Framework adds a\n>  character, by default *_* (underscore), to the QuestionCollection ID to mark\n>  this situation.\n> - The CSV data file is structured into header and body rows. The header row\n>  consists of a comma-separated list of column names. Some column names contain\n>  a separator character that concatenates the QuestionCollection ID with the\n>  Question ID, the `DATA_ID_SEPARATOR`. This variable indicates which character \n>  is used to separate these IDs. If not specified otherwise, it defaults to\n>  *_* (underscore).\n>- This `DATA_ID_SEPARATOR` character is internally replaced by a different\n>  character, the so called `HIERARCHY_SEPARATOR`, which defaults to a */*\n>  (slash).\n>- With `ID_COLUMN_NAME` you may want to specify the name of the _id_ column in\n>  the CSV data file.\n>- Each analysis needs metadata about the questions asked in the survey and\n>  answers that participants may give. Setting `METADATA` specifies the location\n>  of the metadata files which are by default located in a folder called\n>  _metadata_. Be aware that it is recommended to have one YAML file per\n>  QuestionCollection. Each YAML file then covers the metadata of a single\n>  QuestionCollection and is named according to the ID of this\n>  QuestionCollection.\n>- You may specify the output folder by setting `OUTPUT_FOLDER` which is named\n>  _output_ by default.\n>- You may prefer a specific output format like _PDF_, _PNG_, _SVG_ or\n>  _SCREEN_ which you may select via `OUTPUT_FORMAT`.\n>  The default value is _SCREEN_.\n>  Note: Be aware that other output formats like text or markdown files may be\n>  created, which depends largely upon the implementation of the analysis\n>  scripts.\n>- You might want to tell the program where to find the preprocessing file\n>  _preprocess.py_ that preprocesses and filters your survey data according to \n>  specific rules.\n>  You can do so by setting `PREPROCESSING_FILENAME`.\n>- You may specify the folder which contains the analysis scripts with setting\n>  `SCRIPT_FOLDER`, which is the _scripts_ folder by default.\n>- With `SCRIPT_NAMES` you may select a subset of the analysis scripts available\n>  as a list that ought to be executed.\n>  This list is empty by default, which means, all scripts are executed.\n\n---\n\n> **Hint for LimeSurvey Users**\n>\n> There is an option `Expression Manager code` in LimeSurvey when exporting the\n> data into a CSV file that uses the separator character `_` (underscore) to\n> concatenate QuestionCollection ID and Question ID in the CSV data header. \n> Otherwise the default `[]` is used which is not compatible with the HIFIS\n> Surveyval Framework.\n\n---\n\n##### Additional Files Generated\n\nAdditional to the configuration file, three more files are created:\n\n1. File _preprocess.py_ is created in the root folder of the project.\n2. File _example_script.py_ is created in the _scripts_ folder of the project.\n3. File _style_template.mplstyle_ is created in the _custom_plot_styles_\nfolder of the project.\n\n#### Command _analyze_\n\nThe more interesting command is the `analyze` command\nwhich comes with a _data_-parameter.\nThe _data_-parameter can _not_ be omitted and need to be given explicitly\nin order to be able to start the analysis.\nThis is an example of how to do the analysis:\n\n```shell script\nhifis-surveyval analyze data/<data_file_name>.csv\n```\n\n## Contribute with Own Analysis Scripts\n\n### Essential Requirements for Developing Own Analysis Scripts\n\nAs you might have read in the previous sections the actual analysis scripts \nreside in a specific folder called `scripts`.\nAll scripts in that folder will be automatically discovered by the package \n`hifis-surveyval` when running the analysis.\nIn order that the program recognizes the scripts in that folder as\nanalysis scripts they need to fulfill the following two criteria:\n\n1. The filename need to end on `.py`.\n2. The file need to contain a function called `run` without any parameters.\n\n```python\n"""\nA dummy script for testing the function dispatch\n\n.. currentmodule:: hifis_surveyval.scripts.dummy\n.. moduleauthor:: HIFIS Software <software@hifis.net>\n"""\n\ndef run():\n    print("Example Script")\n```\n\nIf both requirements are satisfied the program will execute the `run`-functions\nof the analysis scripts in an arbitrary order.\n\n### File-System Structure of the Core Component\n\n```shell script\n$ tree hifis_surveyval/\nhifis_surveyval\n├── cli.py\n├── core\n│   ├── dispatch.py\n│   ├── preprocess.py\n│   ├── settings.py\n│   └── util.py\n├── data_container.py\n├── files\n│   ├── example_preprocess.py\n│   ├── example_script.py\n│   ├── preprocess.py\n│   ├── scripts\n│   │   └── example-01-accessing-data.py\n│   └── style_template.mplstyle\n├── hifis_surveyval.py\n├── models\n│   ├── answer_option.py\n│   ├── answer_types.py\n│   ├── mixins\n│   │   ├── mixins.py\n│   │   ├── uses_settings.py\n│   │   └── yaml_constructable.py\n│   ├── question_collection.py\n│   ├── question.py\n│   └── translated.py\n├── plotting\n│   ├── matplotlib_plotter.py\n│   ├── plot_styles\n│   │   └── report_style.mplstyle\n│   ├── plotter.py\n│   └── supported_output_format.py\n└── printing\n    └── printer.py\n```\n\n### Matplotlib Custom Plot Styles\n\nFiles with file ending `.mplstyle` contain styling information for _Matplotlib_\nplots.\nAn example Matplotlib plot style template called `style_template.mplstyle` is\ncreated with the `init`-command of the _HIFIS-Surveyval_ framework.\nThese files can be put in a folder called `custom_plot_styles`.\nCustom plot style files that are generally used within the framework need to be\nput into folder `hifis_surveyval/plotting/plot_styles/`.\nPlots created with _Matplotlib_ accept a `kwargs`-argument `plot_style_name`\nwhich chooses which plot style to use for the plot.\nStyles in folder `custom_plot_styles` have precedence over styles in folder\n`hifis_surveyval/plotting/plot_styles/` if they have the same name.\n\n## Resources\n\nBelow are some handy resource links:\n\n* [Project Documentation](TODO)\n* [Click](https://click.palletsprojects.com/en/7.x) is a Python package for creating beautiful command line interfaces in a composable way with as little code as necessary.\n* [Sphinx](http://www.sphinx-doc.org/en/master/) is a tool that makes it easy to create intelligent and beautiful documentation, written by Geog Brandl and licnsed under the BSD license.\n* [pytest](https://docs.pytest.org/en/latest/) helps you write better programs.\n* [GNU Make](https://www.gnu.org/software/make/) is a tool which controls the generation of executables and other non-source files of a program from the program\'s source files.\n\n## Author Information\n\n_HIFIS-Surveyval_ was created by \n[HIFIS Software Services](https://software.hifis.net/).\n\n## Contributors\n\nWe would like to thank and give credits to the following contributors of this\nproject:\n\n* Be the first to be named here!\n\n## License\n\nCopyright © 2021 HIFIS Software <support@hifis.net>\n\nThis work is licensed under the following license(s):\n* Everything else is licensed under [GPL-3.0-or-later](LICENSES/GPL-3.0-or-later.txt)\n\nPlease see the individual files for more accurate information.\n\n> **Hint:** We provided the copyright and license information in accordance to the [REUSE Specification 3.0](https://reuse.software/spec/).\n',
    'author': 'HIFIS Software',
    'author_email': 'software@hifis.net',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'https://codebase.helmholtz.cloud/hifis/overall/surveys/hifis-surveyval',
    'package_dir': package_dir,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.8.1,<3.12',
}


setup(**setup_kwargs)
